<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL数据库相关操作</title>
    <link href="/2022/12/27/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/12/27/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="MySQL相关语句命令说明"><a href="#MySQL相关语句命令说明" class="headerlink" title="MySQL相关语句命令说明"></a>MySQL相关语句命令说明</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mysql -u root -p;</td><td align="center">登录MySQL</td></tr><tr><td align="center">show databases;</td><td align="center">展示所有的数据库</td></tr><tr><td align="center">create database xxx charset utf8;</td><td align="center">创建名为xxx的数据库</td></tr><tr><td align="center">drop database xxx;</td><td align="center">删除名为xxx的数据库</td></tr><tr><td align="center">use database;</td><td align="center">选择数据库</td></tr><tr><td align="center">show tables;</td><td align="center">展示所有的表</td></tr><tr><td align="center">show create database xxxx;</td><td align="center">显示是否能够创建xxxx的数据库</td></tr><tr><td align="center">show create table xxxx;</td><td align="center">显示是否能够创建xxxx的表</td></tr><tr><td align="center">desc xxxxx;</td><td align="center">查看表xxxxx结构</td></tr></tbody></table><h3 id="增删改查语句命令说明"><a href="#增删改查语句命令说明" class="headerlink" title="增删改查语句命令说明"></a>增删改查语句命令说明</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">insert</td><td align="center">增加</td></tr><tr><td align="center">delete</td><td align="center">删除</td></tr><tr><td align="center">update</td><td align="center">更改</td></tr><tr><td align="center">select</td><td align="center">查找</td></tr></tbody></table><h3 id="操作表相关语句命令实例-属性名-key"><a href="#操作表相关语句命令实例-属性名-key" class="headerlink" title="操作表相关语句命令实例(属性名 key)"></a>操作表相关语句命令实例(属性名 key)</h3><ol><li>创建表：创建一个表名为xxxx，表中包含id、name、salary、sex、job字段</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table xxxx(<br>  id int,<br>  name varchar(32),<br>  salary int,<br>  sex char(4),<br>  job varchar(128)<br>);<br></code></pre></td></tr></table></figure><ol start="2"><li>表中增加avatar字段：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx add avatar blob;<br></code></pre></td></tr></table></figure><ol start="3"><li>删除表中sex字段列：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx drop sex;<br></code></pre></td></tr></table></figure><ol start="4"><li>修改表中job字段长度：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx modify job varchar(64);<br></code></pre></td></tr></table></figure><ol start="5"><li>修改表中name字段名为username：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx change column name username varchar(68);<br></code></pre></td></tr></table></figure><ol start="6"><li>修改表名xxxx为yyyy：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">rename table xxxx to yyyy;<br></code></pre></td></tr></table></figure><ol start="7"><li>修改表的字符集为utf-8：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table yyyy character set utf8;<br></code></pre></td></tr></table></figure><ol start="8"><li>删除表：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop table yyyy;<br></code></pre></td></tr></table></figure><h3 id="操作表数据相关语句命令实例-属性值-value"><a href="#操作表数据相关语句命令实例-属性值-value" class="headerlink" title="操作表数据相关语句命令实例(属性值 value)"></a>操作表数据相关语句命令实例(属性值 value)</h3><ol><li>创建表：创建一个表名为xxxx，表中包含id、name、salary、sex、job字段；</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table xxxx(<br>  id int,<br>  name varchar(32),<br>  salary decimal(8,2),<br>  sex varchar(4),<br>  job varchar(128)<br>);<br></code></pre></td></tr></table></figure><ol start="2"><li>新增数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 新增一条完整数据<br>insert into xxxx(id,name,salary,sex,job) valus(&#x27;100&#x27;,&#x27;张三&#x27;,&#x27;5000&#x27;,&#x27;male&#x27;,&#x27;程序猿&#x27;);<br>// 新增一条数据<br>insert into xxxx(id,name,salary) valus(&#x27;101&#x27;,&#x27;李四&#x27;,&#x27;6000&#x27;);<br>// 新增一条特定数据<br>insert into xxxx(id) valus(&#x27;102&#x27;);<br></code></pre></td></tr></table></figure><ol start="3"><li>删除数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 删除表中name为‘李四’的数据；<br>delete from xxxx where name=&#x27;李四&#x27;;<br>// 删除表中所有的数据；<br>delete from xxxx;<br></code></pre></td></tr></table></figure><ol start="4"><li>修改表数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 更改所有员工的薪资为9000元；<br>update xxxx set salary=9000;<br>// 更改员工名为‘张三’的薪资为10000元；<br>update xxxx set salary=10000 where name=&#x27;张三&#x27;;<br>// 将名为‘张三’的员工涨薪1000元，岗位更改为‘高级程序猿’；<br>update xxxx set salary=salary+1000 where name=&#x27;张三&#x27;;<br></code></pre></td></tr></table></figure><ol start="5"><li>查询数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 查询所有数据；<br>select * from xxxx;<br>// 查询表中name和salary的数据；<br>select name,salary from xxxx;<br>// 条件查询表中name为‘张三’的数据；<br>select * from xxxx where name=&#x27;张三&#x27;;<br>// 条件查询表中薪资再5000~10000元的员工名；<br>select name from xxxx where salary&gt;=5000 and salary&lt;=10000;<br></code></pre></td></tr></table></figure><h3 id="MySQL相关字段类型说明"><a href="#MySQL相关字段类型说明" class="headerlink" title="MySQL相关字段类型说明"></a>MySQL相关字段类型说明</h3><table><thead><tr><th align="center">字段</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">primary key</td><td align="center">主键</td></tr><tr><td align="center">unique</td><td align="center">唯一</td></tr><tr><td align="center">charset</td><td align="center">指定字符集</td></tr><tr><td align="center">default</td><td align="center">默认值</td></tr><tr><td align="center">not null</td><td align="center">不能为空</td></tr><tr><td align="center">auto_increment</td><td align="center">自增长</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Navicat设计字段总结</title>
    <link href="/2022/12/27/Navicat%E8%AE%BE%E8%AE%A1%E5%AD%97%E6%AE%B5%E6%80%BB%E7%BB%93/"/>
    <url>/2022/12/27/Navicat%E8%AE%BE%E8%AE%A1%E5%AD%97%E6%AE%B5%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>1、经常变化的字段用varchar；</p><p>2、知道固定长度的用char；</p><p>3、超过255字节的只能用varchar或者text；</p><p>4、能用varchar的地方不用text；</p><p>5、能够用数字类型的字段尽量选择数字类型而不用字符串类型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接回逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了；</p><p>6、同一张表出现多个大字段，能合并时尽量合并，不能合并时考虑分表，原因请考 优化InnoDB表BLOB,TEXT列的存储效率</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>centOS7 安装MySQL</title>
    <link href="/2022/12/27/%E9%98%BF%E9%87%8C%E4%BA%91centOS7%20%E5%AE%89%E8%A3%85MySQL/"/>
    <url>/2022/12/27/%E9%98%BF%E9%87%8C%E4%BA%91centOS7%20%E5%AE%89%E8%A3%85MySQL/</url>
    
    <content type="html"><![CDATA[<ol><li>在使用阿里云<code>ECS</code>进行<code>ssh</code>时【使用<code>ssh</code>客户端连接阿里云服务器】，只要稍稍过一段时间不操作就会自动断开连接，输入以下命令，解决办法如下：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># vim /etc/ssh/sshd_config</span><br><br>找到以下两项配置[默认情况下，此两项是注释掉的]:<br>#ClientAliveInterval <span class="hljs-number">0</span><br>#ClientAliveCountMax <span class="hljs-number">3</span><br><br>将其修改为：<br>ClientAliveInterval <span class="hljs-number">30</span><br>ClientAliveCountMax <span class="hljs-number">86400</span><br><br>具体含义:<br><span class="hljs-number">1</span>、客户端每隔多少秒向服务发送一个心跳数据，<span class="hljs-number">30</span>秒<br><span class="hljs-number">2</span>、客户端多少秒没有相应，服务器自动断掉连接，配置的是<span class="hljs-number">24</span>小时<br>    <br>:wq退出<br></code></pre></td></tr></table></figure><ol start="2"><li>去 <a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a> 下载MySQL安装包；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">product version：选择版本；<br><br>operating System：操作系统； 选择Red Hat Enterprise Linux / Oracle Linux<br><br>OS Version：版本；选择all<br></code></pre></td></tr></table></figure><ol start="3"><li>将下载的包放到服务器&#x2F;root目录下；再执行解压指令；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># tar -xvf mysql.xx.xx.xx-x.elxx.x86_64.rpm.bundle.tar;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>删除服务器上自带的mariadb</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># rpm -qa|grep mariadb;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -e --nodeps mariadb-libs;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>按顺序安装MySQL的相关文件</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-community-common-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-community-client-plugins-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-libs-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-client-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-icu-data-files-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-serve-xxxx-xxxx-xxx-xxx-xxx;</span><br></code></pre></td></tr></table></figure><ol start="6"><li>关于libaio报错安装</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># yum -y install libaio;<span class="hljs-comment">//安装libaio包 再去安装报错的指令；</span></span><br></code></pre></td></tr></table></figure><ol start="7"><li>初始化MySQL</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># mysqld --initialize --console;</span><br>[root@shaoin ~]<span class="hljs-meta"># chown -R mysql:mysql /var/lib/mysql/</span><br>[root@shaoin ~]<span class="hljs-meta"># systemctl start mysqld</span><br>[root@shaoin ~]<span class="hljs-meta"># cat /var/log/mysqld.log|grep localhost <span class="hljs-comment">// 查询初始默认密码；</span></span><br>[root@shaoin ~]<span class="hljs-meta"># mysql -uroot -p</span><br>Enter password:       <span class="hljs-comment">//输入默认密码</span><br></code></pre></td></tr></table></figure><ol start="8"><li>修改密码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">mysql&gt; alter user <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br>[root@shaoin ~]<span class="hljs-meta"># mysql -uroot -p</span><br>Enter password:       <span class="hljs-comment">//输入123456</span><br>mysql&gt; show databases;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>阿里云centOS7 安装MySQL</title>
    <link href="/2022/12/27/%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9ACannot%20find%20module%20%E2%80%98@vuecli-shared-utils%E2%80%98/"/>
    <url>/2022/12/27/%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9ACannot%20find%20module%20%E2%80%98@vuecli-shared-utils%E2%80%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>运行vue项目的时候出现报错<code>Cannot find module ‘@vue/cli-shared-utils‘</code>，之前还都一切正常。怎么就报错了？<br><img src="https://img-blog.csdnimg.cn/1eda0adb02454f3f87ed0e8b03dfe241.png#pic_center" alt="报错图片展示"></p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>在运行项目前，我修改了项目的名称。&#x3D;&#x3D;webpack&#x3D;&#x3D;脚手架初始化项目的时候，会把项目路径名被编译进去。</p><p>所以初始化完成后尽量不要修改文件夹名称或者项目名称。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>将<code>node_modules</code>依赖包删除，再重新安装依赖包。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">npm cache clear --force <span class="hljs-comment">// 清除依赖缓存</span><br><br>npm install <span class="hljs-comment">// 或者cnpm</span><br><br>npm run serve <br></code></pre></td></tr></table></figure><p>问题可以解决。如果不想重新安装，那就将修改的文件名，改回之前的名称。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>连接阿里云服务器MySQL出现的问题</title>
    <link href="/2022/10/24/%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/10/24/%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ol><li>** Nodejs 连接云服务器 MySQL 数据库报错：**Host  xx.xx.xxx.xxx  is not allowed to connect to this MySQL server；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 先登录<br>mysql -u root -p<span class="hljs-string">&quot;123456&quot;</span>;<br>use mysql;<br>select host <span class="hljs-keyword">from</span> user where user=<span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-number">2.</span> <span class="hljs-title class_">Host</span> = <span class="hljs-string">&#x27;%&#x27;</span>，表示所有 <span class="hljs-variable constant_">IP</span> 都有连接权限，实际应根据生产环境的 <span class="hljs-variable constant_">IP</span> 进行设置<br>update user set host = <span class="hljs-string">&#x27;%&#x27;</span> where user =<span class="hljs-string">&#x27;root&#x27;</span>; <br><span class="hljs-number">3.</span> 刷新权限，让修改生效。<br>flush privileges;<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>需要修改加密规则报错：</strong>Client does not support authentication protocol requested by server; consider upgrading MySQL client；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 先登录<br>mysql -u root -p<span class="hljs-string">&quot;123456&quot;</span><br><span class="hljs-number">2.</span> 修改加密方式<br><span class="hljs-variable constant_">ALTER</span> <span class="hljs-variable constant_">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;password&#x27;</span> <span class="hljs-variable constant_">PASSWORD</span> <span class="hljs-variable constant_">EXPIRE</span> <span class="hljs-variable constant_">NEVER</span>; <span class="hljs-comment">// password是正在使用的密码</span><br><span class="hljs-number">3.</span> 修改密码<br><span class="hljs-variable constant_">ALTER</span> <span class="hljs-variable constant_">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">WITH</span> mysql_native_password <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>; <span class="hljs-comment">// password新的密码</span><br><span class="hljs-number">4.</span> 刷新权限，让修改生效。<br><span class="hljs-variable constant_">FLUSH</span> <span class="hljs-variable constant_">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Navicat设计字段总结</title>
    <link href="/2022/08/01/uniapp%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E3%80%81%E6%8E%88%E6%9D%83%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81/"/>
    <url>/2022/08/01/uniapp%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E3%80%81%E6%8E%88%E6%9D%83%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>uniapp开发支付宝小程序授权用户信息和用户手机号码过程中，与微信小程序的API是有所不同的，相同是都是需要<code>&lt;button&gt;&lt;/button&gt;</code>点击事件触发。接下来简单说明一下支付宝小程序授权用户信息和用户手机号码的方法。</p><h3 id="完成需求"><a href="#完成需求" class="headerlink" title="完成需求"></a>完成需求</h3><p>授权用户手机号码前，需要先在支付宝开放平台—&gt;控制台—&gt;产品绑定，绑定产品 – <code>获取会员手机号</code> </p><p><img src="https://img-blog.csdnimg.cn/f4954b4c45ff42e5bbb1e433df40bb9a.png#pic_center" alt="在这里插入图片描述"><br>用到的API：<code>uni.getOpenUserInfo</code>，<code>uni.getPhoneNumber</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding:30rpx&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-navbar</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;演示&quot;</span> <span class="hljs-attr">:is-back</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top:100rpx&quot;</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;getAuthorize&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;userInfo&quot;</span> @<span class="hljs-attr">getAuthorize</span>=<span class="hljs-string">&quot;getOpenUserInfo&quot;</span> @<span class="hljs-attr">error</span>=<span class="hljs-string">&quot;getInfoError&quot;</span>&gt;</span><br>个人信息授权<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top:100rpx&quot;</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;getAuthorize&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&#x27;phoneNumber&#x27;</span> @<span class="hljs-attr">getAuthorize</span>=<span class="hljs-string">&quot;getPhoneNumber&quot;</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;getPhoneError&quot;</span>&gt;</span><br>手机号码授权<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 触发</span></span><br><span class="language-javascript"><span class="hljs-title function_">getOpenUserInfo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">getOpenUserInfo</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> userinfo = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res.<span class="hljs-property">response</span>).<span class="hljs-property">response</span></span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(userinfo)</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权个人信息成功&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权个人信息失败&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-comment">// 授权失败回调</span></span><br><span class="language-javascript"><span class="hljs-title function_">getInfoError</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;取消授权个人信息&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">getPhoneNumber</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">getPhoneNumber</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> encryptedData = res.<span class="hljs-property">response</span>;</span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(encryptedData)</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;获得手机号码加密数据成功&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">uni.<span class="hljs-title function_">request</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;开发者的后端服务端&#x27;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">data</span>: encryptedData,</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权手机号码失败&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">getPhoneError</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;取消手机号码授权&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><table>    <tr>        <td><center><img src="https://img-blog.csdnimg.cn/45d6d32ff9fa40cd99a8f4c5614ac8ba.png"  >图1 演示页面</center></td>        <td ><center><img src="https://img-blog.csdnimg.cn/140e3b3c9c5049e3869cdfecafca4230.png" >图2 弹出授权用户信息</center> </td>           <td ><center><img src="https://img-blog.csdnimg.cn/517c47bfadf746168a3789c8a99d762e.png"  >图2 弹出用户手机号</center> </td>    </tr></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uView 中select组件确认选择问题</title>
    <link href="/2022/07/21/uView%20%E4%B8%ADselect%E7%BB%84%E4%BB%B6%E7%A1%AE%E8%AE%A4%E9%80%89%E6%8B%A9%E9%97%AE%E9%A2%98/"/>
    <url>/2022/07/21/uView%20%E4%B8%ADselect%E7%BB%84%E4%BB%B6%E7%A1%AE%E8%AE%A4%E9%80%89%E6%8B%A9%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小程序中引用uView ui 中<code>select</code>组件（单列模式）。出现第一次选择了列表中的某一项，再次唤起select组件时，直接点击确认。<code>confirm</code>事件返回的是列表中的第一项数据，而不是第一次选中的数据。</p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>需要用到<code>select</code>组件中的<code>default-value</code>参数和<code>findIndex()</code>数组方法。</p><ul><li>default-value：提供的默认选中的下标（index），传值为数组 例：[0]</li><li>findIndex()：返回数组中通过条件判断的第一个元素的索引</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;station&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择站点&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showStation = true&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;showStation&quot;</span> <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;stationList&quot;</span> <span class="hljs-attr">:default-value</span>=<span class="hljs-string">&quot;selectDefault&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;selectStation&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">station</span>:<span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">showStation</span>:<span class="hljs-literal">false</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">selectDefault</span>:[<span class="hljs-number">0</span>],</span><br><span class="language-javascript"><span class="hljs-attr">stationList</span>:[</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;东站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1001&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;西站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1002&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;南站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1003&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;北站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1004&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                ]</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">selectStation</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">station</span> = val[<span class="hljs-number">0</span>].<span class="hljs-property">label</span>;</span><br><span class="language-javascript">                <span class="hljs-comment">// 将默认下标赋值为当前选中的下标</span></span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">selectDefault</span> = [<span class="hljs-variable language_">this</span>.<span class="hljs-property">stationList</span>.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span> === val[<span class="hljs-number">0</span>].<span class="hljs-property">value</span>)] || [<span class="hljs-number">0</span>]; </span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">selectDefault</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>如果选项列表的 value 值刚好与 选项列表的下标index相同时，可以直接将value以数组的形式赋值给selectDefault。不需要findIndex()的筛选操作。</strong></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端面试常见问题总结</title>
    <link href="/2022/07/20/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <url>/2022/07/20/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h3 id="问题陈列"><a href="#问题陈列" class="headerlink" title="问题陈列"></a>问题陈列</h3><h4 id="JS相关问题"><a href="#JS相关问题" class="headerlink" title="JS相关问题"></a>JS相关问题</h4><ul><li><h5 id="JavaScript原型，原型链-有什么特点？"><a href="#JavaScript原型，原型链-有什么特点？" class="headerlink" title="JavaScript原型，原型链 ? 有什么特点？"></a>JavaScript原型，原型链 ? 有什么特点？</h5><p>每个对象都会在其内部初始化一个属性，就是prototype(原型)。<br>当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。</p></li><li><h5 id="This对象的理解"><a href="#This对象的理解" class="headerlink" title="This对象的理解"></a>This对象的理解</h5><p>this总是指向函数的直接调用者;<br>如果有new关键字，this指向new出来的那个对象;</p></li></ul><p>this的指向问题：<br>1.作为对象的属性被调用，this指向该对象<br>2.作为普通函数得调用，this总是指向全局对象（通常为window），严格模式下this指向undefined<br>3.作为构造器调用，通常情况下this指向被构造函数返回的实例，例外如果构造函数显式的返回一个Object类型的对象，name结构也是只会得到这个对象<br>4.call和apply调用<br>    动态改变this指向，使用一个指定的this值和单独给出的一个或多个参数来调用一个函数<br>    允许为不同的对象分配和调用属于一个对象的函数&#x2F;方法<br>    call()方法：指定的this + 多个参数<br>    apply()方法：指定的this + 一个包含多个参数的数组<br>5.箭头函数，箭头函数不会创建自己的this，它会从自己的作用域的上一层继承this</p><ul><li><h5 id="null，undefined-的区别？"><a href="#null，undefined-的区别？" class="headerlink" title="null，undefined 的区别？"></a>null，undefined 的区别？</h5>null 表示一个对象是“没有值”的值，也就是值为“空”；undefined 表示一个变量声明了没有初始化(赋值)；<br>undefined不是一个有效的JSON，而null是；<br>undefined的类型(typeof)是undefined；null的类型(typeof)是object；</li><li><h5 id="JS-深浅拷贝"><a href="#JS-深浅拷贝" class="headerlink" title="JS 深浅拷贝"></a>JS 深浅拷贝</h5>深拷贝和浅拷贝是只针对引用数据类型，例如：Object和Array；<br>浅拷贝只复制指向某个对象的指针而不复制对象本身，新旧对象还是共享同一块内存；<br>深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象；</li></ul><p>深拷贝方法：<br>    1.JSON.parse(JSON.stringify(obj))<br>    原理： 用JSON.stringify将对象转成JSON字符串，再用JSON.parse()把字符串解析成对象，一去一来，新的对象产生了，而且对象会开辟新的栈，实现深拷贝。<br>    2.递归方法实现深度克隆原理：遍历对象、数组直到里边都是基本数据类型，然后再去复制，就是深度拷贝</p><ul><li><h5 id="闭包的概念"><a href="#闭包的概念" class="headerlink" title="闭包的概念"></a>闭包的概念</h5>闭包就是能够读取其他函数内部变量的函数，在本质上是函数内部和函数外部链接的桥梁</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 经典问题</span><br><span class="hljs-keyword">var</span> arr = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br>    arr[i] = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;<br>&#125;<br>arr[<span class="hljs-number">0</span>](); <span class="hljs-comment">// 10</span><br>arr[<span class="hljs-number">1</span>](); <span class="hljs-comment">// 10</span><br>arr[<span class="hljs-number">2</span>](); <span class="hljs-comment">// 10</span><br><br><span class="hljs-comment">// 利用闭包来解决</span><br><span class="hljs-keyword">var</span> arr = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br>    arr[i] = (<span class="hljs-keyword">function</span> (<span class="hljs-params">i</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<br>        &#125;<br>    &#125;)(i)<br>&#125;<br>arr[<span class="hljs-number">0</span>](); <span class="hljs-comment">// 0</span><br>arr[<span class="hljs-number">1</span>](); <span class="hljs-comment">// 1</span><br>arr[<span class="hljs-number">2</span>](); <span class="hljs-comment">// 2</span><br></code></pre></td></tr></table></figure><p><strong>闭包处理的还是作用域的问题，解决该问题的方法还可以是利用ES6语法，var声明改成let声明</strong></p><h4 id="浏览器相关问题"><a href="#浏览器相关问题" class="headerlink" title="浏览器相关问题"></a>浏览器相关问题</h4><ul><li><h5 id="前端页面有哪三层构成，分别是什么？作用是什么？"><a href="#前端页面有哪三层构成，分别是什么？作用是什么？" class="headerlink" title="前端页面有哪三层构成，分别是什么？作用是什么？"></a>前端页面有哪三层构成，分别是什么？作用是什么？</h5>分成：结构层、表示层、行为层</li></ul><p>结构层：由 HTML 或 XHTML之类的标记语言负责创建。标签，也就是那些出现在尖括号里的单词，对网页内容的语义含义做出了描述，但这些标签不包含任何关于如何显示有关内容的信息。例如，P标签表达了这样一种语义：“这是一个文本段。”</p><p>表示层：由 CSS 负责创建。 CSS对“如何显示有关内容”的问题做出了回答。</p><p>行为层：负责回答“内容应该如何对事件做出反应”这一问题。这是 Javascript 语言和 DOM主宰的领域。</p><ul><li><h5 id="你知道TCP协议、IP协议、HTTP协议分别在哪一层吗"><a href="#你知道TCP协议、IP协议、HTTP协议分别在哪一层吗" class="headerlink" title="你知道TCP协议、IP协议、HTTP协议分别在哪一层吗"></a>你知道TCP协议、IP协议、HTTP协议分别在哪一层吗</h5><p>TCP协议在传输层，IP协议在网络层，HTTP协议在应用层。</p></li><li><h5 id="请说出三种减少网页加载时间的方法"><a href="#请说出三种减少网页加载时间的方法" class="headerlink" title="请说出三种减少网页加载时间的方法"></a>请说出三种减少网页加载时间的方法</h5></li></ul><p>1.服务器角度<br>采取CDN加速，开启gzip压缩，允许使用强缓存或协商缓存，增加服务器带宽</p><p>2.客户端角度<br>合理组织CSS、JavaScript代码位置，减少DOM操作、添加事件委托，部分操作可设置防抖和节流，对于可预见的操作采取preload或prerender的预加载，对于图片可以懒加载，合并CSS图片（精灵图&#x2F;雪碧图），减少使用iframe，资源优化打包角度</p><p>3.资源优化打包角度<br>使用打包工具将Js文件、CSS文件和静态文件进行恰当打包处理。</p><ul><li><h5 id="什么情况下会遇到跨域问题"><a href="#什么情况下会遇到跨域问题" class="headerlink" title="什么情况下会遇到跨域问题"></a>什么情况下会遇到跨域问题</h5></li></ul><p>跨域问题来自于浏览器的同源策略，即当协议、域名、端口号任意一个不同时，都会引发跨域问题。</p><p>解决方法：jsonp、CORS</p><ul><li><h5 id="宏任务和微任务"><a href="#宏任务和微任务" class="headerlink" title="宏任务和微任务"></a>宏任务和微任务</h5></li></ul><p>宏任务是由宿主发起的（Node、浏览器），而微任务由JavaScript自身发起（JS引擎）。</p><table><thead><tr><th></th><th>宏任务（macrotask）</th><th>微任务（microtask）</th></tr></thead><tbody><tr><td>发起者</td><td>Node、浏览器</td><td>JS引擎</td></tr><tr><td>具体事件</td><td>1. script (可以理解为外层同步代码) <br />2. setTimeout&#x2F;setInterval<br />3. UI rendering&#x2F;UI事件<br />4. postMessage，MessageChannel<br />5. setImmediate，I&#x2F;O（Node.js）</td><td>1. Promise <br />2. MutaionObserver<br />3. Object.observe（已废弃；<code>Proxy</code> 对象替代）<br />4. process.nextTick（Node.js）</td></tr><tr><td>运行顺序</td><td>后运行</td><td>先运行</td></tr><tr><td>触发新一轮Tick</td><td>会</td><td>不会</td></tr></tbody></table><p><strong>其中比较注意的是promise的内部既包含宏任务也包含微任务，promise内部执行为宏任务，then执行为微任务</strong></p><h4 id="HTML相关问题"><a href="#HTML相关问题" class="headerlink" title="HTML相关问题"></a>HTML相关问题</h4><ul><li><h5 id="HTML新特性"><a href="#HTML新特性" class="headerlink" title="HTML新特性"></a>HTML新特性</h5></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html">1.语义标签<br>例如：<span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span>定义文档头部、<span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>定义文档尾部、<span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>定义文档的导航、<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>定义文档中的节<br>    <br>2.增强型表单<br>例如：<span class="hljs-tag">&lt;<span class="hljs-name">search</span>&gt;</span>用于搜索、<span class="hljs-tag">&lt;<span class="hljs-name">tel</span>&gt;</span>定义输入电话号码和字段、<span class="hljs-tag">&lt;<span class="hljs-name">date</span>&gt;</span>选取日期<br>    <br>3.新增表单属性<br>例如：placehoder输入框默认提示文字、autofocus规定在页面加载时，域自动获得焦点、required要求输入的内容是否可为空<br>    <br>4.音频<span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot; &quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span>、视频<span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot; &quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <br>5.canvas绘图和SVG<br></code></pre></td></tr></table></figure><ul><li><h5 id="webworker认识"><a href="#webworker认识" class="headerlink" title="webworker认识"></a>webworker认识</h5>Web Worker的作用就是为 JavaScript 创造多线程环境，允许主线程创建 Worker 线程，将一些任务分配给后者运行。在主线程运行的同时，Worker 线程在后台运行，两者互不干扰。等到 Worker 线程完成计算任务，再把结果返回给主线程。这样的好处是，一些计算密集型或高延迟的任务，被 Worker 线程负担了，主线程（通常负责 UI 交互）就会很流畅，不会被阻塞或拖慢。</li></ul><p>Worker线程一旦新建成功，就会始终运行，不会被主线程上的活动（比如用户点击按钮、提交表单）打断。这样有利于随时响应主线程的通信。但是，这也造成了 Worker 比较耗费资源，不应该过度使用，而且一旦使用完毕，就应该关闭。</p><ul><li><h5 id="src与href的区别"><a href="#src与href的区别" class="headerlink" title="src与href的区别"></a>src与href的区别</h5>href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。</li></ul><p>src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。</p><h4 id="CSS相关问题"><a href="#CSS相关问题" class="headerlink" title="CSS相关问题"></a>CSS相关问题</h4><ul><li><h5 id="CSS3有哪些新特性"><a href="#CSS3有哪些新特性" class="headerlink" title="CSS3有哪些新特性"></a>CSS3有哪些新特性</h5></li></ul><p>border-radius：实现倒角、圆角<br>box-shadow：阴影<br>text-shadow：字体阴影<br>gradient：渐变<br>transform：rotate scale skew translate 旋转 缩放 定位 倾斜<br>animation：动画<br>等等</p><ul><li><h5 id="CSS选择器有哪些"><a href="#CSS选择器有哪些" class="headerlink" title="CSS选择器有哪些"></a>CSS选择器有哪些</h5></li></ul><p>1.id选择器  #id</p><p>2.类选择器  .class</p><p>3.标签选择器  div</p><p>4.相邻选择器 div+p</p><p>5.子选择器  div&gt;p</p><p>6.后代选择器  div p</p><p>7.属性选择器  div[class&#x3D;”main”]</p><p>8.伪类选择器  div::hover</p><ul><li><h5 id="CSS的盒子模型"><a href="#CSS的盒子模型" class="headerlink" title="CSS的盒子模型"></a>CSS的盒子模型</h5></li></ul><p>有两种模型：IE盒子模型、标准盒子模型<br>    IE盒子模型：content部分包含border和padding<br>    标准盒子模型：内容（content）、填充（padding）、边界（margin）、边框（border）</p><p>在IE盒子模型中，width 和 height 指的是内容区域+border+padding的宽度和高度。<br>在标准盒子模型中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸</p><p>CSS3中的box-sizing属性：<br>box-sizing：border-box表示盒模型基于IE的盒模型，width和height决定盒模型的content区、padding区和border区。<br>box-sizing：content-box表示盒模型基于标准盒模型，width和height只决定盒模型的content区<br>box-sizing：inherit表示继承自父元素。</p><ul><li><h5 id="元素水平垂直居中"><a href="#元素水平垂直居中" class="headerlink" title="元素水平垂直居中"></a>元素水平垂直居中</h5></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*已知容器的宽高 设置层的外边距*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: relative;<span class="hljs-comment">/* 相对定位或绝对定位均可 */</span><br> <span class="hljs-attribute">width</span>:<span class="hljs-number">500px</span>;<br> <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">margin</span>: -<span class="hljs-number">150px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> -<span class="hljs-number">250px</span>;     <span class="hljs-comment">/* 外边距为自身宽高的一半 */</span><br>&#125;<br> <br><span class="hljs-comment">/*不知宽高-水平垂直居中 利用 `transform` 属性*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: absolute;<span class="hljs-comment">/* 相对定位或绝对定位均可 */</span><br> <span class="hljs-attribute">width</span>:<span class="hljs-number">500px</span>;<br> <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>&#125;<br> <br><span class="hljs-comment">/*利用flex布局*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">display</span>: flex;<br> <span class="hljs-attribute">align-items</span>: center; <span class="hljs-comment">/* 垂直居中 */</span><br> <span class="hljs-attribute">justify-content</span>: center;<span class="hljs-comment">/* 水平居中 */</span><br>&#125;<br> <br><span class="hljs-comment">/*让绝对定位的div居中*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: absolute;<br> <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">margin</span>: auto;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="VUE相关问题"><a href="#VUE相关问题" class="headerlink" title="VUE相关问题"></a>VUE相关问题</h4><ul><li><h5 id="vue生命周期函数"><a href="#vue生命周期函数" class="headerlink" title="vue生命周期函数"></a>vue生命周期函数</h5></li></ul><p>beforeCreate( 创建前 ) &#x3D;&gt; created（创建后）&#x3D;&gt; beforeMount（挂在前）&#x3D;&gt; mounted（挂载后）&#x3D;&gt;<br>beforeUpdate（数据更新前调用）&#x3D;&gt; updated（更新后）&#x3D;&gt; beforeDestroy（实例销毁前）&#x3D;&gt; destroyed（实例销毁后）<br>activated（被 keep-alive 缓存的组件激活时调用）<br>decactived（被 keep-alive 缓存的组件停用时调用）</p><ul><li><h5 id="vue响应式原理"><a href="#vue响应式原理" class="headerlink" title="vue响应式原理"></a>vue响应式原理</h5></li></ul><p>实现mvvm的双向绑定，是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调</p><ul><li><h5 id="vue父子组件的生命周期"><a href="#vue父子组件的生命周期" class="headerlink" title="vue父子组件的生命周期"></a>vue父子组件的生命周期</h5></li></ul><p>1.加载过程<br>父beforeCreate-&gt;父created-&gt;父beforeMount-&gt;子beforeCreate-&gt;子created-&gt;子beforeMount-&gt;子mounted-&gt;父mounted</p><p>2.子组件更新过程<br>父beforeUpdate-&gt;子beforeUpdate-&gt;子updated-&gt;父updated</p><p>3.父组件更新过程<br>父beforeUpdate-&gt;父updated</p><p>4.销毁过程<br>父beforeDestroy-&gt;子beforeDestroy-&gt;子destroyed-&gt;父destroyed</p><p>vue组件间通信<br>①.props 和 $emit<br>父组间通过props向下传递数据给子组件，子组件通过event给父组件发送消息，实际上就是子组件把自己的数据发送给父组件。</p><p>②. $ attrs 和 $ listeners<br>祖孙间隔代通过$ attrs传递数据，$listeners监听数据的改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- A组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">B</span> <span class="hljs-attr">:messageb</span>=<span class="hljs-string">&quot;messageb&quot;</span> <span class="hljs-attr">:messagec</span>=<span class="hljs-string">&quot;messagec&quot;</span> @<span class="hljs-attr">getC</span>=<span class="hljs-string">&quot;getC&quot;</span> @<span class="hljs-attr">getB</span>=<span class="hljs-string">&quot;getB&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;A&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">messageb</span>:<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-comment">//传递给B的数据</span></span><br><span class="language-javascript">        <span class="hljs-attr">messagec</span>:<span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-comment">//传递给C组件的数据</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-comment">//执行B子组件触发的事件</span></span><br><span class="language-javascript">      <span class="hljs-title function_">getB</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;B组件的数据：&#x27;</span>+ val) <span class="hljs-comment">//打印 ‘B组件的数据：b’</span></span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">      <span class="hljs-comment">//执行C子组件触发的事件</span></span><br><span class="language-javascript">      <span class="hljs-title function_">getC</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;C组件的数据：&quot;</span> + val) <span class="hljs-comment">//打印 &#x27;C组件的数据：c&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- B组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;mymessage&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;chnageHandle()&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!-- C组件中能直接触发getC的原因在于 B组件调用C组件时 使用 v-on 绑定了$listeners 属性 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 通过v-bind 绑定$attrs属性，C组件可以直接获取到A组件中传递下来的props（除了B组件中props声明的） --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">C</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;$attrs&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;$listeners&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;B&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">props</span>:[</span><br><span class="language-javascript">      <span class="hljs-attr">messageb</span>:&#123; <span class="hljs-comment">// 获得A组件传递过来的数据：&#x27;b&#x27;</span></span><br><span class="language-javascript">      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    ],</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">chnageHandle</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//触发A组件中的事件,把messageb给A组件</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;getB&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">messageb</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- C组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;$attrs.messagec&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;changeHandle()&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;C&#x27;</span>,</span><br><span class="language-javascript">    data () &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">changeHandle</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//触发A组件中的事件,把从A得到的数据c还给A组件</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;getC&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">$attrs</span>.<span class="hljs-property">messagec</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">   &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3.provide和 inject<br>provide 和 inject成对出现,用于父级组件向下传递数据;<br>父组件中通过provide来提供变量，然后在子组件中通过inject来注入变量。不论子组件有多深，只要调用了inject那么就可以注入provide中的数据。而不是局限于只能从当前父组件的prop属性来获取数据，只要在父组件的生命周期内，子组件都可以调用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 父组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">son</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;grandparent&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">provide</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">giveSonMessage</span>:<span class="hljs-string">&#x27;给子组件的数据&#x27;</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">giveGrandsonMessage</span>:<span class="hljs-string">&#x27;给孙组件的数据&#x27;</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br> <br><span class="hljs-comment">&lt;!-- 子组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">grandson</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">grandson</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">inject</span>:[<span class="hljs-string">&#x27;giveSonMessage&#x27;</span>], <span class="hljs-comment">//得到父组件传递过来的数据</span></span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">value</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">giveSonMessage</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 孙组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;grandson&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">inject</span>:[<span class="hljs-string">&#x27;giveGrandsonMessage&#x27;</span>,<span class="hljs-string">&#x27;giveSonMessage&#x27;</span>], <span class="hljs-comment">//得到爷组件传递过来的数据,也能获得爷给父的数据</span></span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">value</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">giveGrandsonMessage</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.vuex处理组件之间的数据交互<br>如果业务逻辑复杂，很多组件之间需要同时处理一些公共的数据，这个时候才有上面这一些方法可能不利于项目的维护，vuex的做法就是将这一些公共的数据抽离出来，然后其他组件就可以对这个公共数据进行读写操作，这样达到了解耦的目的</p><h4 id="TCP与IP的区别与联系"><a href="#TCP与IP的区别与联系" class="headerlink" title="TCP与IP的区别与联系"></a>TCP与IP的区别与联系</h4><p>1.TCP工作于传输层，IP工作于网络层。</p><p>2.TCP提供应用进程之间的通信，而IP提供主机之间的通信。</p><p>3.TCP以IP为基础，面向应用层提供服务。IP协议为TCP提供服务。IP协议将数据从一台主机发送至另一台主机，TCP则保证了其传输可靠性。</p><p>4.TCP是面向连接的，而使用的低层网络可以是无连接的，也可以是连接的，但使用无连接的网络的会使整个网络系统更加灵活</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp小程序消息订阅功能</title>
    <link href="/2022/07/19/uniapp%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/"/>
    <url>/2022/07/19/uniapp%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h3><p>微信充电小程序希望在用户充电时间结束，或者用户的充电完成时。通过微信公众号的推送信息的方式，告知用户充电进程。</p><h3 id="需求实现"><a href="#需求实现" class="headerlink" title="需求实现"></a>需求实现</h3><h4 id="基础API："><a href="#基础API：" class="headerlink" title="基础API："></a>基础API：</h4><p>实现上面的需求用到API有：<code>uni.getSetting()</code>、<code>uni.openSetting()</code>、核心<code>uni.requestSubscribeMessage()</code> <a href="https://uniapp.dcloud.io/api/other/setting.html#getsetting">uniapp官方文档</a></p><ul><li>uni.getSetting()：获取用户的当前权限的设置。</li><li>uni.openSetting()：调起客户端小程序设置界面，返回用户设置的操作结果。</li><li>uni.requestSubscribeMessage()：调起客户端小程序订阅消息界面，返回用户订阅消息的操作结果。</li></ul><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><table>    <tr>        <td><center><img src="https://img-blog.csdnimg.cn/301f4f13133d4ed7a60c076ff0d93a00.jpeg#pic_center"  >图1 消息订阅按钮</center></td>        <td ><center><img src="https://img-blog.csdnimg.cn/8c2e14bc57c14c3f832f72d53adf16f0.jpeg#pic_center"  >图2 弹出订阅申请</center> </td>    </tr></table><h4 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>&lt;!--  消息订阅组件 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 500rpx;padding: 30rpx;&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;subscribeMessage()&quot;</span>&gt;</span>消息订阅<span class="hljs-tag">&lt;/<span class="hljs-name">u-button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;showPopup&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;650rpx&quot;</span> <span class="hljs-attr">:mask-close-able</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">border-radius</span>=<span class="hljs-string">&quot;18&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;padding-sm&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-xl&quot;</span>&gt;</span>订阅提示<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;padding-xl text-letter&quot;</span>&gt;</span></span><br><span class="language-xml">&#123;&#123;content&#125;&#125;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex justify-around&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cancelHandle&quot;</span>&gt;</span>&#123;&#123;cancelText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;confirmHandle&quot;</span>&gt;</span>&#123;&#123;confirmText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u-popup</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">name</span>: <span class="hljs-string">&quot;w-subscribeMessage&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">showPopup</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 授权询问弹框</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">content</span>: <span class="hljs-string">&#x27;为了及时获取订单状态，您是否想接收订单状态的消息提醒？&#x27;</span>, <span class="hljs-comment">// 弹框提示内容，</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">confirmText</span>: <span class="hljs-string">&#x27;去开启消息提醒&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">cancelText</span>: <span class="hljs-string">&#x27;不需要提醒&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">tmplId</span>: [<span class="hljs-string">&#x27;**************************&#x27;</span>, <span class="hljs-string">&#x27;**************************&#x27;</span>]</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 判断消息订阅总开关是否打开</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">subscribeMessage</span>(<span class="hljs-params">flag</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">getSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">success</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res)</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (!res.<span class="hljs-property">subscriptionsSetting</span>.<span class="hljs-property">mainSwitch</span>) &#123; <span class="hljs-comment">// 订阅消息的总开关,如果是关着的，引导用户去打开</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果开着，则继续向下打开弹窗，获取用户授权</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>()</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">fail</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>() <span class="hljs-comment">// 如果失败，也打开弹窗，获取用户授权</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 弹窗点订阅，开启消息订阅提醒</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">confirmHandle</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> == <span class="hljs-string">&#x27;确定&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>()</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">openSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">complete</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">getSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">success</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (res.<span class="hljs-property">subscriptionsSetting</span>.<span class="hljs-property">mainSwitch</span>) &#123; <span class="hljs-comment">// 订阅消息的总开关,如果是开着的</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">content</span> = <span class="hljs-string">&#x27;再次点击确定，弹出即可完成订阅&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">cancelText</span> = <span class="hljs-string">&#x27;取消&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> = <span class="hljs-string">&#x27;确定&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 弹窗点不订阅</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">cancelHandle</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 订阅申请弹出，只允许点击弹出</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">messageSubscription</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">content</span> = <span class="hljs-string">&#x27;为了及时掌握订单状态，您是否想接收订单状态的消息提醒？&#x27;</span> <span class="hljs-comment">// 弹框提示内容，</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> = <span class="hljs-string">&#x27;去开启消息提醒&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">cancelText</span> = <span class="hljs-string">&#x27;不需要提醒&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">requestSubscribeMessage</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">tmplIds</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">tmplId</span>,</span></span><br><span class="language-javascript"><span class="language-xml">success：(res)=&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (res[<span class="hljs-string">&#x27;**************************&#x27;</span>] == <span class="hljs-string">&#x27;accept&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;xxxx消息订阅成功&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.padding-sm</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">padding</span>: <span class="hljs-number">22</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-center</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">text-align</span>: center;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-xl</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">36</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.padding-xl</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">padding</span>: <span class="hljs-number">50</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-letter</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">1</span>upx;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.5</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.flex</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">display</span>: flex;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.justify-around</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">justify-content</span>: space-around;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p><strong>注意：这个API需要用户的点击行为才能触发</strong></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>html标签速写</title>
    <link href="/2022/06/23/html%E6%A0%87%E7%AD%BE%E9%80%9F%E5%86%99/"/>
    <url>/2022/06/23/html%E6%A0%87%E7%AD%BE%E9%80%9F%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h4 id="HTML标签速写相关规则"><a href="#HTML标签速写相关规则" class="headerlink" title="HTML标签速写相关规则"></a>HTML标签速写相关规则</h4><table><thead><tr><th align="center">符号</th><th align="center">功能</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">&gt;</td><td align="center">子级元素</td><td align="center">div&gt;ul&gt;li</td></tr><tr><td align="center">+</td><td align="center">并列元素</td><td align="center">div+div&gt;span</td></tr><tr><td align="center">^</td><td align="center">父级兄弟元素</td><td align="center">div&gt;ul^div&gt;span</td></tr><tr><td align="center">^^</td><td align="center">多级上层兄弟元素</td><td align="center">ul&gt;li&gt;span^^div</td></tr><tr><td align="center">*</td><td align="center">重复当前元素</td><td align="center">ul&gt;li*3</td></tr><tr><td align="center">()</td><td align="center">分组，操作多元素</td><td align="center">div&gt;(p&gt;span)*3</td></tr><tr><td align="center">#</td><td align="center">添加id属性</td><td align="center">div#main</td></tr><tr><td align="center">.</td><td align="center">添加class属性</td><td align="center">div.content</td></tr><tr><td align="center">[]</td><td align="center">添加多种属性</td><td align="center">div[class&#x3D;content title&#x3D;head]</td></tr><tr><td align="center">$</td><td align="center">顺序排列占位符默认1</td><td align="center">p.item$*3</td></tr><tr><td align="center">$$</td><td align="center">顺序排列占位符默认01</td><td align="center">p.item$$*3</td></tr><tr><td align="center">@</td><td align="center">顺序排列从某数开始</td><td align="center">p.item$@3*3</td></tr><tr><td align="center">@-</td><td align="center">逆序排列到某数结束</td><td align="center">p.item$@-3*3</td></tr><tr><td align="center">{}</td><td align="center">元素文本内容</td><td align="center">div#main&gt;div.content&gt;p.item{text1}+p.item{text2}</td></tr></tbody></table><ol><li>div&gt;ul&gt;li</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>div+div&gt;span</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>div&gt;ul^div&gt;span</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>ul&gt;li&gt;span^^div</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>ul&gt;li*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="6"><li>div&gt;(p&gt;span)*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="7"><li>div#main</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="8"><li>div.content</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="9"><li>div[class&#x3D;content title&#x3D;head]</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="10"><li>p.item$*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="11"><li>p.item$$*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item01&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item02&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item03&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="12"><li>p.item$@3*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="13"><li>p.item$@-3*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="14"><li>div#main&gt;div.content&gt;p.item{text1}+p.item{text2}</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>text1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>text2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VScode 报错 TypeScript intellisense is disabled on template</title>
    <link href="/2022/05/07/VScode%20%E6%8A%A5%E9%94%99%20TypeScript%20intellisense%20is%20disabled%20on%20template/"/>
    <url>/2022/05/07/VScode%20%E6%8A%A5%E9%94%99%20TypeScript%20intellisense%20is%20disabled%20on%20template/</url>
    
    <content type="html"><![CDATA[<h4 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h4><p><code>vscode</code>  安装 <code>Vue Language Features (volar)</code> 后出现 ：</p><p><font color=gray>TypeScript intellisense is disabled on template, you can config “jsx”: “preserve” in tsconfig or jsconfig to enable it, or config vueCompilerOptions.experimentalDisableTemplateSupport to disable this prompt.</font ></p><p><img src="https://img-blog.csdnimg.cn/d4eb526697bd4b7593010dffbf29e290.png#pic_center" alt="问题图片展示"></p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>问题的描述是：TypeScript智能感知在模板中是禁用的，你可以在tsconfig或jsconfig中配置’ “jsx”: “preserve”来启用它，或者配置’ vueCompilerOptions ‘。 使用experimentalDisableTemplateSupport来禁用这个提示。那么我们根据描述解决问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 在文件 jsconfig.json 中</span><br>&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;./&quot;</span>,<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@/*&quot;</span>: [<br>        <span class="hljs-string">&quot;src/*&quot;</span><br>      ]<br>    &#125;,<br>    <span class="hljs-string">&quot;jsx&quot;</span>: <span class="hljs-string">&quot;preserve&quot;</span> <span class="hljs-comment">//添加配置</span><br>  &#125;,<br>  <span class="hljs-string">&quot;exclude&quot;</span>: [<br>    <span class="hljs-string">&quot;node_modules&quot;</span>,<br>    <span class="hljs-string">&quot;dist&quot;</span><br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/480e1dda5b2f404a9d1d602ce4ff72a7.png#pic_center" alt="解决问题图片"></p><p>问题得以解决。</p><p>如果还会存在问题，可以使用<code>vetur</code>插件格式化文档。将<code>Vue Language Features (volar)</code> 禁用后重启VScode即可。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue中自定义指令directive，提交防抖案例debounce</title>
    <link href="/2022/04/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4directive%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%98%B2%E6%8A%96%E6%A1%88%E4%BE%8Bdebounce/"/>
    <url>/2022/04/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4directive%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%98%B2%E6%8A%96%E6%A1%88%E4%BE%8Bdebounce/</url>
    
    <content type="html"><![CDATA[<h3 id="关键API介绍"><a href="#关键API介绍" class="headerlink" title="关键API介绍"></a>关键API介绍</h3><h4 id="Vue-directive-id-definition"><a href="#Vue-directive-id-definition" class="headerlink" title="Vue.directive( id, [definition])"></a>Vue.directive( id, [definition])</h4><ul><li><strong>参数</strong>：<ul><li><code>&#123;string&#125; id</code></li><li><code>&#123;Function | Object&#125; [definition]</code></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 注册</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>, &#123;<br>  <span class="hljs-attr">bind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">inserted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">componentUpdated</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">unbind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;<br>&#125;)<br><br><span class="hljs-comment">// 注册 (指令函数)</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// 这里将会被 `bind` 和 `update` 调用</span><br>&#125;)<br><br><span class="hljs-comment">// getter，返回已注册的指令</span><br><span class="hljs-keyword">var</span> myDirective = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="钩子函数解释"><a href="#钩子函数解释" class="headerlink" title="钩子函数解释"></a>钩子函数解释</h4><p><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p><p><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p><p><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。</p><p><code>componentUpdated</code>：指令所在组件的 VNode <strong>及其子 VNode</strong> 全部更新后调用。</p><p><code>unbind</code>：只调用一次，指令与元素解绑时调用。</p><h4 id="钩子函数参数"><a href="#钩子函数参数" class="headerlink" title="钩子函数参数"></a>钩子函数参数</h4><p>指令钩子函数都会三个参数：<strong>el</strong>、<strong>binding</strong>、<strong>vnode</strong>、<strong>oldVnode</strong>（仅update、componentUpdated）</p><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM。</li><li><code>binding</code>：一个对象，包含以下 property：<ul><li><code>name</code>：指令名，不包括 <em>v-</em> 前缀。</li><li><code>value</code>：指令的绑定值，例如：<code>v-myDirective=&quot;2&quot;</code> 中，绑定值为 <code>2</code>。</li><li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</li><li><code>expression</code>：字符串形式的指令表达式。例如 <code>v-myDirective=&quot;1 + 1&quot;</code> 中，表达式为 <code>&quot;1 + 1&quot;</code>。</li><li><code>arg</code>：传给指令的参数，可选。例如 <code>v-myDirective:foo</code> 中，参数为 <code>&quot;foo&quot;</code>。</li><li><code>modifiers</code>：一个包含修饰符的对象。例如：<code>v-myDirective.foo.bar</code> 中，修饰符对象为 <code>&#123; foo: true, bar: true &#125;</code>。</li></ul></li><li><code>vnode</code>：Vue 编译生成的虚拟节点。</li><li><code>oldVnode</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用</li></ul><h4 id="函数简写"><a href="#函数简写" class="headerlink" title="函数简写"></a>函数简写</h4><p> 当<code>bind</code> 和 <code>update</code> 时触发相同行为，而不关心其它的钩子的时候。可以这样写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">el,binding</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(el,binding.<span class="hljs-property">value</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h4><p>如果指令需要多个值，可以传入一个 JavaScript 对象字面量，指令函数能够接受所有合法的 JavaScript 表达式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-demo</span>=<span class="hljs-string">&quot;&#123; color: &#x27;white&#x27;, text: &#x27;hello&#x27; &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;demo&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(binding.<span class="hljs-property">value</span>.<span class="hljs-property">color</span>) <span class="hljs-comment">// &quot;white&quot;</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(binding.<span class="hljs-property">value</span>.<span class="hljs-property">text</span>)  <span class="hljs-comment">// &quot;hello&quot;</span><br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="自定义防抖指令案例"><a href="#自定义防抖指令案例" class="headerlink" title="自定义防抖指令案例"></a>自定义防抖指令案例</h3><h4 id="给button按钮添加自定义防抖指令"><a href="#给button按钮添加自定义防抖指令" class="headerlink" title="给button按钮添加自定义防抖指令"></a>给button按钮添加自定义防抖指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">v-debounce</span>=<span class="hljs-string">&quot;saveMessage&quot;</span> &gt;</span>确 定<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">saveMessage</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;被点击了！&#x27;</span>)</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// main.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;debounce&#x27;</span>, &#123;<br>  <span class="hljs-attr">bind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>    el.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!el.<span class="hljs-property">disabled</span>) &#123;<br>        binding.<span class="hljs-title function_">value</span>(); <span class="hljs-comment">// value 相当于saveMessage;</span><br>        el.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          el.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span><br>        &#125;, <span class="hljs-number">1500</span>) <span class="hljs-comment">// 定时器 1.5秒之后才能点击</span><br>      &#125;<br>    &#125;);<br>  &#125;<br>&#125;);<br><span class="hljs-comment">// 可以尝试去简写</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>echarts 设置初始点在原点</title>
    <link href="/2022/01/08/echarts%20%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E7%82%B9%E5%9C%A8%E5%8E%9F%E7%82%B9/"/>
    <url>/2022/01/08/echarts%20%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E7%82%B9%E5%9C%A8%E5%8E%9F%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用<code>echarts</code>折线图中渲染出来的图表数据不是从原点坐标开始，而是在两点的中间显示。<br><img src="https://img-blog.csdnimg.cn/f7dbaf7203c9440a87289c470e402115.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在<code>xAxis</code>字段中添加一个<code>boundaryGap</code>属性；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">xAxis</span>: &#123;<br>  <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;0时&#x27;</span>, <span class="hljs-string">&#x27;1时&#x27;</span>, <span class="hljs-string">&#x27;2时&#x27;</span>, <span class="hljs-string">&#x27;3时&#x27;</span>, <span class="hljs-string">&#x27;4时&#x27;</span>, <span class="hljs-string">&#x27;5时&#x27;</span>, <span class="hljs-string">&#x27;6时&#x27;</span>, <span class="hljs-string">&#x27;7时&#x27;</span>, <span class="hljs-string">&#x27;8时&#x27;</span>, <span class="hljs-string">&#x27;9时&#x27;</span>, <span class="hljs-string">&#x27;10时&#x27;</span>, <span class="hljs-string">&#x27;11时&#x27;</span>, <span class="hljs-string">&#x27;12时&#x27;</span>, <span class="hljs-string">&#x27;13时&#x27;</span>, <span class="hljs-string">&#x27;14时&#x27;</span>, <span class="hljs-string">&#x27;15时&#x27;</span>, <span class="hljs-string">&#x27;16时&#x27;</span>, <span class="hljs-string">&#x27;17时&#x27;</span>, <span class="hljs-string">&#x27;18时&#x27;</span>, <span class="hljs-string">&#x27;19时&#x27;</span>, <span class="hljs-string">&#x27;20时&#x27;</span>, <span class="hljs-string">&#x27;21时&#x27;</span>, <span class="hljs-string">&#x27;22时&#x27;</span>, <span class="hljs-string">&#x27;23时&#x27;</span>],<br><span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;时段&#x27;</span>,<br>  <span class="hljs-attr">boundaryGap</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// 显示间距设置为false</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>这样就可以了：<br><img src="https://img-blog.csdnimg.cn/aaabfa60abbd48ce85827e0181faa749.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hbuilder 打开终端无法输入指令</title>
    <link href="/2021/12/27/Hbuilder%20%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4/"/>
    <url>/2021/12/27/Hbuilder%20%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用<code>HbuliderX</code>打开终端时，出现如下情况。无法输入。</p><p><img src="https://img-blog.csdnimg.cn/b3045e8c55e343a3a3263d075b3d5e0e.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>原因是：配置启动终端的路径存在问题。</p><p>1.进入Hbuilder安装位置</p><p><img src="https://img-blog.csdnimg.cn/d2398aaf9d5e4123b6b074e99e1045ef.png#pic_center" alt="在这里插入图片描述"></p><p>2.打开HBuilderX\plugins\builtincef3terminal\script 下 main.js;</p><p><img src="https://img-blog.csdnimg.cn/775e0cda0c744ab28d8ce239268a4509.png#pic_center" alt="在这里插入图片描述"></p><p>3.将shell的值写成绝对路径，如将shell&#x3D;”powershell.exe”改为shell&#x3D;’C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe’；</p><p><img src="https://img-blog.csdnimg.cn/2e79fd2cdfed42fdbf6f6d66a560c31b.png#pic_center" alt="在这里插入图片描述"></p><p>4.重启HbuliderX，再打开终端</p><p><img src="https://img-blog.csdnimg.cn/ef8b42d85e694a8b817e6f3651ac21e2.png#pic_center" alt="在这里插入图片描述"></p><p>如果重启后依旧没有效果，可以如下尝试：将<code>shell</code>的值替换成<code>cmd.exe</code> 保存后再重启。<br><img src="https://img-blog.csdnimg.cn/d699e7a559c94035ba99ed617cfa25b0.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>css 字体渐变色</title>
    <link href="/2021/12/21/css%20%E5%AD%97%E4%BD%93%E6%B8%90%E5%8F%98%E8%89%B2/"/>
    <url>/2021/12/21/css%20%E5%AD%97%E4%BD%93%E6%B8%90%E5%8F%98%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>给Icon字体，添加一个<code>渐变色</code>。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-guzhangliebiao cu-text-orange&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 80rpx;&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>故障列表<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-repair cu-text-red&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 80rpx;&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>故障处理<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.cu-text-orange</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">-webkit-linear-gradient</span>(<span class="hljs-number">45deg</span>, <span class="hljs-number">#F0B11B</span>, <span class="hljs-number">#FFD673</span>);</span></span><br><span class="language-css"><span class="language-xml">-webkit-<span class="hljs-attribute">background-clip</span>: text;</span></span><br><span class="language-css"><span class="language-xml">-webkit-text-fill-<span class="hljs-attribute">color</span>: transparent;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.cu-text-red</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">-webkit-linear-gradient</span>(<span class="hljs-number">45deg</span>, <span class="hljs-number">#FF4747</span>, <span class="hljs-number">#ffff7f</span>);</span></span><br><span class="language-css"><span class="language-xml">-webkit-<span class="hljs-attribute">background-clip</span>: text;</span></span><br><span class="language-css"><span class="language-xml">-webkit-text-fill-<span class="hljs-attribute">color</span>: transparent;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://img-blog.csdnimg.cn/12c934c2ea5248abbcee09a530ea3c90.png#pic_center" alt="效果展示图"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 小程序支付功能</title>
    <link href="/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><p>项目生成订单，需要用户通过小程序进行支付。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>使用uni.requestPayment()，调用小程序中的付款功能。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs js"><br>&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">request</span>:&#123;<br>          <span class="hljs-attr">id</span>:xxxxx,<br>          <span class="hljs-attr">info</span>:<span class="hljs-string">&#x27;xxxx&#x27;</span><br>        &#125;<br>&#125;<br>&#125;,<br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br><br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-comment">// 提交订单</span><br><span class="hljs-title function_">subOrder</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;api/order/createOrder&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">request</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-comment">// 得到订单的反参调用微信支付</span><br><span class="hljs-keyword">let</span> pay = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">prepayId</span>);<br>uni.<span class="hljs-title function_">requestPayment</span>(&#123;<br><span class="hljs-attr">timeStamp</span>: pay.<span class="hljs-property">timeStamp</span>,<br><span class="hljs-attr">nonceStr</span>: pay.<span class="hljs-property">nonceStr</span>,<br><span class="hljs-attr">package</span>: pay.<span class="hljs-property">package</span>,<br><span class="hljs-attr">signType</span>: pay.<span class="hljs-property">signType</span>,<br><span class="hljs-attr">paySign</span>: pay.<span class="hljs-property">paySign</span>,<br><span class="hljs-comment">// 支付成功的回调</span><br><span class="hljs-title function_">success</span>(<span class="hljs-params">result</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br><span class="hljs-keyword">if</span> (result.<span class="hljs-property">errMsg</span> == <span class="hljs-string">&quot;requestPayment:ok&quot;</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;success&quot;</span>,<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;购买成功！&quot;</span><br>&#125;)<br> &#125;<br><br>&#125;,<br><span class="hljs-comment">// 支付失败回调</span><br><span class="hljs-title function_">fail</span>(<span class="hljs-params">err</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span>,<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;支付失败&quot;</span><br>&#125;)<br>&#125;<br>&#125;)<br>&#125;<br>&#125;);<br>      &#125;<br>&#125;<br>&#125;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="left">provider</td><td align="left">String</td><td align="center">服务提供商，通过 <a href="https://uniapp.dcloud.io/api/plugins/provider">uni.getProvider</a> 获取。</td></tr><tr><td align="left">orderInfo</td><td align="left">String&#x2F;Object</td><td align="center">订单数据</td></tr><tr><td align="left">timeStamp</td><td align="left">String</td><td align="center">时间戳</td></tr><tr><td align="left">nonceStr</td><td align="left">String</td><td align="center">随机字符串，长度为32个字符以下。</td></tr><tr><td align="left">package</td><td align="left">String</td><td align="center">统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id&#x3D;xx。</td></tr><tr><td align="left">signType</td><td align="left">String</td><td align="center">签名算法，暂支持 MD5。</td></tr><tr><td align="left">paySign</td><td align="left">String</td><td align="center">签名，具体签名方案参见 <a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&index=3">微信小程序支付文档</a></td></tr><tr><td align="left">bannedChannels</td><td align="left">Array<String></td><td align="center">需要隐藏的支付方式，详见 <a href="https://smartprogram.baidu.com/docs/develop/api/open_payment/#requestPolymerPayment/">百度小程序支付文档</a></td></tr><tr><td align="left">service</td><td align="left">Number</td><td align="center">固定值：1（拉起小程序收银台）开发者如果不希望使用字节跳动小程序收银台，service设置为3&#x2F;4时，可以直接拉起微信&#x2F;支付宝进行支付：service&#x3D;3： 微信API支付，不拉起小程序收银台；service&#x3D;4： 支付宝API支付，不拉起小程序收银台。其中service&#x3D;3、4，仅在1.35.0.1+基础库(头条743+)支持</td></tr><tr><td align="left">_debug</td><td align="left">Number</td><td align="center">仅限调试用</td></tr><tr><td align="left">getOrderStatus</td><td align="left">Function</td><td align="center">商户前端实现的查询支付订单状态方法（该方法需要返回个Promise对象）。 service&#x3D;3、4时不需要传。</td></tr><tr><td align="left">success</td><td align="left">Function</td><td align="center">接口调用成功的回调</td></tr><tr><td align="left">fail</td><td align="left">Function</td><td align="center">接口调用失败的回调函数</td></tr><tr><td align="left">complete</td><td align="left">Function</td><td align="center">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
