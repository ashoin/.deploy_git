<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL数据库相关操作</title>
    <link href="/2022/12/27/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/12/27/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="MySQL相关语句命令说明"><a href="#MySQL相关语句命令说明" class="headerlink" title="MySQL相关语句命令说明"></a>MySQL相关语句命令说明</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mysql -u root -p;</td><td align="center">登录MySQL</td></tr><tr><td align="center">show databases;</td><td align="center">展示所有的数据库</td></tr><tr><td align="center">create database xxx charset utf8;</td><td align="center">创建名为xxx的数据库</td></tr><tr><td align="center">drop database xxx;</td><td align="center">删除名为xxx的数据库</td></tr><tr><td align="center">use database;</td><td align="center">选择数据库</td></tr><tr><td align="center">show tables;</td><td align="center">展示所有的表</td></tr><tr><td align="center">show create database xxxx;</td><td align="center">显示是否能够创建xxxx的数据库</td></tr><tr><td align="center">show create table xxxx;</td><td align="center">显示是否能够创建xxxx的表</td></tr><tr><td align="center">desc xxxxx;</td><td align="center">查看表xxxxx结构</td></tr></tbody></table><h3 id="增删改查语句命令说明"><a href="#增删改查语句命令说明" class="headerlink" title="增删改查语句命令说明"></a>增删改查语句命令说明</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">insert</td><td align="center">增加</td></tr><tr><td align="center">delete</td><td align="center">删除</td></tr><tr><td align="center">update</td><td align="center">更改</td></tr><tr><td align="center">select</td><td align="center">查找</td></tr></tbody></table><h3 id="操作表相关语句命令实例-属性名-key"><a href="#操作表相关语句命令实例-属性名-key" class="headerlink" title="操作表相关语句命令实例(属性名 key)"></a>操作表相关语句命令实例(属性名 key)</h3><ol><li>创建表：创建一个表名为xxxx，表中包含id、name、salary、sex、job字段</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table xxxx(<br>  id int,<br>  name varchar(32),<br>  salary int,<br>  sex char(4),<br>  job varchar(128)<br>);<br></code></pre></td></tr></table></figure><ol start="2"><li>表中增加avatar字段：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx add avatar blob;<br></code></pre></td></tr></table></figure><ol start="3"><li>删除表中sex字段列：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx drop sex;<br></code></pre></td></tr></table></figure><ol start="4"><li>修改表中job字段长度：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx modify job varchar(64);<br></code></pre></td></tr></table></figure><ol start="5"><li>修改表中name字段名为username：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table xxxx change column name username varchar(68);<br></code></pre></td></tr></table></figure><ol start="6"><li>修改表名xxxx为yyyy：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">rename table xxxx to yyyy;<br></code></pre></td></tr></table></figure><ol start="7"><li>修改表的字符集为utf-8：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table yyyy character set utf8;<br></code></pre></td></tr></table></figure><ol start="8"><li>删除表：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop table yyyy;<br></code></pre></td></tr></table></figure><h3 id="操作表数据相关语句命令实例-属性值-value"><a href="#操作表数据相关语句命令实例-属性值-value" class="headerlink" title="操作表数据相关语句命令实例(属性值 value)"></a>操作表数据相关语句命令实例(属性值 value)</h3><ol><li>创建表：创建一个表名为xxxx，表中包含id、name、salary、sex、job字段；</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table xxxx(<br>  id int,<br>  name varchar(32),<br>  salary decimal(8,2),<br>  sex varchar(4),<br>  job varchar(128)<br>);<br></code></pre></td></tr></table></figure><ol start="2"><li>新增数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 新增一条完整数据<br>insert into xxxx(id,name,salary,sex,job) valus(&#x27;100&#x27;,&#x27;张三&#x27;,&#x27;5000&#x27;,&#x27;male&#x27;,&#x27;程序猿&#x27;);<br>// 新增一条数据<br>insert into xxxx(id,name,salary) valus(&#x27;101&#x27;,&#x27;李四&#x27;,&#x27;6000&#x27;);<br>// 新增一条特定数据<br>insert into xxxx(id) valus(&#x27;102&#x27;);<br></code></pre></td></tr></table></figure><ol start="3"><li>删除数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 删除表中name为‘李四’的数据；<br>delete from xxxx where name=&#x27;李四&#x27;;<br>// 删除表中所有的数据；<br>delete from xxxx;<br></code></pre></td></tr></table></figure><ol start="4"><li>修改表数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 更改所有员工的薪资为9000元；<br>update xxxx set salary=9000;<br>// 更改员工名为‘张三’的薪资为10000元；<br>update xxxx set salary=10000 where name=&#x27;张三&#x27;;<br>// 将名为‘张三’的员工涨薪1000元，岗位更改为‘高级程序猿’；<br>update xxxx set salary=salary+1000 where name=&#x27;张三&#x27;;<br></code></pre></td></tr></table></figure><ol start="5"><li>查询数据：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">// 查询所有数据；<br>select * from xxxx;<br>// 查询表中name和salary的数据；<br>select name,salary from xxxx;<br>// 条件查询表中name为‘张三’的数据；<br>select * from xxxx where name=&#x27;张三&#x27;;<br>// 条件查询表中薪资再5000~10000元的员工名；<br>select name from xxxx where salary&gt;=5000 and salary&lt;=10000;<br></code></pre></td></tr></table></figure><h3 id="MySQL相关字段类型说明"><a href="#MySQL相关字段类型说明" class="headerlink" title="MySQL相关字段类型说明"></a>MySQL相关字段类型说明</h3><table><thead><tr><th align="center">字段</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">primary key</td><td align="center">主键</td></tr><tr><td align="center">unique</td><td align="center">唯一</td></tr><tr><td align="center">charset</td><td align="center">指定字符集</td></tr><tr><td align="center">default</td><td align="center">默认值</td></tr><tr><td align="center">not null</td><td align="center">不能为空</td></tr><tr><td align="center">auto_increment</td><td align="center">自增长</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Navicat设计字段总结</title>
    <link href="/2022/12/27/Navicat%E8%AE%BE%E8%AE%A1%E5%AD%97%E6%AE%B5%E6%80%BB%E7%BB%93/"/>
    <url>/2022/12/27/Navicat%E8%AE%BE%E8%AE%A1%E5%AD%97%E6%AE%B5%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>1、经常变化的字段用varchar；</p><p>2、知道固定长度的用char；</p><p>3、超过255字节的只能用varchar或者text；</p><p>4、能用varchar的地方不用text；</p><p>5、能够用数字类型的字段尽量选择数字类型而不用字符串类型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接回逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了；</p><p>6、同一张表出现多个大字段，能合并时尽量合并，不能合并时考虑分表，原因请考 优化InnoDB表BLOB,TEXT列的存储效率</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>阿里云centOS7 安装MySQL</title>
    <link href="/2022/12/27/%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9ACannot%20find%20module%20%E2%80%98@vuecli-shared-utils%E2%80%98/"/>
    <url>/2022/12/27/%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9ACannot%20find%20module%20%E2%80%98@vuecli-shared-utils%E2%80%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>运行vue项目的时候出现报错<code>Cannot find module ‘@vue/cli-shared-utils‘</code>，之前还都一切正常。怎么就报错了？<br><img src="https://img-blog.csdnimg.cn/1eda0adb02454f3f87ed0e8b03dfe241.png#pic_center" alt="报错图片展示"></p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>在运行项目前，我修改了项目的名称。&#x3D;&#x3D;webpack&#x3D;&#x3D;脚手架初始化项目的时候，会把项目路径名被编译进去。</p><p>所以初始化完成后尽量不要修改文件夹名称或者项目名称。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>将<code>node_modules</code>依赖包删除，再重新安装依赖包。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">npm cache clear --force <span class="hljs-comment">// 清除依赖缓存</span><br><br>npm install <span class="hljs-comment">// 或者cnpm</span><br><br>npm run serve <br></code></pre></td></tr></table></figure><p>问题可以解决。如果不想重新安装，那就将修改的文件名，改回之前的名称。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>centOS7 安装MySQL</title>
    <link href="/2022/12/27/%E9%98%BF%E9%87%8C%E4%BA%91centOS7%20%E5%AE%89%E8%A3%85MySQL/"/>
    <url>/2022/12/27/%E9%98%BF%E9%87%8C%E4%BA%91centOS7%20%E5%AE%89%E8%A3%85MySQL/</url>
    
    <content type="html"><![CDATA[<ol><li>在使用阿里云<code>ECS</code>进行<code>ssh</code>时【使用<code>ssh</code>客户端连接阿里云服务器】，只要稍稍过一段时间不操作就会自动断开连接，输入以下命令，解决办法如下：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># vim /etc/ssh/sshd_config</span><br><br>找到以下两项配置[默认情况下，此两项是注释掉的]:<br>#ClientAliveInterval <span class="hljs-number">0</span><br>#ClientAliveCountMax <span class="hljs-number">3</span><br><br>将其修改为：<br>ClientAliveInterval <span class="hljs-number">30</span><br>ClientAliveCountMax <span class="hljs-number">86400</span><br><br>具体含义:<br><span class="hljs-number">1</span>、客户端每隔多少秒向服务发送一个心跳数据，<span class="hljs-number">30</span>秒<br><span class="hljs-number">2</span>、客户端多少秒没有相应，服务器自动断掉连接，配置的是<span class="hljs-number">24</span>小时<br>    <br>:wq退出<br></code></pre></td></tr></table></figure><ol start="2"><li>去 <a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a> 下载MySQL安装包；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">product version：选择版本；<br><br>operating System：操作系统； 选择Red Hat Enterprise Linux / Oracle Linux<br><br>OS Version：版本；选择all<br></code></pre></td></tr></table></figure><ol start="3"><li>将下载的包放到服务器&#x2F;root目录下；再执行解压指令；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># tar -xvf mysql.xx.xx.xx-x.elxx.x86_64.rpm.bundle.tar;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>删除服务器上自带的mariadb</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># rpm -qa|grep mariadb;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -e --nodeps mariadb-libs;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>按顺序安装MySQL的相关文件</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-community-common-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-community-client-plugins-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-libs-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-client-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-icu-data-files-xxxx-xxxx-xxx-xxx-xxx;</span><br>[root@shaoin ~]<span class="hljs-meta"># rpm -ivh mysql-mysql-community-serve-xxxx-xxxx-xxx-xxx-xxx;</span><br></code></pre></td></tr></table></figure><ol start="6"><li>关于libaio报错安装</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># yum -y install libaio;<span class="hljs-comment">//安装libaio包 再去安装报错的指令；</span></span><br></code></pre></td></tr></table></figure><ol start="7"><li>初始化MySQL</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">[root@shaoin ~]<span class="hljs-meta"># mysqld --initialize --console;</span><br>[root@shaoin ~]<span class="hljs-meta"># chown -R mysql:mysql /var/lib/mysql/</span><br>[root@shaoin ~]<span class="hljs-meta"># systemctl start mysqld</span><br>[root@shaoin ~]<span class="hljs-meta"># cat /var/log/mysqld.log|grep localhost <span class="hljs-comment">// 查询初始默认密码；</span></span><br>[root@shaoin ~]<span class="hljs-meta"># mysql -uroot -p</span><br>Enter password:       <span class="hljs-comment">//输入默认密码</span><br></code></pre></td></tr></table></figure><ol start="8"><li>修改密码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">mysql&gt; alter user <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br>[root@shaoin ~]<span class="hljs-meta"># mysql -uroot -p</span><br>Enter password:       <span class="hljs-comment">//输入123456</span><br>mysql&gt; show databases;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>连接阿里云服务器MySQL出现的问题</title>
    <link href="/2022/10/24/%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/10/24/%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ol><li>** Nodejs 连接云服务器 MySQL 数据库报错：**Host  xx.xx.xxx.xxx  is not allowed to connect to this MySQL server；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 先登录<br>mysql -u root -p<span class="hljs-string">&quot;123456&quot;</span>;<br>use mysql;<br>select host <span class="hljs-keyword">from</span> user where user=<span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-number">2.</span> <span class="hljs-title class_">Host</span> = <span class="hljs-string">&#x27;%&#x27;</span>，表示所有 <span class="hljs-variable constant_">IP</span> 都有连接权限，实际应根据生产环境的 <span class="hljs-variable constant_">IP</span> 进行设置<br>update user set host = <span class="hljs-string">&#x27;%&#x27;</span> where user =<span class="hljs-string">&#x27;root&#x27;</span>; <br><span class="hljs-number">3.</span> 刷新权限，让修改生效。<br>flush privileges;<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>需要修改加密规则报错：</strong>Client does not support authentication protocol requested by server; consider upgrading MySQL client；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1.</span> 先登录<br>mysql -u root -p<span class="hljs-string">&quot;123456&quot;</span><br><span class="hljs-number">2.</span> 修改加密方式<br><span class="hljs-variable constant_">ALTER</span> <span class="hljs-variable constant_">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;password&#x27;</span> <span class="hljs-variable constant_">PASSWORD</span> <span class="hljs-variable constant_">EXPIRE</span> <span class="hljs-variable constant_">NEVER</span>; <span class="hljs-comment">// password是正在使用的密码</span><br><span class="hljs-number">3.</span> 修改密码<br><span class="hljs-variable constant_">ALTER</span> <span class="hljs-variable constant_">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">WITH</span> mysql_native_password <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>; <span class="hljs-comment">// password新的密码</span><br><span class="hljs-number">4.</span> 刷新权限，让修改生效。<br><span class="hljs-variable constant_">FLUSH</span> <span class="hljs-variable constant_">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Navicat设计字段总结</title>
    <link href="/2022/08/01/uniapp%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E3%80%81%E6%8E%88%E6%9D%83%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81/"/>
    <url>/2022/08/01/uniapp%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E3%80%81%E6%8E%88%E6%9D%83%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>uniapp开发支付宝小程序授权用户信息和用户手机号码过程中，与微信小程序的API是有所不同的，相同是都是需要<code>&lt;button&gt;&lt;/button&gt;</code>点击事件触发。接下来简单说明一下支付宝小程序授权用户信息和用户手机号码的方法。</p><h3 id="完成需求"><a href="#完成需求" class="headerlink" title="完成需求"></a>完成需求</h3><p>授权用户手机号码前，需要先在支付宝开放平台—&gt;控制台—&gt;产品绑定，绑定产品 – <code>获取会员手机号</code> </p><p><img src="https://img-blog.csdnimg.cn/f4954b4c45ff42e5bbb1e433df40bb9a.png#pic_center" alt="在这里插入图片描述"><br>用到的API：<code>uni.getOpenUserInfo</code>，<code>uni.getPhoneNumber</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding:30rpx&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-navbar</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;演示&quot;</span> <span class="hljs-attr">:is-back</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top:100rpx&quot;</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;getAuthorize&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;userInfo&quot;</span> @<span class="hljs-attr">getAuthorize</span>=<span class="hljs-string">&quot;getOpenUserInfo&quot;</span> @<span class="hljs-attr">error</span>=<span class="hljs-string">&quot;getInfoError&quot;</span>&gt;</span><br>个人信息授权<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top:100rpx&quot;</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;getAuthorize&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&#x27;phoneNumber&#x27;</span> @<span class="hljs-attr">getAuthorize</span>=<span class="hljs-string">&quot;getPhoneNumber&quot;</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;getPhoneError&quot;</span>&gt;</span><br>手机号码授权<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 触发</span></span><br><span class="language-javascript"><span class="hljs-title function_">getOpenUserInfo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">getOpenUserInfo</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> userinfo = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res.<span class="hljs-property">response</span>).<span class="hljs-property">response</span></span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(userinfo)</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权个人信息成功&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权个人信息失败&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-comment">// 授权失败回调</span></span><br><span class="language-javascript"><span class="hljs-title function_">getInfoError</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;取消授权个人信息&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">getPhoneNumber</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">getPhoneNumber</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> encryptedData = res.<span class="hljs-property">response</span>;</span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(encryptedData)</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;获得手机号码加密数据成功&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">uni.<span class="hljs-title function_">request</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;开发者的后端服务端&#x27;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">data</span>: encryptedData,</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;授权手机号码失败&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">getPhoneError</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">uni.<span class="hljs-title function_">showToast</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;取消手机号码授权&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><table>    <tr>        <td><center><img src="https://img-blog.csdnimg.cn/45d6d32ff9fa40cd99a8f4c5614ac8ba.png"  >图1 演示页面</center></td>        <td ><center><img src="https://img-blog.csdnimg.cn/140e3b3c9c5049e3869cdfecafca4230.png" >图2 弹出授权用户信息</center> </td>           <td ><center><img src="https://img-blog.csdnimg.cn/517c47bfadf746168a3789c8a99d762e.png"  >图2 弹出用户手机号</center> </td>    </tr></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uView 中select组件确认选择问题</title>
    <link href="/2022/07/21/uView%20%E4%B8%ADselect%E7%BB%84%E4%BB%B6%E7%A1%AE%E8%AE%A4%E9%80%89%E6%8B%A9%E9%97%AE%E9%A2%98/"/>
    <url>/2022/07/21/uView%20%E4%B8%ADselect%E7%BB%84%E4%BB%B6%E7%A1%AE%E8%AE%A4%E9%80%89%E6%8B%A9%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>小程序中引用uView ui 中<code>select</code>组件（单列模式）。出现第一次选择了列表中的某一项，再次唤起select组件时，直接点击确认。<code>confirm</code>事件返回的是列表中的第一项数据，而不是第一次选中的数据。</p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>需要用到<code>select</code>组件中的<code>default-value</code>参数和<code>findIndex()</code>数组方法。</p><ul><li>default-value：提供的默认选中的下标（index），传值为数组 例：[0]</li><li>findIndex()：返回数组中通过条件判断的第一个元素的索引</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;station&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择站点&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showStation = true&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;showStation&quot;</span> <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;stationList&quot;</span> <span class="hljs-attr">:default-value</span>=<span class="hljs-string">&quot;selectDefault&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;selectStation&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">station</span>:<span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">showStation</span>:<span class="hljs-literal">false</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">selectDefault</span>:[<span class="hljs-number">0</span>],</span><br><span class="language-javascript"><span class="hljs-attr">stationList</span>:[</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;东站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1001&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;西站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1002&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;南站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1003&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                    &#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;北站&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">value</span>:<span class="hljs-string">&#x27;1004&#x27;</span></span><br><span class="language-javascript">                    &#125;,</span><br><span class="language-javascript">                ]</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">selectStation</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">station</span> = val[<span class="hljs-number">0</span>].<span class="hljs-property">label</span>;</span><br><span class="language-javascript">                <span class="hljs-comment">// 将默认下标赋值为当前选中的下标</span></span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">selectDefault</span> = [<span class="hljs-variable language_">this</span>.<span class="hljs-property">stationList</span>.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span> === val[<span class="hljs-number">0</span>].<span class="hljs-property">value</span>)] || [<span class="hljs-number">0</span>]; </span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">selectDefault</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>如果选项列表的 value 值刚好与 选项列表的下标index相同时，可以直接将value以数组的形式赋值给selectDefault。不需要findIndex()的筛选操作。</strong></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端面试常见问题总结</title>
    <link href="/2022/07/20/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <url>/2022/07/20/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h3 id="问题陈列"><a href="#问题陈列" class="headerlink" title="问题陈列"></a>问题陈列</h3><h4 id="JS相关问题"><a href="#JS相关问题" class="headerlink" title="JS相关问题"></a>JS相关问题</h4><ul><li><h5 id="JavaScript原型，原型链-有什么特点？"><a href="#JavaScript原型，原型链-有什么特点？" class="headerlink" title="JavaScript原型，原型链 ? 有什么特点？"></a>JavaScript原型，原型链 ? 有什么特点？</h5><p>每个对象都会在其内部初始化一个属性，就是prototype(原型)。<br>当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。</p></li><li><h5 id="This对象的理解"><a href="#This对象的理解" class="headerlink" title="This对象的理解"></a>This对象的理解</h5><p>this总是指向函数的直接调用者;<br>如果有new关键字，this指向new出来的那个对象;</p></li></ul><p>this的指向问题：<br>1.作为对象的属性被调用，this指向该对象<br>2.作为普通函数得调用，this总是指向全局对象（通常为window），严格模式下this指向undefined<br>3.作为构造器调用，通常情况下this指向被构造函数返回的实例，例外如果构造函数显式的返回一个Object类型的对象，name结构也是只会得到这个对象<br>4.call和apply调用<br>    动态改变this指向，使用一个指定的this值和单独给出的一个或多个参数来调用一个函数<br>    允许为不同的对象分配和调用属于一个对象的函数&#x2F;方法<br>    call()方法：指定的this + 多个参数<br>    apply()方法：指定的this + 一个包含多个参数的数组<br>5.箭头函数，箭头函数不会创建自己的this，它会从自己的作用域的上一层继承this</p><ul><li><h5 id="null，undefined-的区别？"><a href="#null，undefined-的区别？" class="headerlink" title="null，undefined 的区别？"></a>null，undefined 的区别？</h5>null 表示一个对象是“没有值”的值，也就是值为“空”；undefined 表示一个变量声明了没有初始化(赋值)；<br>undefined不是一个有效的JSON，而null是；<br>undefined的类型(typeof)是undefined；null的类型(typeof)是object；</li><li><h5 id="JS-深浅拷贝"><a href="#JS-深浅拷贝" class="headerlink" title="JS 深浅拷贝"></a>JS 深浅拷贝</h5>深拷贝和浅拷贝是只针对引用数据类型，例如：Object和Array；<br>浅拷贝只复制指向某个对象的指针而不复制对象本身，新旧对象还是共享同一块内存；<br>深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象；</li></ul><p>深拷贝方法：<br>    1.JSON.parse(JSON.stringify(obj))<br>    原理： 用JSON.stringify将对象转成JSON字符串，再用JSON.parse()把字符串解析成对象，一去一来，新的对象产生了，而且对象会开辟新的栈，实现深拷贝。<br>    2.递归方法实现深度克隆原理：遍历对象、数组直到里边都是基本数据类型，然后再去复制，就是深度拷贝</p><ul><li><h5 id="闭包的概念"><a href="#闭包的概念" class="headerlink" title="闭包的概念"></a>闭包的概念</h5>闭包就是能够读取其他函数内部变量的函数，在本质上是函数内部和函数外部链接的桥梁</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 经典问题</span><br><span class="hljs-keyword">var</span> arr = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br>    arr[i] = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;<br>&#125;<br>arr[<span class="hljs-number">0</span>](); <span class="hljs-comment">// 10</span><br>arr[<span class="hljs-number">1</span>](); <span class="hljs-comment">// 10</span><br>arr[<span class="hljs-number">2</span>](); <span class="hljs-comment">// 10</span><br><br><span class="hljs-comment">// 利用闭包来解决</span><br><span class="hljs-keyword">var</span> arr = []<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)&#123;<br>    arr[i] = (<span class="hljs-keyword">function</span> (<span class="hljs-params">i</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<br>        &#125;<br>    &#125;)(i)<br>&#125;<br>arr[<span class="hljs-number">0</span>](); <span class="hljs-comment">// 0</span><br>arr[<span class="hljs-number">1</span>](); <span class="hljs-comment">// 1</span><br>arr[<span class="hljs-number">2</span>](); <span class="hljs-comment">// 2</span><br></code></pre></td></tr></table></figure><p><strong>闭包处理的还是作用域的问题，解决该问题的方法还可以是利用ES6语法，var声明改成let声明</strong></p><h4 id="浏览器相关问题"><a href="#浏览器相关问题" class="headerlink" title="浏览器相关问题"></a>浏览器相关问题</h4><ul><li><h5 id="前端页面有哪三层构成，分别是什么？作用是什么？"><a href="#前端页面有哪三层构成，分别是什么？作用是什么？" class="headerlink" title="前端页面有哪三层构成，分别是什么？作用是什么？"></a>前端页面有哪三层构成，分别是什么？作用是什么？</h5>分成：结构层、表示层、行为层</li></ul><p>结构层：由 HTML 或 XHTML之类的标记语言负责创建。标签，也就是那些出现在尖括号里的单词，对网页内容的语义含义做出了描述，但这些标签不包含任何关于如何显示有关内容的信息。例如，P标签表达了这样一种语义：“这是一个文本段。”</p><p>表示层：由 CSS 负责创建。 CSS对“如何显示有关内容”的问题做出了回答。</p><p>行为层：负责回答“内容应该如何对事件做出反应”这一问题。这是 Javascript 语言和 DOM主宰的领域。</p><ul><li><h5 id="你知道TCP协议、IP协议、HTTP协议分别在哪一层吗"><a href="#你知道TCP协议、IP协议、HTTP协议分别在哪一层吗" class="headerlink" title="你知道TCP协议、IP协议、HTTP协议分别在哪一层吗"></a>你知道TCP协议、IP协议、HTTP协议分别在哪一层吗</h5><p>TCP协议在传输层，IP协议在网络层，HTTP协议在应用层。</p></li><li><h5 id="请说出三种减少网页加载时间的方法"><a href="#请说出三种减少网页加载时间的方法" class="headerlink" title="请说出三种减少网页加载时间的方法"></a>请说出三种减少网页加载时间的方法</h5></li></ul><p>1.服务器角度<br>采取CDN加速，开启gzip压缩，允许使用强缓存或协商缓存，增加服务器带宽</p><p>2.客户端角度<br>合理组织CSS、JavaScript代码位置，减少DOM操作、添加事件委托，部分操作可设置防抖和节流，对于可预见的操作采取preload或prerender的预加载，对于图片可以懒加载，合并CSS图片（精灵图&#x2F;雪碧图），减少使用iframe，资源优化打包角度</p><p>3.资源优化打包角度<br>使用打包工具将Js文件、CSS文件和静态文件进行恰当打包处理。</p><ul><li><h5 id="什么情况下会遇到跨域问题"><a href="#什么情况下会遇到跨域问题" class="headerlink" title="什么情况下会遇到跨域问题"></a>什么情况下会遇到跨域问题</h5></li></ul><p>跨域问题来自于浏览器的同源策略，即当协议、域名、端口号任意一个不同时，都会引发跨域问题。</p><p>解决方法：jsonp、CORS</p><ul><li><h5 id="宏任务和微任务"><a href="#宏任务和微任务" class="headerlink" title="宏任务和微任务"></a>宏任务和微任务</h5></li></ul><p>宏任务是由宿主发起的（Node、浏览器），而微任务由JavaScript自身发起（JS引擎）。</p><table><thead><tr><th></th><th>宏任务（macrotask）</th><th>微任务（microtask）</th></tr></thead><tbody><tr><td>发起者</td><td>Node、浏览器</td><td>JS引擎</td></tr><tr><td>具体事件</td><td>1. script (可以理解为外层同步代码) <br />2. setTimeout&#x2F;setInterval<br />3. UI rendering&#x2F;UI事件<br />4. postMessage，MessageChannel<br />5. setImmediate，I&#x2F;O（Node.js）</td><td>1. Promise <br />2. MutaionObserver<br />3. Object.observe（已废弃；<code>Proxy</code> 对象替代）<br />4. process.nextTick（Node.js）</td></tr><tr><td>运行顺序</td><td>后运行</td><td>先运行</td></tr><tr><td>触发新一轮Tick</td><td>会</td><td>不会</td></tr></tbody></table><p><strong>其中比较注意的是promise的内部既包含宏任务也包含微任务，promise内部执行为宏任务，then执行为微任务</strong></p><h4 id="HTML相关问题"><a href="#HTML相关问题" class="headerlink" title="HTML相关问题"></a>HTML相关问题</h4><ul><li><h5 id="HTML新特性"><a href="#HTML新特性" class="headerlink" title="HTML新特性"></a>HTML新特性</h5></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html">1.语义标签<br>例如：<span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span>定义文档头部、<span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>定义文档尾部、<span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>定义文档的导航、<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>定义文档中的节<br>    <br>2.增强型表单<br>例如：<span class="hljs-tag">&lt;<span class="hljs-name">search</span>&gt;</span>用于搜索、<span class="hljs-tag">&lt;<span class="hljs-name">tel</span>&gt;</span>定义输入电话号码和字段、<span class="hljs-tag">&lt;<span class="hljs-name">date</span>&gt;</span>选取日期<br>    <br>3.新增表单属性<br>例如：placehoder输入框默认提示文字、autofocus规定在页面加载时，域自动获得焦点、required要求输入的内容是否可为空<br>    <br>4.音频<span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot; &quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span>、视频<span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot; &quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <br>5.canvas绘图和SVG<br></code></pre></td></tr></table></figure><ul><li><h5 id="webworker认识"><a href="#webworker认识" class="headerlink" title="webworker认识"></a>webworker认识</h5>Web Worker的作用就是为 JavaScript 创造多线程环境，允许主线程创建 Worker 线程，将一些任务分配给后者运行。在主线程运行的同时，Worker 线程在后台运行，两者互不干扰。等到 Worker 线程完成计算任务，再把结果返回给主线程。这样的好处是，一些计算密集型或高延迟的任务，被 Worker 线程负担了，主线程（通常负责 UI 交互）就会很流畅，不会被阻塞或拖慢。</li></ul><p>Worker线程一旦新建成功，就会始终运行，不会被主线程上的活动（比如用户点击按钮、提交表单）打断。这样有利于随时响应主线程的通信。但是，这也造成了 Worker 比较耗费资源，不应该过度使用，而且一旦使用完毕，就应该关闭。</p><ul><li><h5 id="src与href的区别"><a href="#src与href的区别" class="headerlink" title="src与href的区别"></a>src与href的区别</h5>href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。</li></ul><p>src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。</p><h4 id="CSS相关问题"><a href="#CSS相关问题" class="headerlink" title="CSS相关问题"></a>CSS相关问题</h4><ul><li><h5 id="CSS3有哪些新特性"><a href="#CSS3有哪些新特性" class="headerlink" title="CSS3有哪些新特性"></a>CSS3有哪些新特性</h5></li></ul><p>border-radius：实现倒角、圆角<br>box-shadow：阴影<br>text-shadow：字体阴影<br>gradient：渐变<br>transform：rotate scale skew translate 旋转 缩放 定位 倾斜<br>animation：动画<br>等等</p><ul><li><h5 id="CSS选择器有哪些"><a href="#CSS选择器有哪些" class="headerlink" title="CSS选择器有哪些"></a>CSS选择器有哪些</h5></li></ul><p>1.id选择器  #id</p><p>2.类选择器  .class</p><p>3.标签选择器  div</p><p>4.相邻选择器 div+p</p><p>5.子选择器  div&gt;p</p><p>6.后代选择器  div p</p><p>7.属性选择器  div[class&#x3D;”main”]</p><p>8.伪类选择器  div::hover</p><ul><li><h5 id="CSS的盒子模型"><a href="#CSS的盒子模型" class="headerlink" title="CSS的盒子模型"></a>CSS的盒子模型</h5></li></ul><p>有两种模型：IE盒子模型、标准盒子模型<br>    IE盒子模型：content部分包含border和padding<br>    标准盒子模型：内容（content）、填充（padding）、边界（margin）、边框（border）</p><p>在IE盒子模型中，width 和 height 指的是内容区域+border+padding的宽度和高度。<br>在标准盒子模型中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸</p><p>CSS3中的box-sizing属性：<br>box-sizing：border-box表示盒模型基于IE的盒模型，width和height决定盒模型的content区、padding区和border区。<br>box-sizing：content-box表示盒模型基于标准盒模型，width和height只决定盒模型的content区<br>box-sizing：inherit表示继承自父元素。</p><ul><li><h5 id="元素水平垂直居中"><a href="#元素水平垂直居中" class="headerlink" title="元素水平垂直居中"></a>元素水平垂直居中</h5></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*已知容器的宽高 设置层的外边距*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: relative;<span class="hljs-comment">/* 相对定位或绝对定位均可 */</span><br> <span class="hljs-attribute">width</span>:<span class="hljs-number">500px</span>;<br> <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">margin</span>: -<span class="hljs-number">150px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> -<span class="hljs-number">250px</span>;     <span class="hljs-comment">/* 外边距为自身宽高的一半 */</span><br>&#125;<br> <br><span class="hljs-comment">/*不知宽高-水平垂直居中 利用 `transform` 属性*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: absolute;<span class="hljs-comment">/* 相对定位或绝对定位均可 */</span><br> <span class="hljs-attribute">width</span>:<span class="hljs-number">500px</span>;<br> <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br> <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>&#125;<br> <br><span class="hljs-comment">/*利用flex布局*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">display</span>: flex;<br> <span class="hljs-attribute">align-items</span>: center; <span class="hljs-comment">/* 垂直居中 */</span><br> <span class="hljs-attribute">justify-content</span>: center;<span class="hljs-comment">/* 水平居中 */</span><br>&#125;<br> <br><span class="hljs-comment">/*让绝对定位的div居中*/</span><br><span class="hljs-selector-tag">div</span> &#123;<br> <span class="hljs-attribute">position</span>: absolute;<br> <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;<br> <span class="hljs-attribute">margin</span>: auto;<br> <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br> <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="VUE相关问题"><a href="#VUE相关问题" class="headerlink" title="VUE相关问题"></a>VUE相关问题</h4><ul><li><h5 id="vue生命周期函数"><a href="#vue生命周期函数" class="headerlink" title="vue生命周期函数"></a>vue生命周期函数</h5></li></ul><p>beforeCreate( 创建前 ) &#x3D;&gt; created（创建后）&#x3D;&gt; beforeMount（挂在前）&#x3D;&gt; mounted（挂载后）&#x3D;&gt;<br>beforeUpdate（数据更新前调用）&#x3D;&gt; updated（更新后）&#x3D;&gt; beforeDestroy（实例销毁前）&#x3D;&gt; destroyed（实例销毁后）<br>activated（被 keep-alive 缓存的组件激活时调用）<br>decactived（被 keep-alive 缓存的组件停用时调用）</p><ul><li><h5 id="vue响应式原理"><a href="#vue响应式原理" class="headerlink" title="vue响应式原理"></a>vue响应式原理</h5></li></ul><p>实现mvvm的双向绑定，是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调</p><ul><li><h5 id="vue父子组件的生命周期"><a href="#vue父子组件的生命周期" class="headerlink" title="vue父子组件的生命周期"></a>vue父子组件的生命周期</h5></li></ul><p>1.加载过程<br>父beforeCreate-&gt;父created-&gt;父beforeMount-&gt;子beforeCreate-&gt;子created-&gt;子beforeMount-&gt;子mounted-&gt;父mounted</p><p>2.子组件更新过程<br>父beforeUpdate-&gt;子beforeUpdate-&gt;子updated-&gt;父updated</p><p>3.父组件更新过程<br>父beforeUpdate-&gt;父updated</p><p>4.销毁过程<br>父beforeDestroy-&gt;子beforeDestroy-&gt;子destroyed-&gt;父destroyed</p><p>vue组件间通信<br>①.props 和 $emit<br>父组间通过props向下传递数据给子组件，子组件通过event给父组件发送消息，实际上就是子组件把自己的数据发送给父组件。</p><p>②. $ attrs 和 $ listeners<br>祖孙间隔代通过$ attrs传递数据，$listeners监听数据的改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- A组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">B</span> <span class="hljs-attr">:messageb</span>=<span class="hljs-string">&quot;messageb&quot;</span> <span class="hljs-attr">:messagec</span>=<span class="hljs-string">&quot;messagec&quot;</span> @<span class="hljs-attr">getC</span>=<span class="hljs-string">&quot;getC&quot;</span> @<span class="hljs-attr">getB</span>=<span class="hljs-string">&quot;getB&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;A&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">messageb</span>:<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-comment">//传递给B的数据</span></span><br><span class="language-javascript">        <span class="hljs-attr">messagec</span>:<span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-comment">//传递给C组件的数据</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-comment">//执行B子组件触发的事件</span></span><br><span class="language-javascript">      <span class="hljs-title function_">getB</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;B组件的数据：&#x27;</span>+ val) <span class="hljs-comment">//打印 ‘B组件的数据：b’</span></span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">      <span class="hljs-comment">//执行C子组件触发的事件</span></span><br><span class="language-javascript">      <span class="hljs-title function_">getC</span>(<span class="hljs-params">val</span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;C组件的数据：&quot;</span> + val) <span class="hljs-comment">//打印 &#x27;C组件的数据：c&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- B组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;mymessage&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;chnageHandle()&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!-- C组件中能直接触发getC的原因在于 B组件调用C组件时 使用 v-on 绑定了$listeners 属性 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 通过v-bind 绑定$attrs属性，C组件可以直接获取到A组件中传递下来的props（除了B组件中props声明的） --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">C</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;$attrs&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;$listeners&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;B&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">props</span>:[</span><br><span class="language-javascript">      <span class="hljs-attr">messageb</span>:&#123; <span class="hljs-comment">// 获得A组件传递过来的数据：&#x27;b&#x27;</span></span><br><span class="language-javascript">      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    ],</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">chnageHandle</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//触发A组件中的事件,把messageb给A组件</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;getB&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">messageb</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- C组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;$attrs.messagec&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;changeHandle()&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;C&#x27;</span>,</span><br><span class="language-javascript">    data () &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">changeHandle</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//触发A组件中的事件,把从A得到的数据c还给A组件</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;getC&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">$attrs</span>.<span class="hljs-property">messagec</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">   &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3.provide和 inject<br>provide 和 inject成对出现,用于父级组件向下传递数据;<br>父组件中通过provide来提供变量，然后在子组件中通过inject来注入变量。不论子组件有多深，只要调用了inject那么就可以注入provide中的数据。而不是局限于只能从当前父组件的prop属性来获取数据，只要在父组件的生命周期内，子组件都可以调用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 父组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">son</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;grandparent&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">provide</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">giveSonMessage</span>:<span class="hljs-string">&#x27;给子组件的数据&#x27;</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">giveGrandsonMessage</span>:<span class="hljs-string">&#x27;给孙组件的数据&#x27;</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br> <br><span class="hljs-comment">&lt;!-- 子组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">grandson</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">grandson</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">inject</span>:[<span class="hljs-string">&#x27;giveSonMessage&#x27;</span>], <span class="hljs-comment">//得到父组件传递过来的数据</span></span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">value</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">giveSonMessage</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 孙组件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;grandson&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">inject</span>:[<span class="hljs-string">&#x27;giveGrandsonMessage&#x27;</span>,<span class="hljs-string">&#x27;giveSonMessage&#x27;</span>], <span class="hljs-comment">//得到爷组件传递过来的数据,也能获得爷给父的数据</span></span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">value</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">giveGrandsonMessage</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.vuex处理组件之间的数据交互<br>如果业务逻辑复杂，很多组件之间需要同时处理一些公共的数据，这个时候才有上面这一些方法可能不利于项目的维护，vuex的做法就是将这一些公共的数据抽离出来，然后其他组件就可以对这个公共数据进行读写操作，这样达到了解耦的目的</p><h4 id="TCP与IP的区别与联系"><a href="#TCP与IP的区别与联系" class="headerlink" title="TCP与IP的区别与联系"></a>TCP与IP的区别与联系</h4><p>1.TCP工作于传输层，IP工作于网络层。</p><p>2.TCP提供应用进程之间的通信，而IP提供主机之间的通信。</p><p>3.TCP以IP为基础，面向应用层提供服务。IP协议为TCP提供服务。IP协议将数据从一台主机发送至另一台主机，TCP则保证了其传输可靠性。</p><p>4.TCP是面向连接的，而使用的低层网络可以是无连接的，也可以是连接的，但使用无连接的网络的会使整个网络系统更加灵活</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp小程序消息订阅功能</title>
    <link href="/2022/07/19/uniapp%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/"/>
    <url>/2022/07/19/uniapp%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h3><p>微信充电小程序希望在用户充电时间结束，或者用户的充电完成时。通过微信公众号的推送信息的方式，告知用户充电进程。</p><h3 id="需求实现"><a href="#需求实现" class="headerlink" title="需求实现"></a>需求实现</h3><h4 id="基础API："><a href="#基础API：" class="headerlink" title="基础API："></a>基础API：</h4><p>实现上面的需求用到API有：<code>uni.getSetting()</code>、<code>uni.openSetting()</code>、核心<code>uni.requestSubscribeMessage()</code> <a href="https://uniapp.dcloud.io/api/other/setting.html#getsetting">uniapp官方文档</a></p><ul><li>uni.getSetting()：获取用户的当前权限的设置。</li><li>uni.openSetting()：调起客户端小程序设置界面，返回用户设置的操作结果。</li><li>uni.requestSubscribeMessage()：调起客户端小程序订阅消息界面，返回用户订阅消息的操作结果。</li></ul><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><table>    <tr>        <td><center><img src="https://img-blog.csdnimg.cn/301f4f13133d4ed7a60c076ff0d93a00.jpeg#pic_center"  >图1 消息订阅按钮</center></td>        <td ><center><img src="https://img-blog.csdnimg.cn/8c2e14bc57c14c3f832f72d53adf16f0.jpeg#pic_center"  >图2 弹出订阅申请</center> </td>    </tr></table><h4 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>&lt;!--  消息订阅组件 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 500rpx;padding: 30rpx;&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;subscribeMessage()&quot;</span>&gt;</span>消息订阅<span class="hljs-tag">&lt;/<span class="hljs-name">u-button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;showPopup&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;650rpx&quot;</span> <span class="hljs-attr">:mask-close-able</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">border-radius</span>=<span class="hljs-string">&quot;18&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;padding-sm&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-xl&quot;</span>&gt;</span>订阅提示<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;padding-xl text-letter&quot;</span>&gt;</span></span><br><span class="language-xml">&#123;&#123;content&#125;&#125;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex justify-around&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cancelHandle&quot;</span>&gt;</span>&#123;&#123;cancelText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;confirmHandle&quot;</span>&gt;</span>&#123;&#123;confirmText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u-popup</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">name</span>: <span class="hljs-string">&quot;w-subscribeMessage&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">showPopup</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 授权询问弹框</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">content</span>: <span class="hljs-string">&#x27;为了及时获取订单状态，您是否想接收订单状态的消息提醒？&#x27;</span>, <span class="hljs-comment">// 弹框提示内容，</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">confirmText</span>: <span class="hljs-string">&#x27;去开启消息提醒&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">cancelText</span>: <span class="hljs-string">&#x27;不需要提醒&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">tmplId</span>: [<span class="hljs-string">&#x27;**************************&#x27;</span>, <span class="hljs-string">&#x27;**************************&#x27;</span>]</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 判断消息订阅总开关是否打开</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">subscribeMessage</span>(<span class="hljs-params">flag</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">getSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">success</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res)</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (!res.<span class="hljs-property">subscriptionsSetting</span>.<span class="hljs-property">mainSwitch</span>) &#123; <span class="hljs-comment">// 订阅消息的总开关,如果是关着的，引导用户去打开</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">true</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果开着，则继续向下打开弹窗，获取用户授权</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>()</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">fail</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>() <span class="hljs-comment">// 如果失败，也打开弹窗，获取用户授权</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 弹窗点订阅，开启消息订阅提醒</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">confirmHandle</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> == <span class="hljs-string">&#x27;确定&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">messageSubscription</span>()</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">openSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">complete</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">getSetting</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">success</span>:<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (res.<span class="hljs-property">subscriptionsSetting</span>.<span class="hljs-property">mainSwitch</span>) &#123; <span class="hljs-comment">// 订阅消息的总开关,如果是开着的</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">content</span> = <span class="hljs-string">&#x27;再次点击确定，弹出即可完成订阅&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">cancelText</span> = <span class="hljs-string">&#x27;取消&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> = <span class="hljs-string">&#x27;确定&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 弹窗点不订阅</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">cancelHandle</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 订阅申请弹出，只允许点击弹出</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">messageSubscription</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">showPopup</span> = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">content</span> = <span class="hljs-string">&#x27;为了及时掌握订单状态，您是否想接收订单状态的消息提醒？&#x27;</span> <span class="hljs-comment">// 弹框提示内容，</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">confirmText</span> = <span class="hljs-string">&#x27;去开启消息提醒&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">this</span>.<span class="hljs-property">cancelText</span> = <span class="hljs-string">&#x27;不需要提醒&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">uni.<span class="hljs-title function_">requestSubscribeMessage</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">tmplIds</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">tmplId</span>,</span></span><br><span class="language-javascript"><span class="language-xml">success：(res)=&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (res[<span class="hljs-string">&#x27;**************************&#x27;</span>] == <span class="hljs-string">&#x27;accept&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;xxxx消息订阅成功&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;)</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.padding-sm</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">padding</span>: <span class="hljs-number">22</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-center</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">text-align</span>: center;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-xl</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">36</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.padding-xl</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">padding</span>: <span class="hljs-number">50</span>upx;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.text-letter</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">1</span>upx;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.5</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.flex</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">display</span>: flex;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.justify-around</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">justify-content</span>: space-around;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p><strong>注意：这个API需要用户的点击行为才能触发</strong></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>html标签速写</title>
    <link href="/2022/06/23/html%E6%A0%87%E7%AD%BE%E9%80%9F%E5%86%99/"/>
    <url>/2022/06/23/html%E6%A0%87%E7%AD%BE%E9%80%9F%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h4 id="HTML标签速写相关规则"><a href="#HTML标签速写相关规则" class="headerlink" title="HTML标签速写相关规则"></a>HTML标签速写相关规则</h4><table><thead><tr><th align="center">符号</th><th align="center">功能</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">&gt;</td><td align="center">子级元素</td><td align="center">div&gt;ul&gt;li</td></tr><tr><td align="center">+</td><td align="center">并列元素</td><td align="center">div+div&gt;span</td></tr><tr><td align="center">^</td><td align="center">父级兄弟元素</td><td align="center">div&gt;ul^div&gt;span</td></tr><tr><td align="center">^^</td><td align="center">多级上层兄弟元素</td><td align="center">ul&gt;li&gt;span^^div</td></tr><tr><td align="center">*</td><td align="center">重复当前元素</td><td align="center">ul&gt;li*3</td></tr><tr><td align="center">()</td><td align="center">分组，操作多元素</td><td align="center">div&gt;(p&gt;span)*3</td></tr><tr><td align="center">#</td><td align="center">添加id属性</td><td align="center">div#main</td></tr><tr><td align="center">.</td><td align="center">添加class属性</td><td align="center">div.content</td></tr><tr><td align="center">[]</td><td align="center">添加多种属性</td><td align="center">div[class&#x3D;content title&#x3D;head]</td></tr><tr><td align="center">$</td><td align="center">顺序排列占位符默认1</td><td align="center">p.item$*3</td></tr><tr><td align="center">$$</td><td align="center">顺序排列占位符默认01</td><td align="center">p.item$$*3</td></tr><tr><td align="center">@</td><td align="center">顺序排列从某数开始</td><td align="center">p.item$@3*3</td></tr><tr><td align="center">@-</td><td align="center">逆序排列到某数结束</td><td align="center">p.item$@-3*3</td></tr><tr><td align="center">{}</td><td align="center">元素文本内容</td><td align="center">div#main&gt;div.content&gt;p.item{text1}+p.item{text2}</td></tr></tbody></table><ol><li>div&gt;ul&gt;li</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>div+div&gt;span</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>div&gt;ul^div&gt;span</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>ul&gt;li&gt;span^^div</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>ul&gt;li*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="6"><li>div&gt;(p&gt;span)*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="7"><li>div#main</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="8"><li>div.content</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="9"><li>div[class&#x3D;content title&#x3D;head]</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="10"><li>p.item$*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="11"><li>p.item$$*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item01&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item02&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item03&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="12"><li>p.item$@3*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="13"><li>p.item$@-3*3</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="14"><li>div#main&gt;div.content&gt;p.item{text1}+p.item{text2}</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>text1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>text2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VScode 报错 TypeScript intellisense is disabled on template</title>
    <link href="/2022/05/07/VScode%20%E6%8A%A5%E9%94%99%20TypeScript%20intellisense%20is%20disabled%20on%20template/"/>
    <url>/2022/05/07/VScode%20%E6%8A%A5%E9%94%99%20TypeScript%20intellisense%20is%20disabled%20on%20template/</url>
    
    <content type="html"><![CDATA[<h4 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h4><p><code>vscode</code>  安装 <code>Vue Language Features (volar)</code> 后出现 ：</p><p><font color=gray>TypeScript intellisense is disabled on template, you can config “jsx”: “preserve” in tsconfig or jsconfig to enable it, or config vueCompilerOptions.experimentalDisableTemplateSupport to disable this prompt.</font ></p><p><img src="https://img-blog.csdnimg.cn/d4eb526697bd4b7593010dffbf29e290.png#pic_center" alt="问题图片展示"></p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>问题的描述是：TypeScript智能感知在模板中是禁用的，你可以在tsconfig或jsconfig中配置’ “jsx”: “preserve”来启用它，或者配置’ vueCompilerOptions ‘。 使用experimentalDisableTemplateSupport来禁用这个提示。那么我们根据描述解决问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 在文件 jsconfig.json 中</span><br>&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;./&quot;</span>,<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@/*&quot;</span>: [<br>        <span class="hljs-string">&quot;src/*&quot;</span><br>      ]<br>    &#125;,<br>    <span class="hljs-string">&quot;jsx&quot;</span>: <span class="hljs-string">&quot;preserve&quot;</span> <span class="hljs-comment">//添加配置</span><br>  &#125;,<br>  <span class="hljs-string">&quot;exclude&quot;</span>: [<br>    <span class="hljs-string">&quot;node_modules&quot;</span>,<br>    <span class="hljs-string">&quot;dist&quot;</span><br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/480e1dda5b2f404a9d1d602ce4ff72a7.png#pic_center" alt="解决问题图片"></p><p>问题得以解决。</p><p>如果还会存在问题，可以使用<code>vetur</code>插件格式化文档。将<code>Vue Language Features (volar)</code> 禁用后重启VScode即可。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue中自定义指令directive，提交防抖案例debounce</title>
    <link href="/2022/04/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4directive%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%98%B2%E6%8A%96%E6%A1%88%E4%BE%8Bdebounce/"/>
    <url>/2022/04/30/vue%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4directive%EF%BC%8C%E6%8F%90%E4%BA%A4%E9%98%B2%E6%8A%96%E6%A1%88%E4%BE%8Bdebounce/</url>
    
    <content type="html"><![CDATA[<h3 id="关键API介绍"><a href="#关键API介绍" class="headerlink" title="关键API介绍"></a>关键API介绍</h3><h4 id="Vue-directive-id-definition"><a href="#Vue-directive-id-definition" class="headerlink" title="Vue.directive( id, [definition])"></a>Vue.directive( id, [definition])</h4><ul><li><strong>参数</strong>：<ul><li><code>&#123;string&#125; id</code></li><li><code>&#123;Function | Object&#125; [definition]</code></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 注册</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>, &#123;<br>  <span class="hljs-attr">bind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">inserted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">componentUpdated</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">unbind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;<br>&#125;)<br><br><span class="hljs-comment">// 注册 (指令函数)</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// 这里将会被 `bind` 和 `update` 调用</span><br>&#125;)<br><br><span class="hljs-comment">// getter，返回已注册的指令</span><br><span class="hljs-keyword">var</span> myDirective = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="钩子函数解释"><a href="#钩子函数解释" class="headerlink" title="钩子函数解释"></a>钩子函数解释</h4><p><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p><p><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p><p><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。</p><p><code>componentUpdated</code>：指令所在组件的 VNode <strong>及其子 VNode</strong> 全部更新后调用。</p><p><code>unbind</code>：只调用一次，指令与元素解绑时调用。</p><h4 id="钩子函数参数"><a href="#钩子函数参数" class="headerlink" title="钩子函数参数"></a>钩子函数参数</h4><p>指令钩子函数都会三个参数：<strong>el</strong>、<strong>binding</strong>、<strong>vnode</strong>、<strong>oldVnode</strong>（仅update、componentUpdated）</p><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM。</li><li><code>binding</code>：一个对象，包含以下 property：<ul><li><code>name</code>：指令名，不包括 <em>v-</em> 前缀。</li><li><code>value</code>：指令的绑定值，例如：<code>v-myDirective=&quot;2&quot;</code> 中，绑定值为 <code>2</code>。</li><li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</li><li><code>expression</code>：字符串形式的指令表达式。例如 <code>v-myDirective=&quot;1 + 1&quot;</code> 中，表达式为 <code>&quot;1 + 1&quot;</code>。</li><li><code>arg</code>：传给指令的参数，可选。例如 <code>v-myDirective:foo</code> 中，参数为 <code>&quot;foo&quot;</code>。</li><li><code>modifiers</code>：一个包含修饰符的对象。例如：<code>v-myDirective.foo.bar</code> 中，修饰符对象为 <code>&#123; foo: true, bar: true &#125;</code>。</li></ul></li><li><code>vnode</code>：Vue 编译生成的虚拟节点。</li><li><code>oldVnode</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用</li></ul><h4 id="函数简写"><a href="#函数简写" class="headerlink" title="函数简写"></a>函数简写</h4><p> 当<code>bind</code> 和 <code>update</code> 时触发相同行为，而不关心其它的钩子的时候。可以这样写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;myDirective&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">el,binding</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(el,binding.<span class="hljs-property">value</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h4><p>如果指令需要多个值，可以传入一个 JavaScript 对象字面量，指令函数能够接受所有合法的 JavaScript 表达式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-demo</span>=<span class="hljs-string">&quot;&#123; color: &#x27;white&#x27;, text: &#x27;hello&#x27; &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;demo&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(binding.<span class="hljs-property">value</span>.<span class="hljs-property">color</span>) <span class="hljs-comment">// &quot;white&quot;</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(binding.<span class="hljs-property">value</span>.<span class="hljs-property">text</span>)  <span class="hljs-comment">// &quot;hello&quot;</span><br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="自定义防抖指令案例"><a href="#自定义防抖指令案例" class="headerlink" title="自定义防抖指令案例"></a>自定义防抖指令案例</h3><h4 id="给button按钮添加自定义防抖指令"><a href="#给button按钮添加自定义防抖指令" class="headerlink" title="给button按钮添加自定义防抖指令"></a>给button按钮添加自定义防抖指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">v-debounce</span>=<span class="hljs-string">&quot;saveMessage&quot;</span> &gt;</span>确 定<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">saveMessage</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;被点击了！&#x27;</span>)</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// main.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;debounce&#x27;</span>, &#123;<br>  <span class="hljs-attr">bind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>    el.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!el.<span class="hljs-property">disabled</span>) &#123;<br>        binding.<span class="hljs-title function_">value</span>(); <span class="hljs-comment">// value 相当于saveMessage;</span><br>        el.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          el.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span><br>        &#125;, <span class="hljs-number">1500</span>) <span class="hljs-comment">// 定时器 1.5秒之后才能点击</span><br>      &#125;<br>    &#125;);<br>  &#125;<br>&#125;);<br><span class="hljs-comment">// 可以尝试去简写</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>echarts 设置初始点在原点</title>
    <link href="/2022/01/08/echarts%20%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E7%82%B9%E5%9C%A8%E5%8E%9F%E7%82%B9/"/>
    <url>/2022/01/08/echarts%20%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E7%82%B9%E5%9C%A8%E5%8E%9F%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用<code>echarts</code>折线图中渲染出来的图表数据不是从原点坐标开始，而是在两点的中间显示。<br><img src="https://img-blog.csdnimg.cn/f7dbaf7203c9440a87289c470e402115.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在<code>xAxis</code>字段中添加一个<code>boundaryGap</code>属性；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">xAxis</span>: &#123;<br>  <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;0时&#x27;</span>, <span class="hljs-string">&#x27;1时&#x27;</span>, <span class="hljs-string">&#x27;2时&#x27;</span>, <span class="hljs-string">&#x27;3时&#x27;</span>, <span class="hljs-string">&#x27;4时&#x27;</span>, <span class="hljs-string">&#x27;5时&#x27;</span>, <span class="hljs-string">&#x27;6时&#x27;</span>, <span class="hljs-string">&#x27;7时&#x27;</span>, <span class="hljs-string">&#x27;8时&#x27;</span>, <span class="hljs-string">&#x27;9时&#x27;</span>, <span class="hljs-string">&#x27;10时&#x27;</span>, <span class="hljs-string">&#x27;11时&#x27;</span>, <span class="hljs-string">&#x27;12时&#x27;</span>, <span class="hljs-string">&#x27;13时&#x27;</span>, <span class="hljs-string">&#x27;14时&#x27;</span>, <span class="hljs-string">&#x27;15时&#x27;</span>, <span class="hljs-string">&#x27;16时&#x27;</span>, <span class="hljs-string">&#x27;17时&#x27;</span>, <span class="hljs-string">&#x27;18时&#x27;</span>, <span class="hljs-string">&#x27;19时&#x27;</span>, <span class="hljs-string">&#x27;20时&#x27;</span>, <span class="hljs-string">&#x27;21时&#x27;</span>, <span class="hljs-string">&#x27;22时&#x27;</span>, <span class="hljs-string">&#x27;23时&#x27;</span>],<br><span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;时段&#x27;</span>,<br>  <span class="hljs-attr">boundaryGap</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// 显示间距设置为false</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>这样就可以了：<br><img src="https://img-blog.csdnimg.cn/aaabfa60abbd48ce85827e0181faa749.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hbuilder 打开终端无法输入指令</title>
    <link href="/2021/12/27/Hbuilder%20%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4/"/>
    <url>/2021/12/27/Hbuilder%20%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用<code>HbuliderX</code>打开终端时，出现如下情况。无法输入。</p><p><img src="https://img-blog.csdnimg.cn/b3045e8c55e343a3a3263d075b3d5e0e.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>原因是：配置启动终端的路径存在问题。</p><p>1.进入Hbuilder安装位置</p><p><img src="https://img-blog.csdnimg.cn/d2398aaf9d5e4123b6b074e99e1045ef.png#pic_center" alt="在这里插入图片描述"></p><p>2.打开HBuilderX\plugins\builtincef3terminal\script 下 main.js;</p><p><img src="https://img-blog.csdnimg.cn/775e0cda0c744ab28d8ce239268a4509.png#pic_center" alt="在这里插入图片描述"></p><p>3.将shell的值写成绝对路径，如将shell&#x3D;”powershell.exe”改为shell&#x3D;’C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe’；</p><p><img src="https://img-blog.csdnimg.cn/2e79fd2cdfed42fdbf6f6d66a560c31b.png#pic_center" alt="在这里插入图片描述"></p><p>4.重启HbuliderX，再打开终端</p><p><img src="https://img-blog.csdnimg.cn/ef8b42d85e694a8b817e6f3651ac21e2.png#pic_center" alt="在这里插入图片描述"></p><p>如果重启后依旧没有效果，可以如下尝试：将<code>shell</code>的值替换成<code>cmd.exe</code> 保存后再重启。<br><img src="https://img-blog.csdnimg.cn/d699e7a559c94035ba99ed617cfa25b0.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>css 字体渐变色</title>
    <link href="/2021/12/21/css%20%E5%AD%97%E4%BD%93%E6%B8%90%E5%8F%98%E8%89%B2/"/>
    <url>/2021/12/21/css%20%E5%AD%97%E4%BD%93%E6%B8%90%E5%8F%98%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>给Icon字体，添加一个<code>渐变色</code>。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-guzhangliebiao cu-text-orange&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 80rpx;&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>故障列表<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-repair cu-text-red&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 80rpx;&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>故障处理<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.cu-text-orange</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">-webkit-linear-gradient</span>(<span class="hljs-number">45deg</span>, <span class="hljs-number">#F0B11B</span>, <span class="hljs-number">#FFD673</span>);</span></span><br><span class="language-css"><span class="language-xml">-webkit-<span class="hljs-attribute">background-clip</span>: text;</span></span><br><span class="language-css"><span class="language-xml">-webkit-text-fill-<span class="hljs-attribute">color</span>: transparent;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.cu-text-red</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">-webkit-linear-gradient</span>(<span class="hljs-number">45deg</span>, <span class="hljs-number">#FF4747</span>, <span class="hljs-number">#ffff7f</span>);</span></span><br><span class="language-css"><span class="language-xml">-webkit-<span class="hljs-attribute">background-clip</span>: text;</span></span><br><span class="language-css"><span class="language-xml">-webkit-text-fill-<span class="hljs-attribute">color</span>: transparent;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://img-blog.csdnimg.cn/12c934c2ea5248abbcee09a530ea3c90.png#pic_center" alt="效果展示图"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 小程序扫描二维码</title>
    <link href="/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <url>/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><p>扫描提供的二维码，获得二维码中相关信息。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>使用uni.scanCode()，调用小程序中的扫码功能。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><br>&#125;<br>&#125;,<br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br><br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-title function_">scanCode</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-comment">// 允许从相机和相册扫码</span><br>uni.<span class="hljs-title function_">scanCode</span>(&#123;<br><span class="hljs-attr">scanType</span>: [<span class="hljs-string">&quot;qrCode&quot;</span>],<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">result</span>) &#123;<br><span class="hljs-keyword">const</span> val = res.<span class="hljs-property">result</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;请重新扫描&#x27;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;未识别到二维码&#x27;</span>);<br>&#125;<br>&#125;)<br>&#125;,<br>      <span class="hljs-comment">// 对扫码后，得到的url地址参数的处理。</span><br>      <span class="hljs-title function_">parseUrl</span>(<span class="hljs-params">url</span>) &#123;<br><span class="hljs-keyword">let</span> pattern = <span class="hljs-regexp">/(\w+)=([0-9a-zA-Z\u4e00-\u9fa5]+)/ig</span>;<br><span class="hljs-keyword">let</span> parames = &#123;&#125;;<br>url.<span class="hljs-title function_">replace</span>(pattern, <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>parames[b] = c;<br>&#125;);<br><span class="hljs-keyword">return</span> parames;<span class="hljs-comment">// 返回一个参数名：参数值 的对象。</span><br>&#125;,<br>&#125;<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="uni-scanCode"><a href="#uni-scanCode" class="headerlink" title="uni.scanCode"></a>uni.scanCode</h3><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th align="center">必填</th><th align="center">说明</th></tr></thead><tbody><tr><td align="left">onlyFromCamera</td><td align="left">Boolean</td><td align="center">否</td><td align="center">是否只能从相机扫码</td></tr><tr><td align="left">scanType</td><td align="left">Array</td><td align="center">否</td><td align="center">扫码类型，barCode(一维码)、qrCode(二维码)</td></tr><tr><td align="left">success</td><td align="left">Function</td><td align="center">否</td><td align="center">接口调用成功的回调，result：扫码的内容。</td></tr><tr><td align="left">fail</td><td align="left">Function</td><td align="center">否</td><td align="center">接口调用失败的回调函数（识别失败、用户取消等情况下触发）</td></tr><tr><td align="left">complete</td><td align="left">Function</td><td align="center">否</td><td align="center">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 小程序支付功能</title>
    <link href="/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/12/16/uniapp%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><p>项目生成订单，需要用户通过小程序进行支付。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>使用uni.requestPayment()，调用小程序中的付款功能。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs js"><br>&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">request</span>:&#123;<br>          <span class="hljs-attr">id</span>:xxxxx,<br>          <span class="hljs-attr">info</span>:<span class="hljs-string">&#x27;xxxx&#x27;</span><br>        &#125;<br>&#125;<br>&#125;,<br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br><br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-comment">// 提交订单</span><br><span class="hljs-title function_">subOrder</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;api/order/createOrder&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">request</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-comment">// 得到订单的反参调用微信支付</span><br><span class="hljs-keyword">let</span> pay = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">prepayId</span>);<br>uni.<span class="hljs-title function_">requestPayment</span>(&#123;<br><span class="hljs-attr">timeStamp</span>: pay.<span class="hljs-property">timeStamp</span>,<br><span class="hljs-attr">nonceStr</span>: pay.<span class="hljs-property">nonceStr</span>,<br><span class="hljs-attr">package</span>: pay.<span class="hljs-property">package</span>,<br><span class="hljs-attr">signType</span>: pay.<span class="hljs-property">signType</span>,<br><span class="hljs-attr">paySign</span>: pay.<span class="hljs-property">paySign</span>,<br><span class="hljs-comment">// 支付成功的回调</span><br><span class="hljs-title function_">success</span>(<span class="hljs-params">result</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br><span class="hljs-keyword">if</span> (result.<span class="hljs-property">errMsg</span> == <span class="hljs-string">&quot;requestPayment:ok&quot;</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;success&quot;</span>,<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;购买成功！&quot;</span><br>&#125;)<br> &#125;<br><br>&#125;,<br><span class="hljs-comment">// 支付失败回调</span><br><span class="hljs-title function_">fail</span>(<span class="hljs-params">err</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span>,<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;支付失败&quot;</span><br>&#125;)<br>&#125;<br>&#125;)<br>&#125;<br>&#125;);<br>      &#125;<br>&#125;<br>&#125;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="left">provider</td><td align="left">String</td><td align="center">服务提供商，通过 <a href="https://uniapp.dcloud.io/api/plugins/provider">uni.getProvider</a> 获取。</td></tr><tr><td align="left">orderInfo</td><td align="left">String&#x2F;Object</td><td align="center">订单数据</td></tr><tr><td align="left">timeStamp</td><td align="left">String</td><td align="center">时间戳</td></tr><tr><td align="left">nonceStr</td><td align="left">String</td><td align="center">随机字符串，长度为32个字符以下。</td></tr><tr><td align="left">package</td><td align="left">String</td><td align="center">统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id&#x3D;xx。</td></tr><tr><td align="left">signType</td><td align="left">String</td><td align="center">签名算法，暂支持 MD5。</td></tr><tr><td align="left">paySign</td><td align="left">String</td><td align="center">签名，具体签名方案参见 <a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&index=3">微信小程序支付文档</a></td></tr><tr><td align="left">bannedChannels</td><td align="left">Array<String></td><td align="center">需要隐藏的支付方式，详见 <a href="https://smartprogram.baidu.com/docs/develop/api/open_payment/#requestPolymerPayment/">百度小程序支付文档</a></td></tr><tr><td align="left">service</td><td align="left">Number</td><td align="center">固定值：1（拉起小程序收银台）开发者如果不希望使用字节跳动小程序收银台，service设置为3&#x2F;4时，可以直接拉起微信&#x2F;支付宝进行支付：service&#x3D;3： 微信API支付，不拉起小程序收银台；service&#x3D;4： 支付宝API支付，不拉起小程序收银台。其中service&#x3D;3、4，仅在1.35.0.1+基础库(头条743+)支持</td></tr><tr><td align="left">_debug</td><td align="left">Number</td><td align="center">仅限调试用</td></tr><tr><td align="left">getOrderStatus</td><td align="left">Function</td><td align="center">商户前端实现的查询支付订单状态方法（该方法需要返回个Promise对象）。 service&#x3D;3、4时不需要传。</td></tr><tr><td align="left">success</td><td align="left">Function</td><td align="center">接口调用成功的回调</td></tr><tr><td align="left">fail</td><td align="left">Function</td><td align="center">接口调用失败的回调函数</td></tr><tr><td align="left">complete</td><td align="left">Function</td><td align="center">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>图片上传阿里云成功，获取图片失败</title>
    <link href="/2021/12/06/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8C%E4%BA%91%E6%88%90%E5%8A%9F%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%A4%B1%E8%B4%A5/"/>
    <url>/2021/12/06/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8C%E4%BA%91%E6%88%90%E5%8A%9F%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>微信小程序图片上传阿里云成功，但是阿里云oss中并没有存储图片。</p><p>问题代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">uploadFile</span>(<span class="hljs-params">file,data</span>)&#123;<br><span class="hljs-keyword">var</span> filename = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data)<br><span class="hljs-keyword">var</span> formData=&#123;<br><span class="hljs-attr">key</span>: data.<span class="hljs-property">dir</span> +<span class="hljs-string">&#x27;/&#x27;</span>+ filename, <span class="hljs-comment">// 文件名</span><br><span class="hljs-attr">policy</span>: data.<span class="hljs-property">policy</span>,<br><span class="hljs-title class_">OSSAccessKeyId</span>: data.<span class="hljs-property">accessId</span>, <span class="hljs-comment">//后台获取临时ID</span><br><span class="hljs-attr">success_action_status</span>: <span class="hljs-string">&#x27;200&#x27;</span>, <span class="hljs-comment">//让服务端返回200,不然，默认会返回204</span><br><span class="hljs-title class_">Signature</span>: data.<span class="hljs-property">signature</span> ,<span class="hljs-comment">//后台获取签名</span><br>          <span class="hljs-attr">file</span>:file.<span class="hljs-property">path</span>,<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(formData)<br>uni.<span class="hljs-title function_">uploadFile</span>(&#123;<br><span class="hljs-attr">url</span>: data.<span class="hljs-property">host</span>, <span class="hljs-comment">//后台返回的阿里云存储的上传地址</span><br><span class="hljs-attr">filePath</span>:file.<span class="hljs-property">path</span>,<br><span class="hljs-attr">fileType</span>: <span class="hljs-string">&quot;image&quot;</span>,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;file&#x27;</span>,<br><span class="hljs-attr">formData</span>:formData,<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">requestDatas</span>.<span class="hljs-property">repairPhoto</span>.<span class="hljs-title function_">push</span>(data.<span class="hljs-property">dir</span>  +<span class="hljs-string">&#x27;/&#x27;</span>+ filename)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-property">host</span> + <span class="hljs-string">&#x27;/&#x27;</span>+  data.<span class="hljs-property">dir</span>  +<span class="hljs-string">&#x27;/&#x27;</span>+ filename) <span class="hljs-comment">// 返回保存在阿里oss上的地址</span><br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>&#125;<br>&#125;);<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>原来是上传的formData中的file字段内容有问题。将file字段删除即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">uploadFile</span>(<span class="hljs-params">file,data</span>)&#123;<br><span class="hljs-keyword">var</span> filename = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data)<br><span class="hljs-keyword">var</span> formData=&#123;<br><span class="hljs-attr">key</span>: data.<span class="hljs-property">dir</span> +<span class="hljs-string">&#x27;/&#x27;</span>+ filename, <span class="hljs-comment">// 文件名</span><br><span class="hljs-attr">policy</span>: data.<span class="hljs-property">policy</span>,<br><span class="hljs-title class_">OSSAccessKeyId</span>: data.<span class="hljs-property">accessId</span>, <span class="hljs-comment">//后台获取临时ID</span><br><span class="hljs-attr">success_action_status</span>: <span class="hljs-string">&#x27;200&#x27;</span>, <span class="hljs-comment">//让服务端返回200,不然，默认会返回204</span><br><span class="hljs-title class_">Signature</span>: data.<span class="hljs-property">signature</span> ,<span class="hljs-comment">//后台获取签名</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(formData)<br>uni.<span class="hljs-title function_">uploadFile</span>(&#123;<br><span class="hljs-attr">url</span>: data.<span class="hljs-property">host</span>, <span class="hljs-comment">//后台返回的阿里云存储的上传地址</span><br><span class="hljs-attr">filePath</span>:file.<span class="hljs-property">path</span>,<br><span class="hljs-attr">fileType</span>: <span class="hljs-string">&quot;image&quot;</span>,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;file&#x27;</span>,<br><span class="hljs-attr">formData</span>:formData,<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">requestDatas</span>.<span class="hljs-property">repairPhoto</span>.<span class="hljs-title function_">push</span>(data.<span class="hljs-property">dir</span>  +<span class="hljs-string">&#x27;/&#x27;</span>+ filename)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-property">host</span> + <span class="hljs-string">&#x27;/&#x27;</span>+  data.<span class="hljs-property">dir</span>  +<span class="hljs-string">&#x27;/&#x27;</span>+ filename) <span class="hljs-comment">// 返回保存在阿里oss上的地址</span><br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>&#125;<br>&#125;);<br>&#125;,<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何让index页面中tabbar页面中的组件强制刷新</title>
    <link href="/2021/12/06/%E5%A6%82%E4%BD%95%E8%AE%A9index%E9%A1%B5%E9%9D%A2%E4%B8%ADtabbar%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E5%BC%BA%E5%88%B6%E5%88%B7%E6%96%B0/"/>
    <url>/2021/12/06/%E5%A6%82%E4%BD%95%E8%AE%A9index%E9%A1%B5%E9%9D%A2%E4%B8%ADtabbar%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E5%BC%BA%E5%88%B6%E5%88%B7%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>微信小程序的tabbar，写成组件，然后再index页面（主页面）中以v-if的形式进行选择展示。因为是组件级页面，不具有onshow的生命周期钩子，当数据发生变化的时候，组件内的数据并没有变化。例如：组件在created是获得缓存数据后，缓存中的数据变化时。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>使用$.nextTick()方法进行子组件刷新；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tempalte</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 我的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">w-mine</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;refresh&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tempalte</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript"><span class="hljs-attr">refresh</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">refresh</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.$nextTick(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">refresh</span> = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>css cursor鼠标样式</title>
    <link href="/2021/11/01/css%20cursor%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F/"/>
    <url>/2021/11/01/css%20cursor%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h4 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h4><p>为了用户拥有更好的视觉体验，我们可以根据需要改变鼠标落在不同节点上的样式，常用样式如下：</p><p>1）、cursor:default 默认正常鼠标指针；<br>2）、cursor:hand 和 cursor:text 文本选择效果；<br>3）、cursor:move 移动选择效果；<br><img src="https://img-blog.csdnimg.cn/2b4a079e281040caa81038f293622a32.gif#pic_center" alt="移动效果图"></p><p>4）、cursor:pointer 手指形状 链接选择效果；<br><img src="https://img-blog.csdnimg.cn/aa003de202ef491aa69b7ec53d60deb3.gif#pic_center" alt="手指形状效果图"></p><p>5）、cursor:url(url图片地址) 设置自定义光标图标；</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp canvas绘图</title>
    <link href="/2021/10/08/uniapp%20canvas%E7%BB%98%E5%9B%BE/"/>
    <url>/2021/10/08/uniapp%20canvas%E7%BB%98%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>根据项目需求，将商品的图片，用户头像，二维码，商品信息绘制到分享海报中。</p><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><p><img src="https://img-blog.csdnimg.cn/a6caae2a08954fcea45daedaa42ae20e.png#pic_center" alt="在这里插入图片描述"></p><h4 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h4><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">avatarImg</td><td align="center">String</td><td align="center">头像图片</td></tr><tr><td align="center">bgImg</td><td align="center">String</td><td align="center">背景图片</td></tr><tr><td align="center">qrImg</td><td align="center">String</td><td align="center">二维码</td></tr><tr><td align="center">goodsImg</td><td align="center">String</td><td align="center">商品图片</td></tr><tr><td align="center">iconImg</td><td align="center">String</td><td align="center">平台icon</td></tr><tr><td align="center">goodsTitle</td><td align="center">String</td><td align="center">商品名称</td></tr><tr><td align="center">realPrice</td><td align="center">String</td><td align="center">真实价格</td></tr><tr><td align="center">price</td><td align="center">String</td><td align="center">价格</td></tr><tr><td align="center">canvasH</td><td align="center">Number</td><td align="center">画布高度</td></tr><tr><td align="center">widthRatio</td><td align="center">Number</td><td align="center">画布宽度比例</td></tr></tbody></table><h4 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-keyword">var</span> ctx = uni.<span class="hljs-title function_">createCanvasContext</span>(<span class="hljs-string">&#x27;myCanvas&#x27;</span>, <span class="hljs-variable language_">this</span>);<br><span class="hljs-comment">// 填充背景色，白色</span><br> ctx.<span class="hljs-title function_">beginPath</span>();<br>ctx.<span class="hljs-title function_">setFillStyle</span>(<span class="hljs-string">&#x27;#ffffff&#x27;</span>); <span class="hljs-comment">// 默认白色</span><br>ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasW</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasH</span>) <span class="hljs-comment">// fillRect(x,y,宽度，高度)</span><br><br><span class="hljs-comment">// 绘制商品主图，二维码 drawImage(图片路径, x, y, 绘制图像的宽度, 绘制图像的高度)</span><br>ctx.<span class="hljs-title function_">drawImage</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bgImgInfo</span>.<span class="hljs-property">path</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasW</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasH</span>);<br>ctx.<span class="hljs-title function_">drawImage</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">goodsImgInfo</span>.<span class="hljs-property">path</span>, <span class="hljs-number">20</span>, <span class="hljs-number">80</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasW</span> * <span class="hljs-number">.85</span>, <span class="hljs-number">220</span>)<br>ctx.<span class="hljs-title function_">drawImage</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">iconImgInfo</span>.<span class="hljs-property">path</span>, <span class="hljs-number">20</span>, <span class="hljs-number">310</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>);<br>ctx.<span class="hljs-title function_">drawImage</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">avatarImgInfo</span>.<span class="hljs-property">path</span>, <span class="hljs-number">24</span>, <span class="hljs-number">44</span>, <span class="hljs-number">30</span>, <span class="hljs-number">30</span>);<br>ctx.<span class="hljs-title function_">drawImage</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">qrImgInfo</span>.<span class="hljs-property">path</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvasW</span> - <span class="hljs-number">98</span>, <span class="hljs-number">410</span>, <span class="hljs-number">75</span>, <span class="hljs-number">75</span>);<br><br><span class="hljs-keyword">let</span> avatar;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">headimgs</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">6</span>) &#123;<br>avatar = <span class="hljs-variable language_">this</span>.<span class="hljs-property">headimgs</span>.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, applyNum);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>avatar = <span class="hljs-variable language_">this</span>.<span class="hljs-property">headimgs</span>;<br>&#125;<br>avatar.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>ctx.<span class="hljs-title function_">drawImage</span>(item, <span class="hljs-number">30</span> + index * <span class="hljs-number">15</span>, <span class="hljs-number">370</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>)<br>&#125;)<br><br><span class="hljs-comment">// 3、绘制商品标题</span><br><span class="hljs-keyword">let</span> goodsName;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">goodsTitle</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">11</span>) &#123;<br>goodsName = <span class="hljs-variable language_">this</span>.<span class="hljs-property">goodsTitle</span>.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-number">13</span>) + <span class="hljs-string">&quot;...&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>goodsName = <span class="hljs-variable language_">this</span>.<span class="hljs-property">goodsTitle</span>;<br>&#125;<br>ctx.<span class="hljs-title function_">setFontSize</span>(<span class="hljs-number">15</span>); <span class="hljs-comment">// setFontSize() 设置字体字号</span><br>ctx.<span class="hljs-title function_">setFillStyle</span>(<span class="hljs-string">&#x27;#333&#x27;</span>); <span class="hljs-comment">// setFillStyle() 设置字体颜色</span><br>ctx.<span class="hljs-title function_">fillText</span>(goodsName, <span class="hljs-number">38</span>, <span class="hljs-number">323</span>);<br><br><span class="hljs-comment">// 4、真实价格</span><br>ctx.<span class="hljs-title function_">beginPath</span>()<br>ctx.<span class="hljs-title function_">setFontSize</span>(<span class="hljs-number">17</span>) <span class="hljs-comment">// 字号</span><br>ctx.<span class="hljs-title function_">setFillStyle</span>(<span class="hljs-string">&#x27;#e31d1a&#x27;</span>) <span class="hljs-comment">// 颜色</span><br>ctx.<span class="hljs-title function_">fillText</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">realPrice</span>, <span class="hljs-number">40</span>, <span class="hljs-number">350</span>); <span class="hljs-comment">// （文字，x，y）</span><br><br><span class="hljs-comment">// 5、原价价格</span><br>ctx.<span class="hljs-title function_">setFontSize</span>(<span class="hljs-number">15</span>) <span class="hljs-comment">// 字号</span><br>ctx.<span class="hljs-title function_">setFillStyle</span>(<span class="hljs-string">&#x27;#aaaaaa&#x27;</span>) <span class="hljs-comment">// 颜色</span><br>ctx.<span class="hljs-title function_">fillText</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">price</span>, <span class="hljs-number">135</span>, <span class="hljs-number">350</span>); <span class="hljs-comment">// （文字，x，y）</span><br><br><span class="hljs-comment">// 6、申请人数</span><br>ctx.<span class="hljs-title function_">setFontSize</span>(<span class="hljs-number">10</span>)<br>ctx.<span class="hljs-title function_">setFillStyle</span>(<span class="hljs-string">&#x27;#8799a3&#x27;</span>)<br>ctx.<span class="hljs-title function_">fillText</span>(<span class="hljs-number">1</span> + <span class="hljs-string">&#x27;万+人已购买&#x27;</span>, <span class="hljs-number">150</span>, <span class="hljs-number">385</span>);<br><br><span class="hljs-comment">// 7、划线</span><br>ctx.<span class="hljs-title function_">beginPath</span>()<br>ctx.<span class="hljs-title function_">setStrokeStyle</span>(<span class="hljs-string">&#x27;#e31d1a&#x27;</span>)<br>ctx.<span class="hljs-title function_">setLineWidth</span>(<span class="hljs-number">2</span>)<br>ctx.<span class="hljs-title function_">moveTo</span>(<span class="hljs-number">135</span>, <span class="hljs-number">345</span>)<br>ctx.<span class="hljs-title function_">lineTo</span>(<span class="hljs-number">188</span>, <span class="hljs-number">345</span>)<br>ctx.<span class="hljs-title function_">stroke</span>()<br><br>ctx.<span class="hljs-title function_">draw</span>(<span class="hljs-literal">true</span>, <span class="hljs-function">(<span class="hljs-params">ret</span>) =&gt;</span> &#123; <span class="hljs-comment">// draw方法 把以上内容画到 canvas 中。</span><br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br><span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;绘制完成&#x27;</span>,<br>&#125;);<br>uni.<span class="hljs-title function_">canvasToTempFilePath</span>(&#123; <span class="hljs-comment">// 保存canvas为图片</span><br><span class="hljs-attr">canvasId</span>: <span class="hljs-string">&#x27;myCanvas&#x27;</span>,<br><span class="hljs-attr">quality</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">postDataUrl</span> = res.<span class="hljs-property">tempFilePath</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[\r\n]/g</span>,<br><span class="hljs-string">&#x27;&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">postDataUrl</span>)<br><span class="hljs-comment">// #ifdef APP-PLUS</span><br>uni.<span class="hljs-title function_">saveImageToPhotosAlbum</span>(&#123;<br><span class="hljs-attr">filePath</span>: res.<span class="hljs-property">tempFilePath</span>,<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>()<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;生成海报成功&#x27;</span><br>&#125;)<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>()<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;生成海报失败&#x27;</span><br>&#125;)<br>&#125;<br>&#125;)<br><span class="hljs-comment">//  #endif</span><br>&#125;<br>&#125;)<br>&#125;);<br>&#125;, <span class="hljs-number">1500</span>)<br></code></pre></td></tr></table></figure><h4 id="相关解析"><a href="#相关解析" class="headerlink" title="相关解析"></a>相关解析</h4><p><code>uni.createCanvasContext(canvasId, this)</code></p><p>创建<code>canvas</code>绘图上下文。</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">canvasId</td><td align="center">String</td><td align="center">传入定义在 <code>&lt;canvas/&gt;</code> 的 canvas-id或id的唯一标识</td></tr><tr><td align="center">this</td><td align="center">Object</td><td align="center">组件实例 this ，不可省略</td></tr></tbody></table><p><code>beginPath()</code></p><p>开始创建一个路径</p><p><code>setFillStyle(color)</code></p><p>设置填充色</p><p><code>fillRect(x, y, width, height)</code></p><p>设置填充一个矩形的位置和大小。</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center">x</td><td align="center">Number</td><td align="center">矩形路径左上角的x坐标</td></tr><tr><td align="center">y</td><td align="center">Number</td><td align="center">矩形路径左上角的y坐标</td></tr><tr><td align="center">width</td><td align="center">Number</td><td align="center">矩形路径的宽度</td></tr><tr><td align="center">height</td><td align="center">Number</td><td align="center">矩形路径的高度</td></tr></tbody></table><p><code>drawImage()</code></p><p>将图片绘制到画布上，有三个版本的写法：</p><ul><li><code>drawImage(imageResource，dx, dy)</code></li><li><code>drawImage(imageResource，dx, dy, dWidth, dHeight)</code></li><li><code>drawImage(imageResource，sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)</code></li></ul><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">imageResource</td><td align="center">String</td><td align="center">所要绘制的图片资源</td></tr><tr><td align="center">dx</td><td align="center">Number</td><td align="center">图像的左上角在 X 轴的位置</td></tr><tr><td align="center">dy</td><td align="center">Number</td><td align="center">图像的左上角在 Y 轴的位置</td></tr><tr><td align="center">dWidth</td><td align="center">Number</td><td align="center">绘制图像的宽度</td></tr><tr><td align="center">dHeight</td><td align="center">Number</td><td align="center">绘制图像的高度</td></tr><tr><td align="center">sx</td><td align="center">Number</td><td align="center">源图像的矩形选择框的左上角 X 坐标</td></tr><tr><td align="center">sy</td><td align="center">Number</td><td align="center">源图像的矩形选择框的左上角 Y 坐标</td></tr><tr><td align="center">sWidth</td><td align="center">Number</td><td align="center">矩形选择框的高度</td></tr><tr><td align="center">sHeight</td><td align="center">Number</td><td align="center">矩形选择框的高度</td></tr></tbody></table><p><code>setFontSize(size)</code></p><p>设置字体的大小</p><p><code>fillText(text, x, y, maxWidth)</code></p><p>在画布上绘制文本</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">text</td><td align="center">String</td><td align="center">文本</td></tr><tr><td align="center">x</td><td align="center">Number</td><td align="center">文本的左上角x坐标位置</td></tr><tr><td align="center">y</td><td align="center">Number</td><td align="center">文本的左上角y坐标位置</td></tr><tr><td align="center">maxWidth</td><td align="center">Number</td><td align="center">绘制的最大宽度(选填)</td></tr></tbody></table><p><code>setStrokeStyle(color)</code></p><p>设置边框颜色，默认颜色为 black。</p><p><code>setLineWidth(width)</code></p><p>设置线条的宽度。</p><p><code>moveTo(x, y)</code></p><p>把路径移动到画布中的指定点</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">x</td><td align="center">Number</td><td align="center">位置的x坐标</td></tr><tr><td align="center">y</td><td align="center">Number</td><td align="center">位置的y坐标</td></tr></tbody></table><p><code>lineTo(x, y)</code></p><p>增加一个新点，然后创建一条从上次指定点到目标点的线</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">x</td><td align="center">Number</td><td align="center">位置的x坐标</td></tr><tr><td align="center">y</td><td align="center">Number</td><td align="center">位置的y坐标</td></tr></tbody></table><p><code>stroke()</code></p><p>画出当前路径的线条</p><p><code>stroke()</code> 描绘的的路径是从 <code>beginPath()</code> 开始计算，将<code>moveTo(x, y)</code>，<code>lineTo(x, y)</code>等相关路径描绘画出来。</p><p><code>draw(reserve, callback)</code></p><p>将绘图上下文中的描述（路径、变形、样式）画到<code> &lt;canvas /&gt;</code>中。</p><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">reserve</td><td align="center">Boolean</td><td align="center">本次绘制是否接着上一次绘制默认 false</td></tr><tr><td align="center">callback</td><td align="center">Function</td><td align="center">绘制完成后回调</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React 报错Super expression must either be null or a function, not undefined</title>
    <link href="/2021/09/16/React%20%E6%8A%A5%E9%94%99Super%20expression%20must%20either%20be%20null%20or%20a%20function,%20not%20undefined/"/>
    <url>/2021/09/16/React%20%E6%8A%A5%E9%94%99Super%20expression%20must%20either%20be%20null%20or%20a%20function,%20not%20undefined/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在定义class组件的时候出现：<font color="#dd514c">Super expression must either be null or a function, not undefined</font>报错！<br><img src="https://img-blog.csdnimg.cn/fa24a6dbae9543208c98edc00f3d9f4f.png#pic_center" alt="报错信息"></p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>原来是<code>React.component</code>中的<code>component</code>首字母没有大写！！！</p><p>将<code>React.component</code>改写成<code>React.Component</code> 问题解决。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Message</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">React.Component</span> &#123;<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">props</span>) &#123;<br>    <span class="hljs-variable language_">super</span>(props);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span> = &#123; <span class="hljs-attr">messageList</span>: props.<span class="hljs-property">messageList</span> &#125;;<br>  &#125;<br>  <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        &#123;this.state.messageList.length &gt; 0 ? (</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>You have &#123;this.state.messageList.length&#125; messages<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">        ) : (</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>nothing<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">        )&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&quot;sd&quot;</span>, <span class="hljs-string">&quot;sd&quot;</span>, <span class="hljs-string">&quot;ds&quot;</span>, <span class="hljs-string">&quot;ws&quot;</span>, <span class="hljs-string">&quot;sw&quot;</span>];<br><span class="hljs-title class_">ReactDOM</span>.<span class="hljs-title function_">render</span>(<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Message</span> <span class="hljs-attr">messageList</span>=<span class="hljs-string">&#123;arr&#125;</span> /&gt;</span></span>, <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>));<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 阿里云oss图片上传封装多平台适用</title>
    <link href="/2021/09/10/uniapp%20%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%B0%81%E8%A3%85%E5%A4%9A%E5%B9%B3%E5%8F%B0%E9%80%82%E7%94%A8/"/>
    <url>/2021/09/10/uniapp%20%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%B0%81%E8%A3%85%E5%A4%9A%E5%B9%B3%E5%8F%B0%E9%80%82%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="第一步：辅助函数；"><a href="#第一步：辅助函数；" class="headerlink" title="第一步：辅助函数；"></a>第一步：辅助函数；</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 添加文件名后缀方法，例如 .png</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSuffix</span>(<span class="hljs-params">filename</span>) &#123;<br><span class="hljs-keyword">let</span> pos = filename.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">let</span> suffix = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">if</span> (pos != -<span class="hljs-number">1</span>) &#123;<br>suffix = filename.<span class="hljs-title function_">substring</span>(pos);<br>&#125;<br><span class="hljs-keyword">return</span> suffix;<br>&#125;<br><span class="hljs-comment">// 自定义文件夹（file）</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getFileName</span>(<span class="hljs-params">file, filename</span>) &#123;<br><span class="hljs-keyword">return</span> (<br>file + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()<br>.<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>)<br>.<span class="hljs-title function_">substring</span>(<span class="hljs-number">3</span>, <span class="hljs-number">20</span>) + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() +<br><span class="hljs-title function_">getSuffix</span>(filename)<br>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第二步：暴露出的图片上传函数；"><a href="#第二步：暴露出的图片上传函数；" class="headerlink" title="第二步：暴露出的图片上传函数；"></a>第二步：暴露出的图片上传函数；</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 选择上传图片</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadImg</span>(<span class="hljs-params">file</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">chooseImage</span>(&#123;<br><span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//默认9</span><br><span class="hljs-attr">sizeType</span>: [<span class="hljs-string">&#x27;original&#x27;</span>, <span class="hljs-string">&#x27;compressed&#x27;</span>], <span class="hljs-comment">//可以指定是原图还是压缩图，默认二者都有</span><br><span class="hljs-attr">sourceType</span>: [<span class="hljs-string">&#x27;album&#x27;</span>, <span class="hljs-string">&#x27;camera&#x27;</span>], <span class="hljs-comment">//从相册选择</span><br><span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Imgsrc</span> = res.<span class="hljs-property">tempFilePaths</span>[<span class="hljs-number">0</span>];<span class="hljs-comment">// 第一张图片</span><br><span class="hljs-keyword">let</span> fileName = <span class="hljs-title function_">getFileName</span>(file, <span class="hljs-title class_">Imgsrc</span>); <span class="hljs-comment">// 自定义上传后的文件名称</span><br><span class="hljs-title function_">fileUpload</span>(<span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-title class_">Imgsrc</span>, fileName).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123; <span class="hljs-comment">// 核心函数 请往下看</span><br><span class="hljs-title function_">resolve</span>(res)<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>&#125;);<br>&#125;<br>&#125;)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第三步：文件上传核心函数；"><a href="#第三步：文件上传核心函数；" class="headerlink" title="第三步：文件上传核心函数；"></a>第三步：文件上传核心函数；</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 文件上传</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">fileUpload</span>(<span class="hljs-params">type, path, stroeAs</span>) &#123;<br>uni.<span class="hljs-title function_">showLoading</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;文件上传中&#x27;</span><br>&#125;);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">request</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;xxxxxxxxxxxxxxxxxxxxx&#x27;</span>, <span class="hljs-comment">//向后端发送请求，获取签名地址以及相关信息。</span><br><span class="hljs-attr">complete</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">var</span> data = res.<span class="hljs-property">data</span>;<br>uni.<span class="hljs-title function_">uploadFile</span>(&#123;<br><span class="hljs-attr">url</span>: data.<span class="hljs-property">host</span>, <span class="hljs-comment">//后台返回的阿里云存储的上传地址</span><br><span class="hljs-attr">filePath</span>: path,<br><span class="hljs-attr">fileType</span>: type,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;file&#x27;</span>,<br><span class="hljs-attr">formData</span>: &#123;<br><span class="hljs-attr">key</span>: stroeAs, <span class="hljs-comment">//文件名</span><br><span class="hljs-attr">policy</span>: data.<span class="hljs-property">policy</span>, <span class="hljs-comment">//后台获取超时时间</span><br><span class="hljs-title class_">OSSAccessKeyId</span>: data.<span class="hljs-property">accessid</span>, <span class="hljs-comment">//后台获取临时ID</span><br><span class="hljs-attr">success_action_status</span>: <span class="hljs-string">&#x27;200&#x27;</span>, <span class="hljs-comment">//让服务端返回200,不然，默认会返回204</span><br><span class="hljs-attr">signature</span>: data.<span class="hljs-property">signature</span> <span class="hljs-comment">//后台获取签名</span><br>&#125;,<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;上传成功&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>&#125;);<br><span class="hljs-title function_">resolve</span>(data.<span class="hljs-property">host</span> + stroeAs) <span class="hljs-comment">// 返回保存在阿里oss上的地址</span><br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showModal</span>(&#123;<br><span class="hljs-attr">content</span>: err.<span class="hljs-property">errMsg</span>,<br><span class="hljs-attr">showCancel</span>: <span class="hljs-literal">false</span><br>&#125;);<br>&#125;<br>&#125;);<br>&#125;<br>&#125;)<br>&#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="第四步：暴露出的视频上传函数；"><a href="#第四步：暴露出的视频上传函数；" class="headerlink" title="第四步：暴露出的视频上传函数；"></a>第四步：暴露出的视频上传函数；</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadVid</span>(<span class="hljs-params">file</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">chooseVideo</span>(&#123;<br><span class="hljs-attr">count</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">sourceType</span>: [<span class="hljs-string">&#x27;camera&#x27;</span>, <span class="hljs-string">&#x27;album&#x27;</span>],<br><span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) &#123;<br><span class="hljs-keyword">let</span> videoSrc = res.<span class="hljs-property">tempFilePath</span>;<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">size</span> &gt; <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">15</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;文件大小超过系统上传限制：15M&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span><br>&#125;);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">let</span> fileName = <span class="hljs-title function_">getFileName</span>(<span class="hljs-string">&quot;video&quot;</span>, file, videoSrc);<br><span class="hljs-title function_">fileUpload</span>(<span class="hljs-string">&quot;video&quot;</span>,<span class="hljs-title class_">Imgsrc</span>, fileName).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-title function_">resolve</span>(res)<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>&#125;);<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;取消选择视频&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>&#125;);<br>&#125;<br>&#125;)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>文件下载地址：<a href="https://download.csdn.net/download/weixin_49175501/19824126">CSDN0积分下载</a>  或者 <a href="https://ext.dcloud.net.cn/plugin?id=5454">uniapp插件市场下载</a></p><h3 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h3><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">file</td><td align="center">String</td><td align="center">要存放的文件夹名；例如 …&#x2F;imageList&#x2F;</td></tr><tr><td align="center">filename</td><td align="center">Blob</td><td align="center">被选中的图片或者视频文件名</td></tr><tr><td align="center">type</td><td align="center">String</td><td align="center">image 或者 video</td></tr><tr><td align="center">path</td><td align="center">Blob</td><td align="center">同filename被选中的本地图片或视频文件</td></tr><tr><td align="center">stroeAs</td><td align="center">String</td><td align="center">自定义文件名；例如 …&#x2F;imageList&#x2F;xxxx.png</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS 常用字符串方法、数值方法、数组方法总汇</title>
    <link href="/2021/08/05/JS%20%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E3%80%81%E6%95%B0%E5%80%BC%E6%96%B9%E6%B3%95%E3%80%81%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E6%80%BB%E6%B1%87/"/>
    <url>/2021/08/05/JS%20%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95%E3%80%81%E6%95%B0%E5%80%BC%E6%96%B9%E6%B3%95%E3%80%81%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E6%80%BB%E6%B1%87/</url>
    
    <content type="html"><![CDATA[<h3 id="JavaScript-字符串方法"><a href="#JavaScript-字符串方法" class="headerlink" title="JavaScript  字符串方法"></a>JavaScript  字符串方法</h3><h4 id="length-属性"><a href="#length-属性" class="headerlink" title="length 属性"></a>length 属性</h4><p>返回字符串的长度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-property">length</span>) <span class="hljs-comment">// 6</span><br></code></pre></td></tr></table></figure><h4 id="split-方法"><a href="#split-方法" class="headerlink" title="split() 方法"></a>split() 方法</h4><p>将字符串转换为数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;ao&#x27;</span>)) <span class="hljs-comment">// [&quot;sh&quot;, &quot;in&quot;]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&#x27;</span>)) <span class="hljs-comment">// [&quot;s&quot;, &quot;h&quot;, &quot;a&quot;, &quot;o&quot;, &quot;i&quot;, &quot;n&quot;]</span><br></code></pre></td></tr></table></figure><h4 id="search-方法"><a href="#search-方法" class="headerlink" title="search() 方法"></a>search() 方法</h4><p>该方法设置一个参数：需要搜索的字符串。</p><p>搜索特定的字符串，并返回位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">search</span>(<span class="hljs-string">&#x27;ao&#x27;</span>)) <span class="hljs-comment">// 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">search</span>(<span class="hljs-string">&#x27;bo&#x27;</span>)) <span class="hljs-comment">// -1</span><br></code></pre></td></tr></table></figure><h4 id="slice-方法"><a href="#slice-方法" class="headerlink" title="slice() 方法"></a>slice() 方法</h4><p>该方法设置两个参数：起始索引（开始位置），终止索引（结束位置）。[ 左闭右开 )</p><p>提取参数对应位置的字符，并返回新的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">slice</span>(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>)) <span class="hljs-comment">// &quot;oi&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>)) <span class="hljs-comment">// &quot;aoin&quot;</span><br></code></pre></td></tr></table></figure><h4 id="substr-方法"><a href="#substr-方法" class="headerlink" title="substr() 方法"></a>substr() 方法</h4><p>该方法设置两个参数：起始索引（开始位置），提取字符的长度。</p><p>提取参数对应位置及长度的字符，并返回新的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">substr</span>(<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)) <span class="hljs-comment">//  &quot;oi&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">substr</span>(<span class="hljs-number">2</span>)) <span class="hljs-comment">//  &quot;aoin&quot;</span><br></code></pre></td></tr></table></figure><h4 id="replace-方法"><a href="#replace-方法" class="headerlink" title="replace() 方法"></a>replace() 方法</h4><p>该方法设置两个参数：需要被替换的字符串，替换成新的字符串。</p><p>不改变原来的字符串，返回新的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;shaoin in&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;in&#x27;</span>,<span class="hljs-string">&#x27;oo&#x27;</span>)) <span class="hljs-comment">// &quot;shaooo in&quot; 注意：按顺序匹配首个遇到的字符</span><br></code></pre></td></tr></table></figure><p>可以通过正则表达式，扩展替换的功能。</p><h4 id="concat-方法"><a href="#concat-方法" class="headerlink" title="concat() 方法"></a>concat() 方法</h4><p>连接连个或者多个字符串；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">let</span> str1 = <span class="hljs-string">&quot;my &quot;</span>;<br><span class="hljs-keyword">let</span> str2 = <span class="hljs-string">&quot;name&#x27;s &quot;</span>;<br><span class="hljs-keyword">let</span> str3 = <span class="hljs-string">&quot;shaoin&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">concat</span>(str1,str2,str3)) <span class="hljs-comment">// &quot;my name&#x27;s shaoin&quot;</span><br></code></pre></td></tr></table></figure><h4 id="trim-方法"><a href="#trim-方法" class="headerlink" title="trim() 方法"></a>trim() 方法</h4><p>删除字符串两端的空白符。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot; shaoin &quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-title function_">trim</span>()); <span class="hljs-comment">// &#x27;shaoin&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="JavaScript-数值方法"><a href="#JavaScript-数值方法" class="headerlink" title="JavaScript 数值方法"></a>JavaScript 数值方法</h3><h4 id="toString-方法"><a href="#toString-方法" class="headerlink" title="toString() 方法"></a>toString() 方法</h4><p>将数字转换成字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> num = <span class="hljs-number">11</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-property">toString</span>) <span class="hljs-comment">// &quot;11&quot;</span><br></code></pre></td></tr></table></figure><h4 id="toFixed-方法"><a href="#toFixed-方法" class="headerlink" title="toFixed() 方法"></a>toFixed() 方法</h4><p>返回一个指定位数小数的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> num = <span class="hljs-number">11.1</span>;<br>num.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">0</span>)  <span class="hljs-comment">// &#x27;11&#x27;</span><br>num.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">1</span>)  <span class="hljs-comment">// &#x27;11.1&#x27;</span><br>num.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>)  <span class="hljs-comment">// &#x27;11.10&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Number-方法"><a href="#Number-方法" class="headerlink" title="Number() 方法"></a>Number() 方法</h4><p>将变量转换为数值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;11&#x27;</span>,bool = <span class="hljs-literal">true</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(str)) <span class="hljs-comment">// 11 </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(bool)) <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><h3 id="JavaScript-数组方法"><a href="#JavaScript-数组方法" class="headerlink" title="JavaScript 数组方法"></a>JavaScript 数组方法</h3><h4 id="join-方法"><a href="#join-方法" class="headerlink" title="join() 方法"></a>join() 方法</h4><p>该方法设置一个参数：数组中元素以什么方式连接。</p><p>将数组元素结合为一个字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>)) <span class="hljs-comment">// &quot;shaoin&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;*&#x27;</span>)) <span class="hljs-comment">// &quot;s*h*a*o*i*n&quot;</span><br></code></pre></td></tr></table></figure><h4 id="pop-方法"><a href="#pop-方法" class="headerlink" title="pop() 方法"></a>pop() 方法</h4><p>从原数组中删除最后一个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br>arr.<span class="hljs-title function_">pop</span>(); <span class="hljs-comment">// &quot;n&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr) <span class="hljs-comment">// [&quot;s&quot;, &quot;h&quot;, &quot;a&quot;, &quot;o&quot;, &quot;i&quot;]</span><br></code></pre></td></tr></table></figure><h4 id="push-方法"><a href="#push-方法" class="headerlink" title="push() 方法"></a>push() 方法</h4><p>在原数组结尾处添加一个新的元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br>arr.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-comment">// 7</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr) <span class="hljs-comment">// [&quot;s&quot;, &quot;h&quot;, &quot;a&quot;, &quot;o&quot;, &quot;i&quot;, &quot;n&quot;, &quot;a&quot;]</span><br></code></pre></td></tr></table></figure><h4 id="shift-方法"><a href="#shift-方法" class="headerlink" title="shift() 方法"></a>shift() 方法</h4><p>删除原数组的首个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br>arr.<span class="hljs-title function_">shift</span>() <span class="hljs-comment">// &quot;s&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr) <span class="hljs-comment">// [&quot;h&quot;, &quot;a&quot;, &quot;o&quot;, &quot;i&quot;, &quot;n&quot;]</span><br></code></pre></td></tr></table></figure><h4 id="unshift-方法"><a href="#unshift-方法" class="headerlink" title="unshift() 方法"></a>unshift() 方法</h4><p>在原数组首位添加一个新的元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br>arr.<span class="hljs-title function_">unshift</span>(<span class="hljs-string">&quot;a&quot;</span>) <span class="hljs-comment">// 7 </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr) <span class="hljs-comment">// [&quot;a&quot;, &quot;s&quot;, &quot;h&quot;, &quot;a&quot;, &quot;o&quot;, &quot;i&quot;, &quot;n&quot;];</span><br></code></pre></td></tr></table></figure><h4 id="splice-方法"><a href="#splice-方法" class="headerlink" title="splice() 方法"></a>splice() 方法</h4><p>该方法有多个参数：第一个参数定义添加新元素和删除旧元素的位置；第二个参数定义删除元素的位数；其余参数皆为要添加到数组中的元素。</p><p>返回一个包含一删除项的数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>];<br>arr.<span class="hljs-title function_">splice</span>(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;i&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>) <span class="hljs-comment">// [&quot;0&quot;]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr) <span class="hljs-comment">// [&quot;s&quot;, &quot;h&quot;, &quot;a&quot;, &quot;i&quot;, &quot;i&quot;, &quot;i&quot;, &quot;n&quot;]</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 解决switchTab跳转tab页面不能直接传参问题</title>
    <link href="/2021/07/31/uniapp%20%E8%A7%A3%E5%86%B3switchTab%E8%B7%B3%E8%BD%ACtab%E9%A1%B5%E9%9D%A2%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E4%BC%A0%E5%8F%82%E9%97%AE%E9%A2%98/"/>
    <url>/2021/07/31/uniapp%20%E8%A7%A3%E5%86%B3switchTab%E8%B7%B3%E8%BD%ACtab%E9%A1%B5%E9%9D%A2%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E4%BC%A0%E5%8F%82%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用<code>uniapp</code> 中<code>uni.switchTab</code>跳转到相应的 <code>tabbar</code> 页面后，无法读取到需要传递过来的参数。目前没有很好的直接传递参数的方法（2021年8月）。</p><h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p><code>tabbar</code> 页面在加载完成后，不会在切换和跳转中被销毁。也就是意味着跳转到已经加载过了的<code>tabbar</code>页面后，<code>onLoad</code> 中的代码是不会去执行。好在<code>onShow</code>、<code>onHide</code> 中的代码在切换、展现、隐藏执行。</p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><ol><li>利用<code>uni.reLaunch()</code>关闭所有页面，打开到应用内的某个页面。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 跳转页面</span><br>uni.<span class="hljs-title function_">reLaunch</span>(&#123;<br>  <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;pages/home/index?id=123&amp;val=reLaunch&#x27;</span><br>&#125;);<br><br><span class="hljs-comment">// tabbar 页面</span><br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params">option</span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option); <span class="hljs-comment">// &#123;id: 123, val: reLaunch&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>利用<code>uni.setStorageSync</code>本地缓存需要传递的参数，在跳转到<code>tabbar </code>页面后用<code>onShow</code> 和 <code>uni.getStorageSync</code>拿到存储的参数。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 跳转页面</span><br><span class="hljs-title function_">toSomePage</span>(<span class="hljs-params"></span>)&#123;<br>  uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&#x27;option&#x27;</span>,&#123;<span class="hljs-attr">id</span>:<span class="hljs-number">123</span>, <span class="hljs-attr">val</span>:<span class="hljs-string">&#x27;switchTab&#x27;</span>&#125;)<br>  uni.<span class="hljs-title function_">switchTab</span>(&#123;<br>  <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;pages/home/index&#x27;</span><br>&#125;);<br>&#125;<br><br><span class="hljs-comment">// tabbar 页面</span><br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params">option</span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option); <span class="hljs-comment">// &#123;&#125;</span><br>&#125;,<br><span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">let</span> option = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&#x27;option&#x27;</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option); <span class="hljs-comment">// &#123;id: 123, val: reLaunch&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h4><ol><li><code>tabbar</code> 加载后不会因跳转被销毁；</li><li><code>uni.reLaunch()</code>可以关闭所有页面，打开某一页面；</li><li><code>onShow()</code> 中的代码在切换时执行。</li></ol><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp IOS数字键盘没有小数点</title>
    <link href="/2021/07/29/uniapp%20IOS%E6%95%B0%E5%AD%97%E9%94%AE%E7%9B%98%E6%B2%A1%E6%9C%89%E5%B0%8F%E6%95%B0%E7%82%B9/"/>
    <url>/2021/07/29/uniapp%20IOS%E6%95%B0%E5%AD%97%E9%94%AE%E7%9B%98%E6%B2%A1%E6%9C%89%E5%B0%8F%E6%95%B0%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>当<font color="#dd514c">IOS</font>手机用户在输入金额或其它数字，要用到小数点的时候，发现可操作的键盘只有数字，没有小数点等其它符号。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>根据描述，我们从<code>input</code> 标签的 <code>type</code> 属性入手。当<code>type</code>的属性值为<code>number</code>的时候。如：下左图显示；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;input type=<span class="hljs-string">&quot;number&quot;</span> placeholder=<span class="hljs-string">&quot;请输入&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><table>    <tr>        <td><center><img src="https://img-blog.csdnimg.cn/8925167877d3451ea95b4fda774d163f.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center"  >图1 无小数点</center></td>        <td ><center><img src="https://img-blog.csdnimg.cn/3f19b3c8ad9144999826778b80104610.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center"  >图2 有小数点</center> </td>    </tr></table><p>当<code>type</code>的属性值为<code>digit</code>的时候。如：上右图显示；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;input type=<span class="hljs-string">&quot;digit&quot;</span> placeholder=<span class="hljs-string">&quot;请输入&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><h4 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h4><p>根据 <code>uniapp</code> 官网提供<code>type</code>具体属性和功能如下：</p><table><thead><tr><th align="center">值</th><th align="center">说明</th><th align="center">平台差异说明</th></tr></thead><tbody><tr><td align="center">text</td><td align="center">文本输入键盘</td><td align="center"></td></tr><tr><td align="center">number</td><td align="center">数字输入键盘</td><td align="center">均支持，App平台、H5平台 3.1.22 以下版本 vue 页面在 iOS 平台显示的键盘包含负数和小数。</td></tr><tr><td align="center">idcard</td><td align="center">身份证输入键盘</td><td align="center">微信、支付宝、百度、QQ小程序</td></tr><tr><td align="center">digit</td><td align="center">带小数点的数字键盘</td><td align="center">均支持，App平台、H5平台 vue 页面在 iOS 平台显示的键盘包含负数。</td></tr><tr><td align="center">tel</td><td align="center">电话输入键盘</td><td align="center">仅App的nvue页面支持</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>字符串倒序</title>
    <link href="/2021/06/30/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%80%92%E5%BA%8F/"/>
    <url>/2021/06/30/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%80%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h4 id="将字符串倒序"><a href="#将字符串倒序" class="headerlink" title="将字符串倒序"></a>将字符串倒序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;hello world&quot;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">reverse</span>(<span class="hljs-params">str</span>)&#123;<br>  <span class="hljs-keyword">let</span> arr = []; <span class="hljs-comment">//声明一个数组</span><br>  <span class="hljs-keyword">let</span> len = str.<span class="hljs-property">length</span>;<span class="hljs-comment">// 字符串的长度</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = len; i &gt;= <span class="hljs-number">0</span>; i-- )&#123;<br>    arr.<span class="hljs-title function_">push</span>(str[i]) <span class="hljs-comment">// 将字符从后向前放入数组找那个</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> arr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">// 将数组中的字符拼接成新的字符串</span><br>&#125;<br><span class="hljs-title function_">reverse</span>(str);<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;hello world&quot;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">reverse</span>(<span class="hljs-params">str</span>)&#123;<br>  <span class="hljs-keyword">return</span> str.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">reverse</span>().<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>);<span class="hljs-comment">// 分割字符串返回一个数组--&gt;数组翻转--&gt;再将数组拼接成字符串</span><br>&#125;<br><span class="hljs-title function_">reverse</span>(str);<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 中子组件向父组件传递数据</title>
    <link href="/2021/06/25/uniapp%20%E4%B8%AD%E5%AD%90%E7%BB%84%E4%BB%B6%E5%90%91%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/"/>
    <url>/2021/06/25/uniapp%20%E4%B8%AD%E5%AD%90%E7%BB%84%E4%BB%B6%E5%90%91%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>父组件注册了一个事件。如 <code>change</code> 事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>父组件+&#123;&#123;fatherVal&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">son</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;getSonVal&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/son.vue&#x27;</span></span><br><span class="language-javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">      son</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">     <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">       <span class="hljs-attr">fatherVal</span>:<span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">getSonVal</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e)</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">fatherVal</span> = e</span><br><span class="language-javascript">        ...</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>该事件函数 <code>getSonVal()</code> 执行是要等子组件调用 <code>this.$emit</code> 后执行；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;sonVal&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;valChange&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">sonVal</span>:<span class="hljs-string">&#x27;子组件数据&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">valChange</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;change&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">sonVal</span>)</span><br><span class="language-javascript">        ...</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>父组件的函数理解成一个回调函数；</p><p>子组件执行函数后将参数返回给父组件，父组件再执行函数。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp APP出现TypeError: Cannot read property ‘createElement‘ of undefined</title>
    <link href="/2021/06/25/uniapp%20APP%E5%87%BA%E7%8E%B0TypeError_%20Cannot%20read%20property%20%E2%80%98createElement%E2%80%98%20of%20undefined/"/>
    <url>/2021/06/25/uniapp%20APP%E5%87%BA%E7%8E%B0TypeError_%20Cannot%20read%20property%20%E2%80%98createElement%E2%80%98%20of%20undefined/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><font color="#8dc63f">uniapp </font>H5代码打包和运行都是没有问题的。打包成安卓app也是基本上没有问题的，当要用到第三方js时，会报一些<code>undefined</code>的相关错误</p><p>例如：我用<font color="#f37b1d" size="3"> npm </font>引入阿里对象存储的 ali-oss插件会报 <code>TypeError: Cannot read property &#39;createElement&#39; of undefined</code></p><p><img src="https://img-blog.csdnimg.cn/20210625143849155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><font color="#6739b6" size="3">原因是：uniapp打包APP时没有DOM概念的，ali-oss使用到了DOM，所以会报错。</font></p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>查阅文档与资料，自己封装了一个单图片上传与视频上传并返回存储地址的js文件。</p><p>第一步：辅助函数；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 添加文件名后缀方法，例如 .png</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSuffix</span>(<span class="hljs-params">filename</span>) &#123;<br><span class="hljs-keyword">let</span> pos = filename.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">let</span> suffix = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">if</span> (pos != -<span class="hljs-number">1</span>) &#123;<br>suffix = filename.<span class="hljs-title function_">substring</span>(pos);<br>&#125;<br><span class="hljs-keyword">return</span> suffix;<br>&#125;<br><span class="hljs-comment">// 自定义文件夹（file）</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getFileName</span>(<span class="hljs-params">file, filename</span>) &#123;<br><span class="hljs-keyword">return</span> (<br>file + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()<br>.<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>)<br>.<span class="hljs-title function_">substring</span>(<span class="hljs-number">3</span>, <span class="hljs-number">20</span>) + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() +<br><span class="hljs-title function_">getSuffix</span>(filename)<br>);<br>&#125;<br></code></pre></td></tr></table></figure><p>第二步：暴露出的图片上传函数；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 选择上传图片</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadImg</span>(<span class="hljs-params">file</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">chooseImage</span>(&#123;<br><span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//默认9</span><br><span class="hljs-attr">sizeType</span>: [<span class="hljs-string">&#x27;original&#x27;</span>, <span class="hljs-string">&#x27;compressed&#x27;</span>], <span class="hljs-comment">//可以指定是原图还是压缩图，默认二者都有</span><br><span class="hljs-attr">sourceType</span>: [<span class="hljs-string">&#x27;album&#x27;</span>, <span class="hljs-string">&#x27;camera&#x27;</span>], <span class="hljs-comment">//从相册选择</span><br><span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Imgsrc</span> = res.<span class="hljs-property">tempFilePaths</span>[<span class="hljs-number">0</span>];<span class="hljs-comment">// 第一张图片</span><br><span class="hljs-keyword">let</span> fileName = <span class="hljs-title function_">getFileName</span>(file, <span class="hljs-title class_">Imgsrc</span>); <span class="hljs-comment">// 自定义上传后的文件名称</span><br><span class="hljs-title function_">fileUpload</span>(<span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-title class_">Imgsrc</span>, fileName).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123; <span class="hljs-comment">// 核心函数 请往下看</span><br><span class="hljs-title function_">resolve</span>(res)<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>&#125;);<br>&#125;<br>&#125;)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>第三步：文件上传核心函数；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 文件上传</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">fileUpload</span>(<span class="hljs-params">type, path, stroeAs</span>) &#123;<br>uni.<span class="hljs-title function_">showLoading</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;文件上传中&#x27;</span><br>&#125;);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">request</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;xxxxxxxxxxxxxxxxxxxxx&#x27;</span>, <span class="hljs-comment">//向后端发送请求，获取签名地址以及相关信息。</span><br><span class="hljs-attr">complete</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">var</span> data = res.<span class="hljs-property">data</span>;<br>uni.<span class="hljs-title function_">uploadFile</span>(&#123;<br><span class="hljs-attr">url</span>: data.<span class="hljs-property">host</span>, <span class="hljs-comment">//后台返回的阿里云存储的上传地址</span><br><span class="hljs-attr">filePath</span>: path,<br><span class="hljs-attr">fileType</span>: type,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;file&#x27;</span>,<br><span class="hljs-attr">formData</span>: &#123;<br><span class="hljs-attr">key</span>: stroeAs, <span class="hljs-comment">//文件名</span><br><span class="hljs-attr">policy</span>: data.<span class="hljs-property">policy</span>, <span class="hljs-comment">//后台获取超时时间</span><br><span class="hljs-title class_">OSSAccessKeyId</span>: data.<span class="hljs-property">accessid</span>, <span class="hljs-comment">//后台获取临时ID</span><br><span class="hljs-attr">success_action_status</span>: <span class="hljs-string">&#x27;200&#x27;</span>, <span class="hljs-comment">//让服务端返回200,不然，默认会返回204</span><br><span class="hljs-attr">signature</span>: data.<span class="hljs-property">signature</span> <span class="hljs-comment">//后台获取签名</span><br>&#125;,<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;上传成功&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>&#125;);<br><span class="hljs-title function_">resolve</span>(data.<span class="hljs-property">host</span> + stroeAs) <span class="hljs-comment">// 返回保存在阿里oss上的地址</span><br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showModal</span>(&#123;<br><span class="hljs-attr">content</span>: err.<span class="hljs-property">errMsg</span>,<br><span class="hljs-attr">showCancel</span>: <span class="hljs-literal">false</span><br>&#125;);<br>&#125;<br>&#125;);<br>&#125;<br>&#125;)<br>&#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>第四步：暴露出的视频上传函数；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadVid</span>(<span class="hljs-params">file</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">chooseVideo</span>(&#123;<br><span class="hljs-attr">count</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">sourceType</span>: [<span class="hljs-string">&#x27;camera&#x27;</span>, <span class="hljs-string">&#x27;album&#x27;</span>],<br><span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) &#123;<br><span class="hljs-keyword">let</span> videoSrc = res.<span class="hljs-property">tempFilePath</span>;<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">size</span> &gt; <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">15</span>) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;文件大小超过系统上传限制：15M&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span><br>&#125;);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">let</span> fileName = <span class="hljs-title function_">getFileName</span>(<span class="hljs-string">&quot;video&quot;</span>, file, videoSrc);<br><span class="hljs-title function_">fileUpload</span>(<span class="hljs-string">&quot;video&quot;</span>,<span class="hljs-title class_">Imgsrc</span>, fileName).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-title function_">resolve</span>(res)<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>&#125;);<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;取消选择视频&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br><span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>&#125;);<br>&#125;<br>&#125;)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>文件下载地址：<a href="https://download.csdn.net/download/weixin_49175501/19824126">CSDN 0积分下载</a>  或者 <a href="https://ext.dcloud.net.cn/plugin?id=5454">uniapp插件市场下载</a></p><h3 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h3><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">file</td><td align="center">String</td><td align="center">要存放的文件夹名；例如 …&#x2F;imageList&#x2F;</td></tr><tr><td align="center">filename</td><td align="center">Blob</td><td align="center">被选中的图片或者视频文件名</td></tr><tr><td align="center">type</td><td align="center">String</td><td align="center">image 或者 video</td></tr><tr><td align="center">path</td><td align="center">Blob</td><td align="center">同filename被选中的本地图片或视频文件</td></tr><tr><td align="center">stroeAs</td><td align="center">String</td><td align="center">自定义文件名；例如 …&#x2F;imageList&#x2F;xxxx.png</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 中出现 Undefined variable $u-type-primary-light 问题</title>
    <link href="/2021/06/23/uniapp%20%E4%B8%AD%E5%87%BA%E7%8E%B0%20Undefined%20variable%20$u-type-primary-light%20%E9%97%AE%E9%A2%98/"/>
    <url>/2021/06/23/uniapp%20%E4%B8%AD%E5%87%BA%E7%8E%B0%20Undefined%20variable%20$u-type-primary-light%20%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><font color="#8dc63f">uniapp </font>引入<font color="#0081ff"> uview-ui </font>后 一顿操作，出现 <code>Undefined variable: &quot;$u-type-primary-light&quot;</code> 错误。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>第一步：确保 <code>HBuilder X</code> 是安装了 <code>scss/sass</code> 编译插件</p><p><img src="https://img-blog.csdnimg.cn/20210623170236313.png#pic_center" alt="在这里插入图片描述"></p><p>第二步：确保在根目录下 <code>uni.scss</code> 文件中引入 <code>theme.scss</code>，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;uview-ui/theme.scss&quot;</span>; // 放在代码首行<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210623170254736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>第三步：确保在根目录下 <code>App.vue</code> 文件中添加 <code>lang=&quot;scss&quot;</code> 和 <code>index.scss </code> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;uview-ui/index.scss&quot;</span>;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021062317031926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>问题得以解决。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 兼容IOS长按保存图片功能</title>
    <link href="/2021/06/18/uniapp%20%E5%85%BC%E5%AE%B9IOS%E9%95%BF%E6%8C%89%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/06/18/uniapp%20%E5%85%BC%E5%AE%B9IOS%E9%95%BF%E6%8C%89%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><font color="#8dc63f"> uniapp </font> H5项目开发中遇到长按图片保存的兼容性问题；在Android浏览器中长按保存没得问题，但是在IOS浏览器中会出现长按没有反应的现象。</p><h3 id="处理问题"><a href="#处理问题" class="headerlink" title="处理问题"></a>处理问题</h3><p>此类问题在vue项目中也有出现过，解决的核心是给<code>img</code>标签添加 <code>-webkit-touch-callout: default</code> 的 <code>style</code> 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">img</span>&gt;</span><br></code></pre></td></tr></table></figure><p>于是尝试</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><br></code></pre></td></tr></table></figure><p>但结果并没有解决问题，难道是 <code>image</code> 标签的问题？虽然<font color="#8dc63f"> uniapp </font>组件中并没有<code>img</code>标签但是并不影响<code>img</code> 标签在H5项目中正常的使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 将 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 替换成 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">img</span>&gt;</span><br></code></pre></td></tr></table></figure><p>问题得以解决。</p><p>在搜索解决方案的过程中看到一个类似如下的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%;height:100%;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br></code></pre></td></tr></table></figure><p>IOS兼容问题也是可以得到解决，查看了一圈文档没找为什么 <code>img</code> 标签外面要添加一个 <code>canvas</code> 标签的具体作用是什么。。。</p><p>自己也就封装了一下兼容IOS、Android长按保存图片小组件（用上了不明觉厉的canvas标签）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%;height:100%;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;showImageUrl&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;-webkit-touch-callout: default;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript"> * w-image 图片；</span></span><br><span class="hljs-comment"><span class="language-javascript"> * <span class="hljs-doctag">@description</span> 展示图片，兼容IOS、Android长按保存图片组件；</span></span><br><span class="hljs-comment"><span class="language-javascript"> * <span class="hljs-doctag">@property</span> &#123;<span class="hljs-type">String</span>&#125; showImageUrl ；</span></span><br><span class="hljs-comment"><span class="language-javascript"> */</span></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;w-image&#x27;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">props</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-attr">showImageUrl</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,</span><br><span class="language-javascript"><span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Navicat设计字css3 text-shadow 浮雕、镂空、荧光效果段总结</title>
    <link href="/2021/06/18/css3%20text-shadow%20%E6%B5%AE%E9%9B%95%E3%80%81%E9%95%82%E7%A9%BA%E3%80%81%E8%8D%A7%E5%85%89%E6%95%88%E6%9E%9C/"/>
    <url>/2021/06/18/css3%20text-shadow%20%E6%B5%AE%E9%9B%95%E3%80%81%E9%95%82%E7%A9%BA%E3%80%81%E8%8D%A7%E5%85%89%E6%95%88%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="text-shadow-简单介绍"><a href="#text-shadow-简单介绍" class="headerlink" title="text-shadow 简单介绍"></a>text-shadow 简单介绍</h3><p><code>text-shadow</code> 属性应用于文本阴影。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">text&#123;<br>  <span class="hljs-attribute">text-shadow</span>:h-shadow v-shadow blur color;<br>&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">h-shadow</td><td align="center">必需。水平X轴方向，阴影的位置。允许负值。</td></tr><tr><td align="center">v-shadow</td><td align="center">必需。垂直Y轴方向，阴影的位置。允许负值。</td></tr><tr><td align="center">blur</td><td align="center">可选。模糊的距离。</td></tr><tr><td align="center">color</td><td align="center">可选。阴影的颜色。（不选为透明）</td></tr></tbody></table><h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot; &quot;</span>&gt;</span><br>CSDN<br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.content</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css"><span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css"><span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="浮雕效果"><a href="#浮雕效果" class="headerlink" title="浮雕效果"></a>浮雕效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* 浮雕 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.embossment</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">100</span>rpx;</span><br><span class="language-css"><span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#DDDDDD</span>;</span><br><span class="language-css"><span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">2</span>rpx <span class="hljs-number">2</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),</span><br><span class="language-css">      -<span class="hljs-number">2</span>rpx -<span class="hljs-number">2</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1</span>);</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210618153603883.png#pic_center" alt="在这里插入图片描述"></p><h4 id="镂空效果"><a href="#镂空效果" class="headerlink" title="镂空效果"></a>镂空效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* 镂空 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.hollow-out</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">100</span>rpx;</span><br><span class="language-css"><span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#DDDDDD</span>;</span><br><span class="language-css"><span class="hljs-attribute">text-shadow</span>: -<span class="hljs-number">2</span>rpx -<span class="hljs-number">2</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),</span><br><span class="language-css">      <span class="hljs-number">2</span>rpx <span class="hljs-number">2</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1</span>);</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210618153723509.png#pic_center" alt="在这里插入图片描述"></p><h4 id="荧光效果"><a href="#荧光效果" class="headerlink" title="荧光效果"></a>荧光效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* 荧光 */</span></span><br><span class="language-css"><span class="hljs-selector-class">.fluorescent</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">100</span>rpx;</span><br><span class="language-css"><span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: <span class="hljs-number">#FFFFFF</span>;</span><br><span class="language-css"><span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-number">4</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1.0</span>),</span><br><span class="language-css"><span class="hljs-number">0</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-number">10</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1.0</span>),</span><br><span class="language-css"><span class="hljs-number">0</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-number">20</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1.0</span>),</span><br><span class="language-css"><span class="hljs-number">0</span>rpx <span class="hljs-number">0</span>rpx <span class="hljs-number">30</span>rpx <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">1.0</span>);</span><br><span class="language-css"><span class="hljs-comment">/* text-shadow: 0rpx 0rpx 4rpx rgba(255, 68, 0, 1.0),</span></span><br><span class="hljs-comment"><span class="language-css">0rpx 0rpx 10rpx rgba(255, 68, 0, 1.0),</span></span><br><span class="hljs-comment"><span class="language-css">0rpx 0rpx 20rpx rgba(255, 68, 0, 1.0),</span></span><br><span class="hljs-comment"><span class="language-css">0rpx 0rpx 30rpx rgba(255, 68, 0, 1.0); */</span></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img  src="https://img-blog.csdnimg.cn/20210618153753607.png"  width = "50%"><img  src="https://img-blog.csdnimg.cn/20210618153824770.png"  width = "50%" ></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 中 Cannot read property ‘length‘ of undefined 报错处理</title>
    <link href="/2021/06/16/uniapp%20%E4%B8%AD%20Cannot%20read%20property%20%E2%80%98length%E2%80%98%20of%20undefined%20%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86/"/>
    <url>/2021/06/16/uniapp%20%E4%B8%AD%20Cannot%20read%20property%20%E2%80%98length%E2%80%98%20of%20undefined%20%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>uniapp H5开发中在读取某个数组的长度时出现如下错误：<font color='#dd514c' size='3'>[system]  TypeError:  Cannot read property ‘length’ of undefined</font><br><img src="https://img-blog.csdnimg.cn/20210616163429965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这并不会影响到对移动端H5项目的开发。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>模拟出现错误的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">taskInfo</span>:<span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;goodsinfo.json&quot;</span>, data).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span> = res.<span class="hljs-property">data</span>;</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">getLength</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span>.<span class="hljs-property">goodslist</span>.<span class="hljs-property">length</span>); <span class="hljs-comment">// 触发事件后 控制台就会出现如上错误。</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>处理的方法：添加一个判断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">taskInfo</span>:<span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;goodsinfo.json&quot;</span>, data).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span> = res.<span class="hljs-property">data</span>;</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">getLength</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span>.<span class="hljs-property">goodslist</span> != <span class="hljs-literal">null</span>)&#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span>.<span class="hljs-property">goodslist</span>.<span class="hljs-property">length</span>); <span class="hljs-comment">// 触发事件后 控制台就不在出现错误提示。</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果这个数组本身就是自己声明的变量也不会出现类似的错误提示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">taskInfo</span>:<span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">list</span>:[]</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;goodsinfo.json&quot;</span>, data).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">taskInfo</span> = res.<span class="hljs-property">data</span>;</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">getLength</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> goodslist = []</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(goodslist.<span class="hljs-property">length</span>); <span class="hljs-comment">// 触发事件后 不在出现错误提示。</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list.<span class="hljs-property">length</span>); <span class="hljs-comment">// 也不会出现错误提示</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 手机模拟测试app白屏问题</title>
    <link href="/2021/06/15/uniapp%20%E6%89%8B%E6%9C%BA%E6%A8%A1%E6%8B%9F%E6%B5%8B%E8%AF%95app%E7%99%BD%E5%B1%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2021/06/15/uniapp%20%E6%89%8B%E6%9C%BA%E6%A8%A1%E6%8B%9F%E6%B5%8B%E8%AF%95app%E7%99%BD%E5%B1%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><font color=“”> 同样一套代码在运行到浏览器中没有问题，当运行到手机或模拟器中的时候出现了白屏的现象 控制台显示到 <font color="red"> 应用【xxx xxx】已启动 . . . </font> 就没了下文</font><br><img src="https://img-blog.csdnimg.cn/20210615170658724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210615170758860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>一开始以为是 adb.exe 路径设置的问题；</p><p>于是将设置<code>Settings.json</code>中的adb路径填写为HbuilderX中的 D:&#x2F;Webfront&#x2F;HBuilderX&#x2F;plugins&#x2F;launcher&#x2F;tools&#x2F;adbs&#x2F;adb.exe<br><img src="https://img-blog.csdnimg.cn/20210615171237881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>结果是没有上面提示的红色文字，但是模拟器依旧是白屏的状态且控制台还是停留在 <font color="red">  应用【xxx xxx】已启动 . . . </font><br><img src="https://img-blog.csdnimg.cn/20210615171306558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>我开始怀疑是不是启动页面的代码存在问题，于是打开控制台右侧的调试功能<br><img src="https://img-blog.csdnimg.cn/20210615171355837.png#pic_center" alt="在这里插入图片描述"></p><p>结果控制台显示的也没有报错，只有一些警告<br><img src="https://img-blog.csdnimg.cn/20210615171418258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>我开始没有头绪了，瞄了一眼警告：<code>service &quot;uni-app-config&quot; has been registered already</code> 为什么要告诉我uni-app-config的相关配置已经注册存在。难道和自己前些天为了搞定 <a href="https://blog.csdn.net/weixin_49175501/article/details/117694487">H5打包文件后缀添加版本号与时间戳</a> 而自定义的<code>vue.config.js</code> 文件有关？于是将该文件删除后发现</p><p><img src="https://img-blog.csdnimg.cn/20210615171448269.gif#pic_center" alt="在这里插入图片描述"></p><p>能够正常运行到模拟器了<br><img src="https://img-blog.csdnimg.cn/20210615171519869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>并且之前添加的 <code>console.log()</code> 在控制台或是调试器中也都能打印出来了。</p><p><img src="https://img-blog.csdnimg.cn/20210615171605188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210615171614445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>高兴还是挺高兴但是<code>service &quot;uni-app-config&quot; has been registered already</code>  这样的警告还是存在啊。</p><p>难道就是因为app项目打包中不能有自定义相关的文件…</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 文件名后面增加版本号与时间戳</title>
    <link href="/2021/06/08/uniapp%20%E6%96%87%E4%BB%B6%E5%90%8D%E5%90%8E%E9%9D%A2%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9C%AC%E5%8F%B7%E4%B8%8E%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    <url>/2021/06/08/uniapp%20%E6%96%87%E4%BB%B6%E5%90%8D%E5%90%8E%E9%9D%A2%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9C%AC%E5%8F%B7%E4%B8%8E%E6%97%B6%E9%97%B4%E6%88%B3/</url>
    
    <content type="html"><![CDATA[<h3 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h3><p><font color="#8dc63f" size="3">uniapp </font>打包<font color="#e03997" size="3"> H5 </font>生成的<code>js</code>文件，默认情况下是不包含版本号以及时间戳后缀。这样会导致H5新版打包上线后，用户依旧使用的是浏览器中缓存的老版js文件。文件更新滞后等现象。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><h4 id="一、vue-config-js"><a href="#一、vue-config-js" class="headerlink" title="一、vue.config.js"></a>一、vue.config.js</h4><p><code>vue.config.js</code> 是一个可选的配置文件，如果项目的根目录中存在这个文件，那么它会<font color="#0081ff" size="3">被自动加载</font>无需引入。这个配置文件中有一个属性 <code>configureWebpack</code> 可以有效的解决 <code>js</code> 文件缓存的问题。</p><h4 id="二、文件名重构"><a href="#二、文件名重构" class="headerlink" title="二、文件名重构"></a>二、文件名重构</h4><p>js文件直接下载：<a href="https://download.csdn.net/download/weixin_49175501/19478979">vue.config.js文件</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> filePath = <span class="hljs-string">&#x27;&#x27;</span>;   <span class="hljs-comment">// 默认文件路径</span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">TimeStamp</span> = <span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-comment">// 时间戳</span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Version</span> = <span class="hljs-string">&#x27;-V2.0.0-&#x27;</span>; <span class="hljs-comment">// 版本号</span><br><span class="hljs-comment">//编译环境判断，可以根据不同环境来做相应的配置</span><br><span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> === <span class="hljs-string">&#x27;h5&#x27;</span>) &#123;<br>  filePath = <span class="hljs-string">&#x27;static/js/&#x27;</span><br>  <span class="hljs-title class_">TimeStamp</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">configureWebpack</span>: &#123;<br>    <span class="hljs-attr">output</span>: &#123; <span class="hljs-comment">// filePath: 路径 name: 默认文件名 Version: 版本号 TimeStamp: 时间戳; 重构文件名</span><br>      <span class="hljs-attr">filename</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;filePath&#125;</span>[name]<span class="hljs-subst">$&#123;Version&#125;</span><span class="hljs-subst">$&#123;TimeStamp&#125;</span>.js`</span>, <span class="hljs-comment">// static/js/index-V2.0.0-1623123456789.js</span><br>      <span class="hljs-attr">chunkFilename</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;filePath&#125;</span>[name]<span class="hljs-subst">$&#123;Version&#125;</span><span class="hljs-subst">$&#123;TimeStamp&#125;</span>.js`</span> <span class="hljs-comment">// static/js/pages-home-index-V2.0.0-1623123456789.js</span><br>    &#125;,<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure><p>可以根据需求可控的添加时间和版本号，或者自定义相关后缀。如上就可以解决需求，完成<font color="#dd514c" size="3"> 重构文件名</font>。</p><p>更多 vue.config.js 相关配置属性 大家可以查看 <a href="https://cli.vuejs.org/zh/config/">vue.conf.js配置参考</a></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 项目结构目录快速认识</title>
    <link href="/2021/06/07/uniapp%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E7%9B%AE%E5%BD%95%E5%BF%AB%E9%80%9F%E8%AE%A4%E8%AF%86/"/>
    <url>/2021/06/07/uniapp%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E7%9B%AE%E5%BD%95%E5%BF%AB%E9%80%9F%E8%AE%A4%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h3 id="uniapp-初步认识。"><a href="#uniapp-初步认识。" class="headerlink" title="uniapp 初步认识。"></a>uniapp 初步认识。</h3><p><code>uni-app</code> 可以理解为<font color="#0081ff " size="3"> vue </font>和<font color="#e03997" size="3"> 小程序 </font>结合体：组件标签是<font color="#e03997" size="3"> 小程序 </font>小程序的标签；语法是<font color="#0081ff " size="3"> vue </font>的语法；应用和页面级生命周期类似<font color="#e03997" size="3"> 小程序 </font>的生命周期；组件级生命周期类似<font color="#0081ff " size="3"> vue </font>的生命周期。简而言之。学会 <code>uni-app</code> 相当于基本学会<font color="#0081ff " size="3"> vue </font>和<font color="#e03997" size="3"> 小程序 </font>两大前端技术。</p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><code>HuilderX</code> 生成的uniapp项目目录结构也就类似<font color="#0081ff" size="3"> vue </font>和<font color="#e03997" size="3"> 小程序 </font>的结合。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>┌─<span class="hljs-selector-class">.hbuilderx</span>            云空间目录<br>│─components            符合vue组件规范的uni-app组件目录<br>│  └─comp-<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.vue</span>         可复用的comp-a组件<br>├─node_modules          存放终端下载的插件（npm install / cnpm install 等）<br>├─pages                 业务页面文件存放的目录<br>│  ├─index<br>│  │  └─index<span class="hljs-selector-class">.vue</span>       index首页页面<br>│  └─list<br>│     └─list<span class="hljs-selector-class">.vue</span>        list列表页面<br>├─static                存放应用引用的本地静态资源（如图片、视频等）的目录<br>├─utils              自定义工具类文件存放目录<br>├─<span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.js</span>               Vue初始化入口文件<br>├─App<span class="hljs-selector-class">.vue</span>               应用配置，用来配置App全局样式以及监听 应用生命周期<br>├─manifest<span class="hljs-selector-class">.json</span>         配置应用名称、appid、logo、版本等打包信息<br>├─index<span class="hljs-selector-class">.html</span>            自定义HTML文件在H5中可以加入百度统计以及网址标题图标等<br>├─package-lock<span class="hljs-selector-class">.json</span>     记录npm安装的插件名、版本号、存放处等<br>├─pages<span class="hljs-selector-class">.json</span>            配置页面路由、导航条、选项卡等页面类信息<br>└─uni<span class="hljs-selector-class">.scss</span>HbuilderX sass插件安装生成的文件<br><br></code></pre></td></tr></table></figure><h3 id="补充提示"><a href="#补充提示" class="headerlink" title="补充提示"></a>补充提示</h3><ul><li>编译到任意平台时，<code>static</code> 目录下的文件均会被完整打包进去，且不会编译。非 <code>static</code> 目录下的文件（vue、js、css 等）只有被引用到才会被打包编译进去。</li><li><code>static</code> 目录下的 <code>js</code> 文件不会被编译，如果里面有 <code>es6</code> 的代码，不经过转换直接运行，在手机设备上会报错。</li><li><code>css</code>、<code>less/scss</code> 等资源不要放在 <code>static</code> 目录下，建议这些公用的资源放在自建的 <code>common</code> 目录下。</li></ul><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 用 vue-cli 脚手架搭建项目模板</title>
    <link href="/2021/06/05/uniapp%20%E7%94%A8%20vue-cli%20%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/"/>
    <url>/2021/06/05/uniapp%20%E7%94%A8%20vue-cli%20%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h4 id="第一步-安装环境"><a href="#第一步-安装环境" class="headerlink" title="第一步 安装环境"></a>第一步 安装环境</h4><p>全局安装</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g @vue/cli<br></code></pre></td></tr></table></figure><h4 id="第二步-创建一个文件夹"><a href="#第二步-创建一个文件夹" class="headerlink" title="第二步 创建一个文件夹"></a>第二步 创建一个文件夹</h4><p>创建个 testFile 文件夹  cmd打开小黑窗。输入如下指令（ my-project 是项目的名称 ）：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">vue create -p dcloudio/uni-preset-vue <span class="hljs-keyword">my</span>-project<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605175656364.gif#pic_center" alt="在这里插入图片描述"></p><h4 id="第三步-选择模板"><a href="#第三步-选择模板" class="headerlink" title="第三步 选择模板"></a>第三步 选择模板</h4><p>选择第一个默认模板 enter 等待文件生成；</p><p><img src="https://img-blog.csdnimg.cn/20210605175832686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>生成后将文件导入到HBuilderX中就可以看到模板的整体结构了。</p><p><img src="https://img-blog.csdnimg.cn/20210605175857163.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 中 #ifdef #ifndef #endif 条件编译</title>
    <link href="/2021/06/05/uniapp%20%E4%B8%AD%20#ifdef%20#ifndef%20#endif%20%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91/"/>
    <url>/2021/06/05/uniapp%20%E4%B8%AD%20#ifdef%20#ifndef%20#endif%20%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<h3 id="条件编译"><a href="#条件编译" class="headerlink" title="条件编译"></a>条件编译</h3><p>条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。</p><table><thead><tr><th align="center">写法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">#ifdef</td><td align="center">if defined 仅在某平台存在</td></tr><tr><td align="center">#ifndef</td><td align="center">if not defined 除了某平台均存在</td></tr><tr><td align="center">%PLATFORM%</td><td align="center">平台名称</td></tr><tr><td align="center">#ifend</td><td align="center">结尾，结束编译</td></tr></tbody></table><h4 id="ifdef-ifndef-使用"><a href="#ifdef-ifndef-使用" class="headerlink" title="#ifdef  #ifndef  使用"></a>#ifdef  #ifndef  使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--  #ifdef APP-PLUS --&gt;</span><br>在App平台下会编译的代码<br><span class="hljs-comment">&lt;!-- #endif --&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// #ifdef APP-PLUS</span></span><br><span class="language-javascript">在<span class="hljs-title class_">App</span>平台下会编译的代码</span><br><span class="language-javascript"><span class="hljs-comment">// #endif</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// #ifndef APP-PLUS</span></span><br><span class="language-javascript">除了在<span class="hljs-title class_">App</span>以外平台 都会编译的代码</span><br><span class="language-javascript"><span class="hljs-comment">// #endif</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// #ifdef APP-PLUS || HS</span></span><br><span class="language-javascript">在 <span class="hljs-title class_">App</span>平台 或 <span class="hljs-variable constant_">H5</span>平台 下会编译的代码</span><br><span class="language-javascript"><span class="hljs-comment">// #endif</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// #ifdef APP-PLUS &amp;&amp; HS</span></span><br><span class="language-javascript"><span class="hljs-title class_">App</span>平台 且 <span class="hljs-variable constant_">H5</span>平台 注意没有这种说法！！！</span><br><span class="language-javascript"><span class="hljs-comment">// #endif</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"> </span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/* #ifdef APP-PLUS */</span></span><br><span class="language-css">在App平台下会编译的代码</span><br><span class="language-css"><span class="hljs-comment">/* #endif */</span></span><br><span class="language-css"></span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="PLATFORM"><a href="#PLATFORM" class="headerlink" title="%PLATFORM%"></a>%PLATFORM%</h4><table><thead><tr><th align="center">值</th><th align="center">平台</th></tr></thead><tbody><tr><td align="center">APP-PLUS</td><td align="center">App</td></tr><tr><td align="center">H5</td><td align="center">H5</td></tr><tr><td align="center">MP-WEIXIN</td><td align="center">微信小程序</td></tr><tr><td align="center">MP-ALIPAY</td><td align="center">支付宝小程序</td></tr><tr><td align="center">MP-BAIDU</td><td align="center">百度小程序</td></tr><tr><td align="center">MP</td><td align="center">微信小程序&#x2F;支付宝小程序&#x2F;百度小程序&#x2F;字节跳动小程序&#x2F;QQ小程序&#x2F;360小程序</td></tr><tr><td align="center">QUICKAPP-WEBVIEW</td><td align="center">快应用通用(包含联盟、华为)</td></tr><tr><td align="center">QUICKAPP-WEBVIEW-UNION</td><td align="center">快应用联盟</td></tr><tr><td align="center">QUICKAPP-WEBVIEW-HUAWEI</td><td align="center">快应用华为</td></tr><tr><td align="center">APP-PLUS-NVUE或APP-NVUE</td><td align="center">App nvue</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 给H5网站添加图标favicon.icon</title>
    <link href="/2021/06/04/uniapp%20%E7%BB%99H5%E7%BD%91%E7%AB%99%E6%B7%BB%E5%8A%A0%E5%9B%BE%E6%A0%87favicon.icon/"/>
    <url>/2021/06/04/uniapp%20%E7%BB%99H5%E7%BD%91%E7%AB%99%E6%B7%BB%E5%8A%A0%E5%9B%BE%E6%A0%87favicon.icon/</url>
    
    <content type="html"><![CDATA[<h3 id="需求介绍"><a href="#需求介绍" class="headerlink" title="需求介绍"></a>需求介绍</h3><p>项目上线了，但是没有自己的个性图标怎么行，必须得咱H5导航栏整一个。</p><h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><ol><li><h4 id="新建一个HTML文件"><a href="#新建一个HTML文件" class="headerlink" title="新建一个HTML文件"></a>新建一个HTML文件</h4><p><font color="#8dc63f"> uniapp </font>H5项目生成时本身是没有 <code>index.html</code> 等相关HTML文件，而图标又是要在HTML文件中设置。</p><p>现在我们在根目录下创建一个 <code>count.html</code> 文件（文件名按个人喜好来，个人因为<a href="https://blog.csdn.net/weixin_49175501/article/details/117333181">关于百度统计方案</a>中创建过这个文件。）</p></li><li><h4 id="给-H5-设置配置"><a href="#给-H5-设置配置" class="headerlink" title="给 H5 设置配置"></a>给 H5 设置配置</h4><p>为了让 <code>count.html</code> 文件能够被编译，展示。我们可以这样做：</p></li></ol><p>  <img src="https://img-blog.csdnimg.cn/20210604173025666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>   当然也可以直接修改源码视图：</p><p><img src="https://img-blog.csdnimg.cn/20210604173043536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol start="3"><li><h4 id="编写-count-html-内容"><a href="#编写-count-html-内容" class="headerlink" title="编写 count.html 内容"></a>编写 count.html 内容</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>            &lt;%= htmlWebpackPlugin.options.title %&gt;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span> / <span class="hljs-number">20</span> + <span class="hljs-string">&#x27;px&#x27;</span></span><br><span class="language-javascript">            &#125;)</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= BASE_URL %&gt;static/index.css&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../static/images/favicon.png&quot;</span> /&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">noscript</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Please enable JavaScript to continue.<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">noscript</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><h4 id="添加-favicon-png-图片"><a href="#添加-favicon-png-图片" class="headerlink" title="添加 favicon.png 图片"></a>添加 favicon.png 图片</h4><p>   从第3步的代码中：</p></li></ol> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../static/images/favicon.png&quot;</span> /&gt;</span> <br></code></pre></td></tr></table></figure><p>   大家可以知道我将图片放在了根目录下的 <code>static/images/</code> 中</p><p>   项目重新编译就可以看到了：</p><p><img src="https://img-blog.csdnimg.cn/2021060417310434.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uni统计、uniapp统计简单实现教程</title>
    <link href="/2021/06/04/uni%E7%BB%9F%E8%AE%A1%E3%80%81uniapp%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%95%99%E7%A8%8B/"/>
    <url>/2021/06/04/uni%E7%BB%9F%E8%AE%A1%E3%80%81uniapp%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="uni-统计介绍"><a href="#uni-统计介绍" class="headerlink" title="uni 统计介绍"></a>uni 统计介绍</h3><p><font  size="3">uni-app 自 2.2.3版本开始新增 <code>uni 统计</code>，支持全平台业务统计，包括App、H5及各家小程序。<a href="https://uniapp.dcloud.net.cn/uni-stat">点击官方介绍</a> 好了介绍结束</font></p><h3 id="配置统计"><a href="#配置统计" class="headerlink" title="配置统计"></a>配置统计</h3><p>现在以H5为例；</p><h5 id="第一步、打开配置开关"><a href="#第一步、打开配置开关" class="headerlink" title="第一步、打开配置开关"></a>第一步、打开配置开关</h5><p>项目中打开 manifest.json &#x3D;&gt; uni统计配置 &#x3D;&gt;  启用H5平台</p><p>或者 打开  manifest.json &#x3D;&gt; 源码视图 &#x3D;&gt; “H5” 中设置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;uniStatistics&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;enable&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210604135050990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/2021060413513221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h5 id="第二步、创建DCloud-AppID"><a href="#第二步、创建DCloud-AppID" class="headerlink" title="第二步、创建DCloud AppID"></a>第二步、创建DCloud AppID</h5><ol><li>通过 HBuilderX 获取Appid。</li></ol><p><img src="https://img-blog.csdnimg.cn/20210604135225611.png#pic_center" alt="在这里插入图片描述"></p><ol start="2"><li><a href="https://dev.dcloud.net.cn/">DCloud开发者中心</a> 获取Appid。</li></ol><p><img src="https://img-blog.csdnimg.cn/20210604135304683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol start="3"><li>将获得的AppID 填写入基础配置中</li></ol><h5 id="第三步、打包提交新版本"><a href="#第三步、打包提交新版本" class="headerlink" title="第三步、打包提交新版本"></a>第三步、打包提交新版本</h5><p>登录 <a href="https://tongji.dcloud.net.cn/home">uni统计页面</a> 查看统计数据。</p><p><img src="https://img-blog.csdnimg.cn/20210604135322591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 本地缓存剩余时间</title>
    <link href="/2021/06/03/uniapp%20%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4/"/>
    <url>/2021/06/03/uniapp%20%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="封装代码"><a href="#封装代码" class="headerlink" title="封装代码"></a>封装代码</h3><p>在项目根目录项新建 <font color="#e03997"> utils </font> 文件夹；再新建一个<font color="#8dc63f"> idea.js </font> 文件；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store.js&quot;</span><br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-comment">// 计算剩余时间</span><br><span class="hljs-title function_">timeRemaining</span>(<span class="hljs-params">val,time</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">let</span> newTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br><span class="hljs-keyword">let</span> oldTime = store.<span class="hljs-title function_">getItem</span>(val);<br><span class="hljs-keyword">if</span> (oldTime) &#123;<br><span class="hljs-keyword">if</span> (newTime &gt; oldTime + time*<span class="hljs-number">1000</span>) &#123;<br><span class="hljs-title function_">resolve</span>(<span class="hljs-number">0</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">let</span> downtime = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(time + (oldTime - newTime) / <span class="hljs-number">1000</span>);<br><span class="hljs-title function_">resolve</span>(downtime);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>store.<span class="hljs-title function_">setItem</span>(val, newTime);<br><span class="hljs-title function_">resolve</span>(time)<br>&#125;<br>&#125;)<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="1-引入缓存"><a href="#1-引入缓存" class="headerlink" title="1. 引入缓存"></a>1. 引入缓存</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store.js&quot;</span><br></code></pre></td></tr></table></figure><p>如何封装本地缓存点击：<a href="https://blog.csdn.net/weixin_49175501/article/details/117526229">uniapp 封装store本地缓存</a>   或者引入项目已有的插件。</p><h4 id="2-变量认识"><a href="#2-变量认识" class="headerlink" title="2.  变量认识"></a>2.  变量认识</h4><table><thead><tr><th align="center">变量（参数）</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">val</td><td align="center">String</td><td align="center">将要被缓存的 键名</td></tr><tr><td align="center">time</td><td align="center">Number</td><td align="center">总倒计时长</td></tr><tr><td align="center">newTime</td><td align="center">Date()、Number</td><td align="center">当前时间戳</td></tr><tr><td align="center">oldTime</td><td align="center">Date()、Number</td><td align="center">缓存的时间戳</td></tr><tr><td align="center">downtime</td><td align="center">Number</td><td align="center">剩余倒计时长</td></tr></tbody></table><h4 id="3-调用函数"><a href="#3-调用函数" class="headerlink" title="3. 调用函数"></a>3. 调用函数</h4><p>第一次调用将会缓存时间戳，返回自己设定的倒计时；第二次调用将会获得设定倒计时的剩余时间。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> fn <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../utils/idea.js&quot;</span><br><br>fn.<span class="hljs-title function_">timeTemaining</span>(<span class="hljs-string">&quot;startTime&quot;</span>,<span class="hljs-number">180</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res); <span class="hljs-comment">// 剩余时间</span><br>&#125;)<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 封装store本地缓存</title>
    <link href="/2021/06/03/uniapp%20%E5%B0%81%E8%A3%85store%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/"/>
    <url>/2021/06/03/uniapp%20%E5%B0%81%E8%A3%85store%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<h3 id="本地缓存封装"><a href="#本地缓存封装" class="headerlink" title="本地缓存封装"></a>本地缓存封装</h3><p> <font color="#9c26b0"> uniapp </font> 项目中封装 <code>uni.setStorageSync()</code> 、 <code>uni.getStorageSync()</code> 、 <code>uni.removeStorageSync()</code> 、 <code> uni.clearStorageSync()</code> 方法。在项目根目录项新建 <font color="#9c26b0"> utils </font> 文件夹；再新建一个<font color="#9c26b0"> store.js </font> 文件；再编写如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-comment">// 设置值</span><br><span class="hljs-title function_">setItem</span>(<span class="hljs-params">key, value, module_name</span>) &#123;<br><span class="hljs-keyword">if</span> (module_name) &#123; <span class="hljs-comment">// 处理对象</span><br><span class="hljs-keyword">let</span> module_name_info = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getItem</span>(module_name);<br>module_name_info[key] = value;<br>uni.<span class="hljs-title function_">setStorageSync</span>(module_name,module_name_info)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>uni.<span class="hljs-title function_">setStorageSync</span>(key, value);<br>&#125;<br>&#125;,<br><span class="hljs-comment">// 获取值</span><br><span class="hljs-title function_">getItem</span>(<span class="hljs-params">key,module_name</span>)&#123;<br><span class="hljs-keyword">if</span>(module_name)&#123;<br><span class="hljs-keyword">let</span> val = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getItem</span>(module_name);<br><span class="hljs-keyword">if</span>(val) <span class="hljs-keyword">return</span> val[key];<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> uni.<span class="hljs-title function_">getStorageSync</span>(key);<br>&#125;<br>&#125;,<br><span class="hljs-comment">// 删除值</span><br><span class="hljs-title function_">clear</span>(<span class="hljs-params">key</span>)&#123;<br>        <span class="hljs-comment">// 三目运算；有key值时，删除storage中键名为key的缓存。没有key值时，删除storage中的所有值。</span><br>key?uni.<span class="hljs-title function_">removeStorageSync</span>(key):uni.<span class="hljs-title function_">clearStorageSync</span>();<br>&#125;,<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h4><table><thead><tr><th align="center">形参</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">key</td><td align="center">String</td><td align="center">存放在local Storage中的键</td></tr><tr><td align="center">value</td><td align="center">-</td><td align="center">存放在local Storage中的值</td></tr><tr><td align="center">module_name</td><td align="center">Object</td><td align="center">复杂多数据的对象</td></tr></tbody></table><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 手撕配置，拦截器。简易版</title>
    <link href="/2021/06/03/uniapp%20%E6%89%8B%E6%92%95%E9%85%8D%E7%BD%AE%EF%BC%8C%E6%8B%A6%E6%88%AA%E5%99%A8%E3%80%82%E7%AE%80%E6%98%93%E7%89%88/"/>
    <url>/2021/06/03/uniapp%20%E6%89%8B%E6%92%95%E9%85%8D%E7%BD%AE%EF%BC%8C%E6%8B%A6%E6%88%AA%E5%99%A8%E3%80%82%E7%AE%80%E6%98%93%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h3 id="1-配置URL地址文件"><a href="#1-配置URL地址文件" class="headerlink" title="1. 配置URL地址文件"></a>1. 配置URL地址文件</h3><p>项目根目录下生成一个文件夹 <code>config</code> ，文件夹中生成一个 <font color="#9c26b0" size="3">config.js</font> 文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>    <span class="hljs-attr">dev</span>:<span class="hljs-string">&quot;www.xxxxxx.xxx&quot;</span>,<br>    <span class="hljs-attr">test</span>:<span class="hljs-string">&quot;www.xxxxxx.xxx&quot;</span>,<br>    <span class="hljs-attr">pro</span>:<span class="hljs-string">&quot;www.xxxxxx.xxx&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-请求拦截、响应拦截"><a href="#2-请求拦截、响应拦截" class="headerlink" title="2. 请求拦截、响应拦截"></a>2. 请求拦截、响应拦截</h3><p>项目根目录下生成一个文件夹 <code>utils</code> ，文件夹中生成一个 <font color="#9c26b0" size="3">request.js </font>文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;/config/config.js&quot;</span>;<br><br><span class="hljs-keyword">let</span> baseUrl = config.<span class="hljs-property">test</span>;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br><span class="hljs-attr">fetch</span>: <span class="hljs-function">(<span class="hljs-params">url, data = &#123;&#125;, option = &#123;&#125;</span>) =&gt;</span> &#123;<br>        <br>        <span class="hljs-comment">// 请求前操作 -- 开始 --</span><br><span class="hljs-keyword">let</span> &#123;<br>loading = <span class="hljs-literal">true</span>, toast = <span class="hljs-literal">true</span>, method = <span class="hljs-string">&#x27;get&#x27;</span><br>&#125; = option;<br>        <span class="hljs-comment">// 将token存放在了globalData，通过getApp().globalData获取, 注意将获得登录后获得的token存在globalData中。</span><br>        <span class="hljs-keyword">let</span> header = &#123;<br>            <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>            <span class="hljs-string">&#x27;token&#x27;</span>:<span class="hljs-title function_">getApp</span>().<span class="hljs-property">globalData</span>.<span class="hljs-property">token</span><br>        &#125;;<br>        <span class="hljs-comment">// 请求前操作 -- 结束 --</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (loading) &#123;<br>uni.<span class="hljs-title function_">showLoading</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;加载中...&quot;</span>,<br><span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span><br>&#125;)<br>&#125;;<br>uni.<span class="hljs-title function_">request</span>(&#123;<br><span class="hljs-attr">url</span>: baseUrl + url,<br>data,<br>method,<br>header,<br>                <span class="hljs-comment">// 响应操作  -- 开始 --</span><br><span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">result</span>) &#123;<br><span class="hljs-keyword">let</span> res = result.<span class="hljs-property">data</span>;<br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">200</span>) &#123; <span class="hljs-comment">// 根据后端返回的code值，对不同的状态做相应的处理；</span><br><span class="hljs-keyword">if</span> (loading) &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>&#125;<br><span class="hljs-title function_">resolve</span>(res);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">203</span>) &#123;<br>uni.<span class="hljs-title function_">redirectTo</span>(&#123;<br><span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/login/login&#x27;</span><br>&#125;)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (toast) &#123;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">title</span>: res.<span class="hljs-property">msg</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span><br>&#125;)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>()<br>&#125;<br><span class="hljs-title function_">resolve</span>(res);<br>&#125;<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">e = &#123;</span><br><span class="hljs-params">code: -<span class="hljs-number">1</span>,</span><br><span class="hljs-params">msg: errMsg,</span><br><span class="hljs-params">errMsg</span><br><span class="hljs-params">&#125;</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e)<br><span class="hljs-keyword">let</span> msg = e.<span class="hljs-property">errMsg</span>;<br><span class="hljs-keyword">if</span> (msg == <span class="hljs-string">&quot;request:fail timeout&quot;</span>) &#123;<br>msg = <span class="hljs-string">&quot;请求超时，请稍后再试&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg == <span class="hljs-string">&quot;request:fail&quot;</span> || msg == <span class="hljs-string">&quot;&quot;</span>) &#123;<br>msg = <span class="hljs-string">&quot;请求失败，再试试&quot;</span><br>&#125;<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: msg,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;)<br><span class="hljs-title function_">reject</span>(e);<br>&#125;<br>                <span class="hljs-comment">// 响应操作  -- 结束 --</span><br>&#125;)<br>&#125;)<br>&#125;,<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="3-引入文件"><a href="#3-引入文件" class="headerlink" title="3. 引入文件"></a>3. 引入文件</h3><p>在 <code>main.js</code> 中引入写好的 <code>request.js</code> 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App&#x27;</span><br><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./utils/request.js&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">get</span> = request.<span class="hljs-property">fetch</span>;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">post</span> = <span class="hljs-function">(<span class="hljs-params">url, data</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">return</span> request.<span class="hljs-title function_">fetch</span>(url, data, &#123;<br><span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span><br>&#125;);<br>&#125;;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-title class_">App</span>.<span class="hljs-property">mpType</span> = <span class="hljs-string">&#x27;app&#x27;</span><br><br><span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    ...<span class="hljs-title class_">App</span><br>&#125;);<br><br>app.$mount()<br></code></pre></td></tr></table></figure><h3 id="4-请求的方法-get-、post"><a href="#4-请求的方法-get-、post" class="headerlink" title="4. 请求的方法 get 、post"></a>4. 请求的方法 get 、post</h3><p>直接调用 <code>this.get()</code> 或者直接调用 <code>this.post()</code> 就可以了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">login</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> data=&#123;...&#125;;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/api/login&quot;</span>,data).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>    &#125;)<br>    <span class="hljs-comment">// or</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/api/login&quot;</span>,data).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>目录快捷符号归纳</title>
    <link href="/2021/06/02/%E7%9B%AE%E5%BD%95%E5%BF%AB%E6%8D%B7%E7%AC%A6%E5%8F%B7%E5%BD%92%E7%BA%B3/"/>
    <url>/2021/06/02/%E7%9B%AE%E5%BD%95%E5%BF%AB%E6%8D%B7%E7%AC%A6%E5%8F%B7%E5%BD%92%E7%BA%B3/</url>
    
    <content type="html"><![CDATA[<h3 id="目录符号"><a href="#目录符号" class="headerlink" title="目录符号"></a>目录符号</h3><font color="">在文件中引入另外一个文件时，被引入的文件路径需要注意它的准确性。合理的使用目录符号可以快速有效的定位被引入的文件。接下来说说都有哪些符号：</font><ol><li><code>.</code>  表示当前目录；</li><li><code>..</code> 表示当前目录的上一级目录；</li><li><code>/</code> 表示根目录；</li><li><code>./</code> 表示当前目录下的某个文件或文件夹，视后面跟着的名字而定；</li><li><code>../</code> 表示当前目录上一级目录的文件或文件夹，视后面跟着的名字而定</li></ol><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 从当前网页跳转到外部网页</title>
    <link href="/2021/06/01/uniapp%20%E4%BB%8E%E5%BD%93%E5%89%8D%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E7%BD%91%E9%A1%B5/"/>
    <url>/2021/06/01/uniapp%20%E4%BB%8E%E5%BD%93%E5%89%8D%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E7%BD%91%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>H5页面中为了引导用户从老版的H5页面地址中进入新版的H5页面地址。当用户登录后直接跳转到新的地址。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>​1.当前页面打开新页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">self.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501&quot;</span> ；<br><br>location.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501&quot;</span> <br><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501l&quot;</span> <br></code></pre></td></tr></table></figure><p>​2.在父页面打开新页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">parent.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501&quot;</span> <br></code></pre></td></tr></table></figure><p>​3. 在顶层页面打开新页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">top.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501&quot;</span> <br></code></pre></td></tr></table></figure><p>​4. 跳转可以传递参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>=<span class="hljs-string">`https://blog.csdn.net/weixin_49175501?value=<span class="hljs-subst">$&#123;e&#125;</span>`</span> <br></code></pre></td></tr></table></figure><p>​5. 接收参数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">onload</span>(<span class="hljs-params">option</span>)&#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option.<span class="hljs-property">value</span>);</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 将 url 地址转化为二维码展示</title>
    <link href="/2021/06/01/uniapp%20%E5%B0%86%20url%20%E5%9C%B0%E5%9D%80%E8%BD%AC%E5%8C%96%E4%B8%BA%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%B1%95%E7%A4%BA/"/>
    <url>/2021/06/01/uniapp%20%E5%B0%86%20url%20%E5%9C%B0%E5%9D%80%E8%BD%AC%E5%8C%96%E4%B8%BA%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%B1%95%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<p>@[toc]</p><h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><p><font color="#8dc63f">uniapp </font>开发<font color="#0081ff"> H5 </font>过程中会有邀请、分享等相关的需求。邀请与分享的<font color="#dd514c"> url地址 </font>要以<font color="#dd514c"> 二维码 </font>的形式进行展示，并且 <font color="#dd514c">url地址</font> 是动态可变化。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><h4 id="1-qrious-js插件"><a href="#1-qrious-js插件" class="headerlink" title="1. qrious.js插件"></a>1. qrious.js插件</h4><p>在<font color="#e03991"> npm </font>中有一个叫 <font color="#f37b1d">Qrious</font> 二维码生成插件；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs npm">npm install qrious --save<br></code></pre></td></tr></table></figure><h4 id="2-简单认识-qrious-配置参数"><a href="#2-简单认识-qrious-配置参数" class="headerlink" title="2. 简单认识 qrious 配置参数"></a>2. 简单认识 qrious 配置参数</h4><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">String</td><td align="center">空</td><td align="center">需要编码为二维码的值、url字符</td></tr><tr><td align="center">size</td><td align="center">Number</td><td align="center">100</td><td align="center">二维码的尺寸，单位像素</td></tr><tr><td align="center">level</td><td align="center">String</td><td align="center">L</td><td align="center">二维码的误差校正级别(L, M, Q, H)</td></tr><tr><td align="center">mime</td><td align="center">String</td><td align="center">image&#x2F;png</td><td align="center">二维码输出为图片时的MIME类型</td></tr><tr><td align="center">foreground</td><td align="center">String</td><td align="center">black</td><td align="center">二维码的前景颜色</td></tr><tr><td align="center">background</td><td align="center">String</td><td align="center">white</td><td align="center">二维码的背景颜色</td></tr></tbody></table><h4 id="3-现实二维码生成"><a href="#3-现实二维码生成" class="headerlink" title="3.现实二维码生成"></a>3.现实二维码生成</h4><p>话不多说看代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popup&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span> @<span class="hljs-attr">tap</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;qrCodeImage&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-qrcode&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">tap</span>=<span class="hljs-string">&quot;getQriousCode&quot;</span> <span class="hljs-attr">v-else</span>&gt;</span>立即邀请<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Qrcode</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;qrious&#x27;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript"><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Hello&#x27;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript"><span class="hljs-attr">qrCodeImage</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">getQriousCode</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">show</span> = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> qr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Qrcode</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">value</span>: <span class="hljs-string">&quot;www.baidu.com&quot;</span></span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">qrCodeImage</span> = qr.<span class="hljs-title function_">toDataURL</span>();</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.content</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css"><span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css"><span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.popup</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css"><span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css"><span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">135</span>, <span class="hljs-number">135</span>, <span class="hljs-number">135</span>, <span class="hljs-number">0.6</span>);</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.custom-qrcode</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">300</span>rpx;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">300</span>rpx;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210601161008691.gif#pic_center" alt="在这里插入图片描述"></p><h4 id="4-核心代码"><a href="#4-核心代码" class="headerlink" title="4. 核心代码"></a>4. 核心代码</h4><p>根据需求改变相关参数，获得想要的结果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">getQriousCode</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">show</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> qr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Qrcode</span>(&#123;<br><span class="hljs-attr">value</span>: <span class="hljs-string">&quot;https://blog.csdn.net/weixin_49175501&quot;</span>, <span class="hljs-comment">// url地址</span><br><span class="hljs-attr">background</span>:<span class="hljs-string">&#x27;white&#x27;</span>, <span class="hljs-comment">// 背景色</span><br><span class="hljs-attr">foreground</span>:<span class="hljs-string">&#x27;#8dc63f&#x27;</span> ,<span class="hljs-comment">// 二维码颜色</span><br><span class="hljs-attr">level</span>:<span class="hljs-string">&#x27;L&#x27;</span>, <span class="hljs-comment">// 二维码复杂程度</span><br><span class="hljs-attr">size</span>:<span class="hljs-number">200</span> ,<span class="hljs-comment">// 尺寸大小</span><br><span class="hljs-attr">mime</span>:<span class="hljs-string">&#x27;image/png&#x27;</span> <span class="hljs-comment">// 图片类型</span><br>&#125;);<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">qrCodeImage</span> = qr.<span class="hljs-title function_">toDataURL</span>();<span class="hljs-comment">// 生成url图片</span><br>&#125;,<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210601161035645.png#pic_center" alt="在这里插入图片描述"></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp onHide如何获得option参数</title>
    <link href="/2021/05/28/uniapp%20onHide%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97option%E5%8F%82%E6%95%B0/"/>
    <url>/2021/05/28/uniapp%20onHide%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97option%E5%8F%82%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><hr> 当页面隐藏时，希望将上个页面（路由地址）传递来的参数是在 <font color="#dd514c"> onHide </font> 钩子函数中处理；<h3 id="onHide-获取页面传递参数的方法"><a href="#onHide-获取页面传递参数的方法" class="headerlink" title=" onHide  获取页面传递参数的方法"></a><font color="#dd514c"> onHide </font> 获取页面传递参数的方法</h3><p><font color="#0081ff"><code>getCurrentPages()</code></font> 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。而我们要的是倒数第二个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br>        <span class="hljs-title function_">onHide</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-keyword">let</span> allPages = <span class="hljs-title function_">getCurrentPages</span>(); <span class="hljs-comment">//获取当前页面栈的实例；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(allPages);<br>            <span class="hljs-keyword">let</span> lastPages = allPages.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; <span class="hljs-comment">// 获得倒数第二个元素的索引；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(lastPages);<br>            <span class="hljs-keyword">let</span> option = allPages[lastPages].<span class="hljs-property">options</span>; <span class="hljs-comment">// 获得上个页面传递的参数；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option);<br>        &#125;,<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>好的，拿到 <font color="#f37b1d"> option </font> 了，请开始你的表演！</p><p>同理 <font color="#dd514c"> onShow  </font> 钩子函数也是如此！</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp onshow如何获得option参数</title>
    <link href="/2021/05/28/uniapp%20onshow%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97option%E5%8F%82%E6%95%B0/"/>
    <url>/2021/05/28/uniapp%20onshow%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97option%E5%8F%82%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><hr>1. 页面初次渲染时，希望将上个页面（路由地址）传递来的参数是在 <font color="#dd514c">onShow</font> 钩子函数中处理；2. 页面隐藏再展示时能够调用上个页面（路由地址）传递的参数时；<h3 id="onShow-获取页面传递参数的方法"><a href="#onShow-获取页面传递参数的方法" class="headerlink" title="onShow   获取页面传递参数的方法"></a><font color="#dd514c">onShow</font>   获取页面传递参数的方法</h3><p>  <font color="#0081ff"><code>getCurrentPages()</code></font> 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。而我们要的是倒数第二个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br>        <span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-keyword">let</span> allPages = <span class="hljs-title function_">getCurrentPages</span>(); <span class="hljs-comment">//获取当前页面栈的实例；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(allPages);<br>            <span class="hljs-keyword">let</span> lastPages = allPages.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; <span class="hljs-comment">// 获得倒数第二个元素的索引；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(lastPages);<br>            <span class="hljs-keyword">let</span> option = allPages[lastPages].<span class="hljs-property">options</span>; <span class="hljs-comment">// 获得上个页面传递的参数；</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(option);<br>        &#125;,<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>好的，拿到  <font color="#f37b1d">option</font> 了，请开始你的表演！</p><p>同理 <font color="#dd514c">onHide  </font> 钩子函数也是如此！</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 中父组件调用子组件方法</title>
    <link href="/2021/05/27/uniapp%20%E4%B8%AD%E7%88%B6%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6%E6%96%B9%E6%B3%95/"/>
    <url>/2021/05/27/uniapp%20%E4%B8%AD%E7%88%B6%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>随着开发的深入和代码的维护，为了某些功能的实现可以说是又秃了几根；接下来就说一说，通过 ref 实现父组件调用子组件的方法等。</p><h3 id="1-父组件模板"><a href="#1-父组件模板" class="headerlink" title="1.父组件模板"></a>1.父组件模板</h3><p>​在父级模块的子组件上添加属性<font color="#dd514c"> ref </font>和 属性名 <font color="#8dc63f">mySon </font> (随意)，调用时使用 <font color="#dd514c"> this.</font>$ref.(属性名).(子组件方法)；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">son</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;mySon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;fatherClick&quot;</span>&gt;</span>父组件按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/son.vue&#x27;</span></span><br><span class="language-javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">      son</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">fatherClick</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">mySon</span>.<span class="hljs-title function_">sonClick</span>(<span class="hljs-string">&quot;father call son&quot;</span>);</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-子组件模板"><a href="#2-子组件模板" class="headerlink" title="2.子组件模板"></a>2.子组件模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">sonClick</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 项目中添加百度统计</title>
    <link href="/2021/05/27/uniapp%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1/"/>
    <url>/2021/05/27/uniapp%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>在uniapp开发的H5项目中，需要通过百度统计代码将用户的操作信息进行记录统计。</p><h3 id="1-新建-count-html-文件"><a href="#1-新建-count-html-文件" class="headerlink" title="1.新建 count.html 文件"></a>1.新建 count.html 文件</h3><p>​将文件放置在项目根目录下，文件名称自己随意。</p><p><img src="https://img-blog.csdnimg.cn/20210527171031735.png#pic_center" alt="在这里插入图片描述"></p><h3 id="2-百度统计代码"><a href="#2-百度统计代码" class="headerlink" title="2.百度统计代码"></a>2.百度统计代码</h3><p>​打开刚刚生成的<font color="#0081ff"> count.html </font>文件，将以下代码复制粘贴进出。注意填写自己获取的百度统计码。</p><p>​统计码如何获取？ 百度账号登录：<a href="https://tongji.baidu.com/sc-web">https://tongji.baidu.com/sc-web </a> 查看相关信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>            &lt;%= htmlWebpackPlugin.options.title %&gt;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span> / <span class="hljs-number">20</span> + <span class="hljs-string">&#x27;px&#x27;</span></span><br><span class="language-javascript">            &#125;)</span><br><span class="language-javascript">            <span class="hljs-comment">// 生产环境时运行此脚本</span></span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> _hmt = _hmt || [];</span><br><span class="language-javascript">            (<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-keyword">var</span> hm = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;script&quot;</span>);</span><br><span class="language-javascript">              hm.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://hm.baidu.com/hm.js?此处填写你获取的百度统计码&quot;</span>;</span><br><span class="language-javascript">              <span class="hljs-keyword">var</span> s = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;script&quot;</span>)[<span class="hljs-number">0</span>]; </span><br><span class="language-javascript">              s.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">insertBefore</span>(hm, s);</span><br><span class="language-javascript">            &#125;)();</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= BASE_URL %&gt;static/index.css&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">noscript</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Please enable JavaScript to continue.<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">noscript</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-设置项目配置"><a href="#3-设置项目配置" class="headerlink" title="3.设置项目配置"></a>3.设置项目配置</h3><p>​在根目录下找到<font color="#9c26b0"> manifest.json </font> → <font color="#8799a3">源码视图 </font> → <font color="#dd514c"> h5 </font> 配置项，添加属性<font color="#dd514c"> template </font> 。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;h5&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;publicPath&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;title&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxxx&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;template&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;count.html&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;devServer&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527171234934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>input 光标字体颜色、初始位置</title>
    <link href="/2021/05/25/input%20%E5%85%89%E6%A0%87%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E3%80%81%E5%88%9D%E5%A7%8B%E4%BD%8D%E7%BD%AE/"/>
    <url>/2021/05/25/input%20%E5%85%89%E6%A0%87%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E3%80%81%E5%88%9D%E5%A7%8B%E4%BD%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="一、input光标颜色"><a href="#一、input光标颜色" class="headerlink" title="一、input光标颜色"></a>一、input光标颜色</h2><p><font color="#8799a3"> 在不同的场景下我们可能对input光标的颜色需求不同，这个往往和背景颜色相关。那么这个用CSS怎么改变呢? </font> </p><h4 id="1-使用color继承来实现"><a href="#1-使用color继承来实现" class="headerlink" title="1.使用color继承来实现"></a>1.使用<font color="#f37b1d">color</font>继承来实现</h4><p>​整体发生改变，包括了即将输入的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210525160606949.gif#pic_center" alt="改变光标与文字颜色"></p><h4 id="2-使用caret-color来实现"><a href="#2-使用caret-color来实现" class="headerlink" title="2.使用caret- color来实现"></a>2.使用<font color="#f37b1d">caret- color</font>来实现</h4><p>​只改变光标的颜色，并不改变输入的内容的颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;caret-color:red;&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210525160628514.gif#pic_center" alt="单改光标颜色"></p><h2 id="二、input光标初始位置"><a href="#二、input光标初始位置" class="headerlink" title="二、input光标初始位置"></a>二、input光标初始位置</h2><h4 id="1-使用-text-align-控制光标位置"><a href="#1-使用-text-align-控制光标位置" class="headerlink" title="1.使用 text-align 控制光标位置"></a>1.使用 <font color="#f37b1d">text-align</font> 控制光标位置</h4><p>​有三个属性值： <font color="#8dc63f">left</font> ,  <font color="#8dc63f">center</font> ,  <font color="#8dc63f">right</font> 分别是左中右。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:left&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:right&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210525164501559.gif#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210525164521670.gif#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210525164541634.gif#pic_center" alt="在这里插入图片描述"></p><h4 id="2-使用-text-indent-自定义控制光标位置"><a href="#2-使用-text-indent-自定义控制光标位置" class="headerlink" title="2.使用 text-indent  自定义控制光标位置"></a>2.使用 <font color="#f37b1d">text-indent </font> 自定义控制光标位置</h4><p>​为文本块中首行文本进行缩进。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-indent:10px&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210525160726460.gif#pic_center" alt="光标缩进"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 兼容文字不被选中</title>
    <link href="/2021/05/21/uniapp%20%E5%85%BC%E5%AE%B9%E6%96%87%E5%AD%97%E4%B8%8D%E8%A2%AB%E9%80%89%E4%B8%AD/"/>
    <url>/2021/05/21/uniapp%20%E5%85%BC%E5%AE%B9%E6%96%87%E5%AD%97%E4%B8%8D%E8%A2%AB%E9%80%89%E4%B8%AD/</url>
    
    <content type="html"><![CDATA[<h3 id="1-text-标签-文字不被选中"><a href="#1-text-标签-文字不被选中" class="headerlink" title="1.  text   标签 文字不被选中"></a>1.  <font color="#f37b1d">text  </font> 标签 文字不被选中</h3><p>​<font size="2"> <font color="#9c26b0">selectable：</font>文本是否可选；默认值为true（可选中）<font color="#dd514c">兼容APP、H5</font></font> </p><p>​<font size="2"> <font color="#9c26b0">user-select：</font>文本是否可选；默认值为true（可选中）<font color="#dd514c">兼容微信小程</font></font></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- APP 、H5 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">selectable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>文字不被选中<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 微信小程序 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">user-select</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>文字不被选中<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-div-p-span-等标签-文字不被选中"><a href="#2-div-p-span-等标签-文字不被选中" class="headerlink" title="2.   div    p    span  等标签 文字不被选中"></a>2.   <font color="#f37b1d">div  </font> <font color="#f37b1d"> p </font>  <font color="#f37b1d"> span </font> 等标签 文字不被选中</h3><p>​<font size="2"> <font color="#9c26b0">user-select：</font><font color="#8dc63f ">none</font> 在css中设置如下属性即可；</font></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;notselected&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>文字不被选中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>文字不被选中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>文字不被选中<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.notselected</span>&#123;<br>    -webkit-user-select:none;<br>    -moz-user-select:none;<br>    -ms-user-select:none;<br>    user-select:none; <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS 各类验证（手机号验证、邮箱验证、身份证验证...）</title>
    <link href="/2021/05/20/JS%20%E5%90%84%E7%B1%BB%E9%AA%8C%E8%AF%81%EF%BC%88%E6%89%8B%E6%9C%BA%E5%8F%B7%E9%AA%8C%E8%AF%81%E3%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E3%80%81%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%AA%8C%E8%AF%81...%EF%BC%89/"/>
    <url>/2021/05/20/JS%20%E5%90%84%E7%B1%BB%E9%AA%8C%E8%AF%81%EF%BC%88%E6%89%8B%E6%9C%BA%E5%8F%B7%E9%AA%8C%E8%AF%81%E3%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E3%80%81%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%AA%8C%E8%AF%81...%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="1-验证手机号码格式"><a href="#1-验证手机号码格式" class="headerlink" title="1. 验证手机号码格式"></a>1. 验证手机号码格式</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>手机号码</font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">mobileReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^1[3-9]\d&#123;9&#125;$/</span>.<span class="hljs-title function_">test</span>(val)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-电子邮件格式验证"><a href="#2-电子邮件格式验证" class="headerlink" title="2. 电子邮件格式验证"></a>2. 电子邮件格式验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>邮件地址</font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">emailReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/</span>.<span class="hljs-title function_">test</span>(val);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-身份证件验证"><a href="#3-身份证件验证" class="headerlink" title="3. 身份证件验证"></a>3. 身份证件验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>身份证号码</font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">idReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;([0-9]|X)$/</span>.<span class="hljs-title function_">test</span>(val);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-车牌号码验证"><a href="#4-车牌号码验证" class="headerlink" title="4. 车牌号码验证"></a>4. 车牌号码验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>车牌号码</font> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">carReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-comment">// 新能源车牌</span><br>    <span class="hljs-keyword">const</span> greenReg = <span class="hljs-regexp">/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;(([0-9]&#123;5&#125;[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]&#123;4&#125;$))/</span>;<br>    <span class="hljs-comment">// 燃油车</span><br>    <span class="hljs-keyword">const</span> blueReg = <span class="hljs-regexp">/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;[A-HJ-NP-Z0-9]&#123;4&#125;[A-HJ-NP-Z0-9挂学警港澳]&#123;1&#125;$/</span>;<br>    <span class="hljs-keyword">if</span>(val.<span class="hljs-property">length</span> === <span class="hljs-number">7</span> )&#123;<br>        <span class="hljs-keyword">return</span> greenReg.<span class="hljs-title function_">test</span>(val);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(val.<span class="hljs-property">length</span> === <span class="hljs-number">8</span> )&#123;<br>        <span class="hljs-keyword">return</span> blueReg.<span class="hljs-title function_">test</span>(val);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-中文字符验证"><a href="#5-中文字符验证" class="headerlink" title="5. 中文字符验证"></a>5. 中文字符验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>一段字符</font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">chineseReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^[\u4e00-\u9fa5]+$/gi</span>.<span class="hljs-title function_">test</span>(val);<br>   <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-URL格式验证"><a href="#6-URL格式验证" class="headerlink" title="6. URL格式验证"></a>6. URL格式验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>url地址</font> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">urlReg</span>(<span class="hljs-params">val</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-regexp">/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w-.\/?%&amp;=]*)?/</span>.<span class="hljs-title function_">test</span>(val);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-字符中是否包含某值验证"><a href="#7-字符中是否包含某值验证" class="headerlink" title="7.  字符中是否包含某值验证"></a>7.  字符中是否包含某值验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>字符串</font></p><p>​<font color="#9c26b0" size=2>param：</font><font color="#f37b1d" size=2>验证的值</font>  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">containReg</span>(<span class="hljs-params">val,param</span>)&#123;<br>    <span class="hljs-keyword">return</span> val.<span class="hljs-title function_">indexOf</span>(param) &gt;= <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-字符串长度是否在某个范围内验证"><a href="#8-字符串长度是否在某个范围内验证" class="headerlink" title="8. 字符串长度是否在某个范围内验证"></a>8. 字符串长度是否在某个范围内验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>字符串</font></p><p>​<font color="#9c26b0" size=2>param：</font><font color="#f37b1d" size=2>两位的数组</font>  <font size=2> 例：” [ 2 , 5 ] “ </font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">strLengthReg</span>(<span class="hljs-params">val,param</span>)&#123;<br>    <span class="hljs-keyword">return</span> val.<span class="hljs-property">length</span> &gt;= param[<span class="hljs-number">0</span>] &amp;&amp; val.<span class="hljs-property">length</span> &lt;= param[<span class="hljs-number">1</span>];<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-数字是否在某个区域内验证"><a href="#9-数字是否在某个区域内验证" class="headerlink" title="9. 数字是否在某个区域内验证"></a>9. 数字是否在某个区域内验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>数字</font></p><p>​<font color="#9c26b0" size=2>param：</font><font color="#f37b1d" size=2>两位的数组</font>  <font size=2>例：” [ 50 , 100 ] “ </font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">rangeReg</span>(<span class="hljs-params">val,param</span>)&#123;<br>    <span class="hljs-keyword">return</span> val &gt;= param[<span class="hljs-number">0</span>] &amp;&amp; val &lt;= param[<span class="hljs-number">1</span>];<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="10-只有数字和字母验证"><a href="#10-只有数字和字母验证" class="headerlink" title="10. 只有数字和字母验证"></a>10. 只有数字和字母验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>字符串</font>  <font size=2>例：密码：” qwer1234 “</font></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">enAndNumReg</span>(<span class="hljs-params">val</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-regexp">/^[0-9a-zA-Z]*$/g</span>.<span class="hljs-title function_">test</span>(val);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11-Json字符串验证"><a href="#11-Json字符串验证" class="headerlink" title="11. Json字符串验证"></a>11. Json字符串验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>对象</font> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">jsonReg</span>(<span class="hljs-params">val</span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> val == <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">var</span> obj = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(val);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj == <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; obj) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (e) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="12-房间号编码验证"><a href="#12-房间号编码验证" class="headerlink" title="12. 房间号编码验证"></a>12. 房间号编码验证</h3><p>​<font color="#9c26b0" size=2>val：</font><font color="#f37b1d" size=2>房间编号</font> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">jsonReg</span>(<span class="hljs-params">val</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-regexp">/^[0-9][-][0-9][-][0-9]&#123;3&#125;$/g</span>.<span class="hljs-title function_">test</span>(val)<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp H5 水平居中 水平垂直居中</title>
    <link href="/2021/05/18/H5%20%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%20%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <url>/2021/05/18/H5%20%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%20%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</url>
    
    <content type="html"><![CDATA[<h3 id="Tips：元素一般分为-块级元素-和-行内元素"><a href="#Tips：元素一般分为-块级元素-和-行内元素" class="headerlink" title="Tips：元素一般分为  块级元素  和  行内元素 "></a>Tips：元素一般分为  <font color=#9c26b0>块级元素  </font>和  <font color=#9c26b0>行内元素 </font></h3><p>块级元素可以设置高度，宽度，行内元素则不能，如果将行内元素变成行内块元素就可以设置宽高了，只需要将 <font color="#f37b1d">display</font> 属性设置为<font color=#8dc63f> inline-block </font>即可;</p><h3 id="一、-水平居中"><a href="#一、-水平居中" class="headerlink" title="一、 水平居中"></a>一、 水平居中</h3><p>​1.行内元素水平居中：给行内元素的父级元素设置 <font color="#f37b1d">text-align:</font> <font color="#8dc63f">center ;</font></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>   <br></code></pre></td></tr></table></figure><p>​2.块级元素水平居中：确保块级元素有一个宽度，给行内元素设置  <font color="#f37b1d">display:</font> <font color="#8dc63f">block ;</font> 属性，再给该元素设置 <font color="#f37b1d">margin:</font> <font color="#8dc63f">0  auto ;</font></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 100%;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block; width: 50px; height: 50px; margin: 0 auto ;&quot;</span>&gt;</span><br>            水平居中<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- or --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 100%;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 50px; height: 50px; margin: 0 auto ;&quot;</span>&gt;</span><br>            水平居中<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​3.相对与绝对定位水平居中：确保父级元素具有相对定位属性 <font color="#8dc63f">relative</font> , 需要居中的子级元素具有绝对定位属性 <font color="#8dc63f">absolute</font> 。再给子级元素设置  <font color="#f37b1d">left: </font> <font color="#8dc63f">50% ;</font>   <font color="#f37b1d">transform: </font> <font color="#8dc63f">translateX(-50%) ;</font> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; left: 50%; transform: translateX(-50%);&quot;</span>&gt;</span><br>    水平居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- or --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; right: 50%; transform: translateX(50%);&quot;</span>&gt;</span><br>    水平居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​4.使用 <span style="background:#e03997;"> calc() </span> 函数：看懂第3点方法，这第4点方法显得有些鸡肋了。这是在css3以前常见的方式。缺点很容易看出，宽度和减去的常量不能很好的动态变化；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; width: 100px; left: calc(50% - 50px);&quot;</span>&gt;</span><br>    水平居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- or --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; width: 100px; right: calc(50% + 50px);&quot;</span>&gt;</span><br>    水平居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="二、水平垂直居中"><a href="#二、水平垂直居中" class="headerlink" title="二、水平垂直居中"></a>二、水平垂直居中</h3><p>​能够理解上述水平居中，那么水平垂直居中就很容易理解，需要注意的就是如何垂直。</p><p>​1.块级元素水平垂直居中：给元素的父级元素设置具体高度 <font color="#f37b1d">line-height</font> 等于<font color="#f37b1d"> height</font> 高度</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center; height: 100px; line-height:100px&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>水平垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​2.相对与绝对定位水平垂直居中：再给子级元素设置  <font color="#f37b1d">left: </font> <font color="#8dc63f">50% ;</font>   <font color="#f37b1d">top: </font> <font color="#8dc63f">50% ;</font>   <font color="#f37b1d">transform: </font> <font color="#8dc63f">translate(-50%，-50%) ;</font> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; left: 50%; top: 50%; transform: translate(-50%,-50%);&quot;</span>&gt;</span><br>    水平垂直居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​3. 固定定位中 <font color="#f37b1d">left: </font> <font color="#8dc63f">0 ;</font>   <font color="#f37b1d">top: </font> <font color="#8dc63f">0 ;</font> <font color="#f37b1d">right: </font> <font color="#8dc63f">0 ;</font>   <font color="#f37b1d">bottom: </font> <font color="#8dc63f">0 </font>: 确保元素有一固定宽高，再给元素设置一个 <font color="#f37b1d">margin: </font> <font color="#8dc63f">auto ;</font> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed; top: 0; left: 0; right: 0; bottom: 0; margin: auto; width: 100px; height: 100px&quot;</span>&gt;</span><br>    水平垂直居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​4.<font color="#f37b1d"> flex </font>布局：最常见的一种布局方式，属性自由多变。给元素设置<br>    <font color="#f37b1d">display: </font> <font color="#8dc63f">flex ;</font>  <font color="#f37b1d">align-items: </font> <font color="#8dc63f">center;</font> <font color="#f37b1d">justify-content: </font> <font color="#8dc63f">center ;</font> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: flex; align-items: center; justify-content: center;width: 200px; height: 200px&quot;</span>&gt;</span><br>    水平垂直居中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>常见，常用的水平居中，水平垂直居中的方法都在这了。当然还有很多其它的方法，感兴趣话可以去研究研究。</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp H5 IOS浏览器长按没有保存图片</title>
    <link href="/2021/05/17/H5%20IOS%E6%B5%8F%E8%A7%88%E5%99%A8%E9%95%BF%E6%8C%89%E6%B2%A1%E6%9C%89%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/"/>
    <url>/2021/05/17/H5%20IOS%E6%B5%8F%E8%A7%88%E5%99%A8%E9%95%BF%E6%8C%89%E6%B2%A1%E6%9C%89%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h2 id="项目场景"><a href="#项目场景" class="headerlink" title="项目场景"></a>项目场景</h2><p><font color="8879a3">用户需要长按手机屏幕保存图片，Android手机都可以保存，iOS 手机中的Safari浏览器无法长按保存图片。兼容性问题，不用多考虑直接上解决方法。<br></font></p><hr><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">image&#123;<br>-webkit-touch-callout<span class="hljs-selector-pseudo">:default</span>；<br>&#125;<br></code></pre></td></tr></table></figure><p>这种问题经常会出现在iPhoneX以上的机型中，尤其是在自带的浏览器中（Safari）。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp H5中 url文本超出容器</title>
    <link href="/2021/05/17/uniapp%20H5%E4%B8%AD%20url%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E5%AE%B9%E5%99%A8/"/>
    <url>/2021/05/17/uniapp%20H5%E4%B8%AD%20url%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E5%AE%B9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h2><p><font color=#8799a3 >为用户提供链接跳转功能，常常将url地址展示出来。url文本出现不换行的现象，往往超出父级的容器的宽度。<br></font><br> <hr></p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<br>word-warp:break-word;<br>&#125;<br><br><span class="hljs-comment">/* 或者 */</span><br><br><span class="hljs-selector-tag">div</span>&#123;<br><span class="hljs-attribute">word-break</span>:break-all;<br>&#125;<br></code></pre></td></tr></table></figure><p><font color="#9c26b0" size =3> word-wrap： </font><font color="#a5673f" size =3>break-word </font><font color="#8799a3  " size =3>作用是强制让文字换行。一般情况下当父级宽度不够的时候，不管英文单词自动换行是当一整个单词不够放时，整个单词一起换行到下一行，看似很合理的写法，但是在有些情况下会出现不可预期的情况。就是当一个英文单词的长度超过了父级容器长度时，英文单词还是会显示一整个单词而导致超出容器范围。<br> </font></p><p> <font color="#9c26b0" size =3>word-break： </font><font color="#a5673f" size =3>break-all</font><font color="#8799a3  " size =3> 作用是当遇到一个单词很长时，单词自动换行，也会使上一行空出很多空间。在这种情况下，IE创造出这个新的属性 word-break:break-all 它强制文字换行，无论一句话到达父级容器宽度时是不是一整个单词，都会强制换行，使单词断句，如果碰上一个单词超出父级容器宽度，会使单词断开并换行。<br> </font><br> <hr></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uni-app 项目线上发布时出现跨域的可能原因</title>
    <link href="/2021/05/14/uni-app%20%E9%A1%B9%E7%9B%AE%E7%BA%BF%E4%B8%8A%E5%8F%91%E5%B8%83%E6%97%B6%E5%87%BA%E7%8E%B0%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8E%9F%E5%9B%A0/"/>
    <url>/2021/05/14/uni-app%20%E9%A1%B9%E7%9B%AE%E7%BA%BF%E4%B8%8A%E5%8F%91%E5%B8%83%E6%97%B6%E5%87%BA%E7%8E%B0%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8E%9F%E5%9B%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p><font color=#8799a3 size=3>uniapp H5项目线上测试出现了跨域的问题，在本地通过代理明明都是可以调用接口，上线后就出现了跨域的问题。请求方式是POST请求<img src="https://img-blog.csdnimg.cn/20210514165149715.png#pic_center" alt="在这里插入图片描述"><br>查看 network 发现相同的接口发送了两次请求<img src="https://img-blog.csdnimg.cn/20210514165401121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其中有一个便是知识盲区的option请求<img src="https://img-blog.csdnimg.cn/20210514165548296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80OTE3NTUwMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p><font color=#8799a3>原来是因为浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">（1) 请求方法是以下三种方法之一：<br>HEAD<br>GET<br>POST<br>（2）HTTP的头信息不超出以下几种字段：<br>Accept<br>Accept-Language<br>Content-Language<br>Last-Event-ID<br>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain<br></code></pre></td></tr></table></figure><p>只要同时满足以上两个条件，就属于简单请求；</p><p>相反的非简单请求就是不满足以上两个条件。<br><font color=#8799a3 size=3><br>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application&#x2F;json。<br><font color=#8799a3 size=3><br>非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）</font><br></font><font color=#8799a3 size=3><br>浏览器发现，这是一个非简单请求，就自动发出一个”预检”请求，要求服务器确认可以这样请求。下面是这个”预检”请求的HTTP头信息。”预检”请求用的请求方法是OPTIONS，表示这个请求是用来询问的。<br></font><br>简单点说检查你的请求header头中是否存在‘</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">Accept<br>Accept-Language<br>Content-Language<br>Last-Event-ID<br>Content-Type：application/x-www-form-urlencoded、multipart/form-data、text/plain<br></code></pre></td></tr></table></figure><p>以外的属性。例如：自定义属性 “clientInfo” 等。</p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp H5 navigateBack无法返回上一层级</title>
    <link href="/2021/05/13/uniapp%20H5%20navigateBack%E6%97%A0%E6%B3%95%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E5%B1%82%E7%BA%A7/"/>
    <url>/2021/05/13/uniapp%20H5%20navigateBack%E6%97%A0%E6%B3%95%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E5%B1%82%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p>使用自定义导航栏组件navbar，<img src="https://img-blog.csdnimg.cn/20210513170617508.png#pic_center" alt="在这里插入图片描述"><br>返回到上一层级时失败</p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p>H5在PC端打开，当前页面重新加载的情况下，出现navigateBack不能返回，由于H5端页面刷新后返回页面栈会消失</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">BackPage</span>() &#123;<br><span class="hljs-comment">// uni.navigateBack(&#123;</span><br><span class="hljs-comment">// delta: 1</span><br><span class="hljs-comment">// &#125;);</span><br>history.<span class="hljs-title function_">back</span>();<span class="hljs-comment">//back() 方法可加载历史列表中的前一个 URL（如果存在）。</span><br>&#125;<br><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 视频上传与展示</title>
    <link href="/2021/04/14/uniapp%20%E8%A7%86%E9%A2%91%E4%B8%8A%E4%BC%A0%E4%B8%8E%E5%B1%95%E7%A4%BA/"/>
    <url>/2021/04/14/uniapp%20%E8%A7%86%E9%A2%91%E4%B8%8A%E4%BC%A0%E4%B8%8E%E5%B1%95%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h2><p><font color=#8799a3  >uniapp 上传视频阿里OSS对象存储</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h2 id="需求描述："><a href="#需求描述：" class="headerlink" title="需求描述："></a>需求描述：</h2><p><font color=#999AAA >H5移动端开发中需要用户上传2秒左右视频的需求时。需要将视频上传至阿里oss中存储，并且下载到当前页面进行展示。</font></p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>需要用到的依赖包：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install ali-oss <span class="hljs-comment">--save </span><br></code></pre></td></tr></table></figure><p>创建一个 upload.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">OSS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;ali-oss&quot;</span>); <span class="hljs-comment">//引入安装包；</span><br><br><span class="hljs-comment">//配置 阿里 oss 存储对应的 bucket 桶</span><br><span class="hljs-keyword">var</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title function_">OSS</span>(&#123;<br><span class="hljs-attr">region</span>: <span class="hljs-string">&quot;oss-cn-beijing&quot;</span>, <span class="hljs-comment">//指申请OSS服务时的地域</span><br><span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;https://oss-cn-beijing.aliyuncs.com&quot;</span>, <span class="hljs-comment">//指定为HTTPS，也可以是IP的形式 region将会被忽略</span><br><span class="hljs-attr">accessKeyId</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>, <span class="hljs-comment">//  填写你的accessKeyId</span><br><span class="hljs-attr">accessKeySecret</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxx&quot;</span>, <span class="hljs-comment">// 填写你的accessKeySecret</span><br><span class="hljs-attr">bucket</span>: <span class="hljs-string">&quot;xxxx&quot;</span>, <span class="hljs-comment">// 桶的名称</span><br><span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// 配合region使用。如果指定secure为true，则使用HTTPS访问。</span><br>&#125;);<br><br><span class="hljs-comment">// e : 文件对象，filename：存储文件名</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadVid</span>(<span class="hljs-params">e, filename</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">showLoading</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;正在上传...&#x27;</span><br>&#125;);<br><span class="hljs-keyword">if</span> (e.<span class="hljs-property">tempFile</span>.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>) &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;未找到视频&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span><br>&#125;)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;;<br><span class="hljs-keyword">let</span> file = e.<span class="hljs-property">tempFile</span>;<br><span class="hljs-keyword">if</span> (file.<span class="hljs-property">size</span> &gt; <span class="hljs-number">20971520</span>) &#123; <span class="hljs-comment">// 20M  </span><br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;您上传的视频文件过大，请重新上传1-2秒的人脸视频！&quot;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-keyword">let</span> time = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>y,<br>m,<br>d;<br>y = time.<span class="hljs-title function_">getFullYear</span>();<br>m = <span class="hljs-title class_">String</span>(time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>).<span class="hljs-property">length</span> === <span class="hljs-number">2</span> ?<br>time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span> :<br><span class="hljs-string">&quot;0&quot;</span> + (time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>);<br>d = <span class="hljs-title function_">tring</span>(time.<span class="hljs-title function_">getDate</span>()).<span class="hljs-property">length</span> === <span class="hljs-number">2</span> ?<br>time.<span class="hljs-title function_">getDate</span>() :<br><span class="hljs-string">&quot;0&quot;</span> + time.<span class="hljs-title function_">getDate</span>();<br><span class="hljs-keyword">let</span> dfilefold = y + m + d;<br><span class="hljs-keyword">let</span> r = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>().<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">substr</span>(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">let</span> name = filename + dfilefold + <span class="hljs-string">&quot;/&quot;</span> + r + <span class="hljs-string">&quot;.mp4&quot;</span>;<br>client.<span class="hljs-title function_">multipartUpload</span>(name, file).<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">result</span>) &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;上传成功,请点击提交&quot;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;)<br><span class="hljs-keyword">let</span> url = result.<span class="hljs-property">res</span>.<span class="hljs-property">requestUrls</span>[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">var</span> index = url.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;?&quot;</span>);<br>url = url.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, index);<br><span class="hljs-title function_">resolve</span>(url);<br>&#125;)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;上传失败&quot;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;)<br><span class="hljs-title function_">reject</span>(err)<br>&#125;);<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-title function_">reject</span>(err)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>在uniapp 项目组件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>视频认证（上传1-2秒左右人脸视频）：<br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 310rpx;&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;personVideo&quot;</span> <span class="hljs-attr">controls</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">tap</span>=<span class="hljs-string">&quot;uploadVidfn(&#x27;realname/&#x27;)&quot;</span>&gt;</span>上传视频<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">import</span> &#123;uploadVid&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../utils/upload.js&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">personVideo</span>: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;;<br>&#125;,<br><span class="hljs-attr">methods</span>:&#123;<br><span class="hljs-comment">// 选择视频上传</span><br><span class="hljs-title function_">uploadVidfn</span>(<span class="hljs-params">filename</span>) &#123;<br><span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br>uni.<span class="hljs-title function_">chooseVideo</span>(&#123;<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">uploadVid</span>(res, filename).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>that.<span class="hljs-property">personVideo</span> = res;<br>&#125;);<br>&#125;<br>&#125;)<br>   &#125;,<br>   &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp 图片上传与展示</title>
    <link href="/2021/04/13/uniapp%20%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E4%B8%8E%E5%B1%95%E7%A4%BA/"/>
    <url>/2021/04/13/uniapp%20%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E4%B8%8E%E5%B1%95%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p><font color=#8799a3  >uniapp 图片 上传 阿里 OSS 对象存储 </font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="需求描述："><a href="#需求描述：" class="headerlink" title="需求描述："></a>需求描述：</h1><p><font color=#8799a3  >H5移动端开发中需要用户上传图片头像、身份证件等需求时。需要将图片上传至阿里oss中存储，并且下载到当前页面进行展示。<br> </font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p><font color=#999AAA >代码如下：</font></p><p>需要用到的依赖包：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install ali-oss <span class="hljs-comment">--save </span><br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install lrz <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>创建一个 upload.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">OSS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;ali-oss&quot;</span>); <span class="hljs-comment">//引入安装包；</span><br><span class="hljs-keyword">const</span> lrz = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;lrz&#x27;</span>);<br><br><span class="hljs-comment">//配置 阿里 oss 存储对应的 bucket 桶</span><br><span class="hljs-keyword">var</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title function_">OSS</span>(&#123;<br><span class="hljs-attr">region</span>: <span class="hljs-string">&quot;oss-cn-beijing&quot;</span>, <span class="hljs-comment">//指申请OSS服务时的地域</span><br><span class="hljs-attr">endpoint</span>: <span class="hljs-string">&quot;https://oss-cn-beijing.aliyuncs.com&quot;</span>, <span class="hljs-comment">//指定为HTTPS，也可以是IP的形式 region将会被忽略</span><br><span class="hljs-attr">accessKeyId</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxx&quot;</span>, <span class="hljs-comment">//  填写你的accessKeyId</span><br><span class="hljs-attr">accessKeySecret</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxx&quot;</span>, <span class="hljs-comment">// 填写你的accessKeySecret</span><br><span class="hljs-attr">bucket</span>: <span class="hljs-string">&quot;xxxx&quot;</span>, <span class="hljs-comment">// 桶的名称</span><br><span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// 配合region使用。如果指定secure为true，则使用HTTPS访问。</span><br>&#125;);<br><br><span class="hljs-comment">// 阿里云上传图片</span><br><br><span class="hljs-comment">// e : 文件对象，filename：存储文件名，tag：识别当前事件的种类，配合fn使用，imgpath：图片路径，fn：回调函数</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadImg</span>(<span class="hljs-params">e, filename, tag, imgpath, fn</span>) &#123;<br>uni.<span class="hljs-title function_">showLoading</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;正在上传...&#x27;</span><br>&#125;);<br><span class="hljs-keyword">if</span> (e.<span class="hljs-property">tempFiles</span>.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>) &#123;<br>uni.<span class="hljs-title function_">hideLoading</span>();<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>:<span class="hljs-string">&#x27;未找到图片&#x27;</span>,<br><span class="hljs-attr">icon</span>:<span class="hljs-string">&#x27;none&#x27;</span><br>&#125;)<br>&#125;;<br><span class="hljs-comment">// 检测图片大小</span><br><span class="hljs-keyword">let</span> file = e.<span class="hljs-property">tempFiles</span>[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">if</span> (file.<span class="hljs-property">size</span> &gt; <span class="hljs-number">15728640</span>) &#123; <span class="hljs-comment">// 15M  </span><br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;您上传的图片文件过大，请重新上传！&quot;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-title function_">lrz</span>(file, &#123;<br><span class="hljs-attr">width</span>: <span class="hljs-number">500</span>,<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) &#123;<br><span class="hljs-keyword">let</span> base64 = res.<span class="hljs-property">base64</span>;<br><span class="hljs-keyword">let</span> blob = <span class="hljs-title function_">convertBase64UrlToBlob</span>(base64);<br><span class="hljs-keyword">let</span> r = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>().<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">substr</span>(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">let</span> time = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>y, m, d;<br>y = time.<span class="hljs-title function_">getFullYear</span>();<br>m = <span class="hljs-title class_">String</span>(time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>).<span class="hljs-property">length</span> === <span class="hljs-number">2</span> ? (time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>) : <span class="hljs-string">&quot;0&quot;</span> + (time.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>);<br>d = <span class="hljs-title class_">String</span>(time.<span class="hljs-title function_">getDate</span>()).<span class="hljs-property">length</span> === <span class="hljs-number">2</span> ? (time.<span class="hljs-title function_">getDate</span>()) : <span class="hljs-string">&quot;0&quot;</span> + time.<span class="hljs-title function_">getDate</span>();<br><span class="hljs-keyword">let</span> dfilefold = y + m + d; <span class="hljs-comment">// 创建时间文件夹</span><br><span class="hljs-keyword">let</span> name;<br><span class="hljs-keyword">if</span> (imgpath.<span class="hljs-title function_">indexOf</span>(filename) != -<span class="hljs-number">1</span>) &#123;<br><span class="hljs-keyword">let</span> tmps = imgpath.<span class="hljs-title function_">split</span>(filename)[<span class="hljs-number">1</span>].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;?&#x27;</span>)[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 获取时间戳</span><br>name = filename + tmps;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>name = filename + dfilefold + <span class="hljs-string">&#x27;/&#x27;</span> + r;<br>&#125;<br><span class="hljs-comment">// 上传图片</span><br>client.<span class="hljs-title function_">put</span>(name, blob).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> &#123;<br><span class="hljs-comment">// 上传成功 ；</span><br>uni.<span class="hljs-title function_">hideLoading</span>();<br><span class="hljs-comment">// 得到图片在oss中的url地址；</span><br><span class="hljs-keyword">let</span> path = result.<span class="hljs-property">url</span>;<br><span class="hljs-title function_">fn</span>(tag, path);<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err)<br>uni.<span class="hljs-title function_">showToast</span>(&#123;<br><span class="hljs-attr">title</span>: <span class="hljs-string">&quot;图上传失败，请重试！&quot;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span><br>&#125;)<br>&#125;);<br>&#125;)<br>&#125;<br><br><span class="hljs-comment">// 辅助函数 </span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">convertBase64UrlToBlob</span>(<span class="hljs-params">urlData</span>) &#123;<br><span class="hljs-keyword">var</span> bytes = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">atob</span>(urlData.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>)[<span class="hljs-number">1</span>]); <span class="hljs-comment">//去掉url的头，并转换为byte</span><br><span class="hljs-comment">//处理异常,将ascii码小于0的转换为大于0</span><br><span class="hljs-keyword">var</span> ab = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayBuffer</span>(bytes.<span class="hljs-property">length</span>);<br><span class="hljs-keyword">var</span> ia = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(ab);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; bytes.<span class="hljs-property">length</span>; i++) &#123;<br>ia[i] = bytes.<span class="hljs-title function_">charCodeAt</span>(i);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([ab], &#123;<br><span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;image/png&#x27;</span><br>&#125;);<br>&#125;;<br><br></code></pre></td></tr></table></figure><p>在uniapp 项目组件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;idImage1&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;aspectFit&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;idImage1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 100rpx;&quot;</span>@<span class="hljs-attr">tap</span>=<span class="hljs-string">&quot;uploadImgfn(&#x27;myImage/&#x27;, 1, idImage1)&quot;</span> <span class="hljs-attr">v-else</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;idImage1&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;aspectFit&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;idImage2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 100rpx;&quot;</span>@<span class="hljs-attr">tap</span>=<span class="hljs-string">&quot;uploadImgfn(&#x27;myImage/&#x27;, 2, idImage2)&quot;</span> <span class="hljs-attr">v-else</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>......<br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-comment">// 引入方法；</span><br><span class="hljs-keyword">import</span> &#123;uploadImg&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../../utils/upload.js&quot;</span>;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">idImage1</span>: <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-comment">// 图片1</span><br><span class="hljs-attr">idImage2</span>:<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//  图片2</span><br><span class="hljs-attr">idImage3</span>:<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//  图片3</span><br>&#125;;<br>&#125;,<br><br>methods：&#123;<br><span class="hljs-title function_">uploadImgfn</span>(<span class="hljs-params">filename, tag, imgpath</span>) &#123;<br><span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br><span class="hljs-comment">// 选择图片</span><br>uni.<span class="hljs-title function_">chooseImage</span>(&#123;<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br><span class="hljs-comment">// 调用方法，上传图片</span><br><span class="hljs-title function_">uploadImg</span>(res, filename, tag, imgpath, <span class="hljs-keyword">function</span>(<span class="hljs-params">tag, path</span>) &#123;<br><span class="hljs-comment">// 展示上传的图片</span><br><span class="hljs-keyword">if</span> (tag == <span class="hljs-number">1</span>) &#123;<br>that.<span class="hljs-property">idImage1</span> = path + <span class="hljs-string">&quot;?&quot;</span> + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (tag == <span class="hljs-number">2</span>) &#123;<br>that.<span class="hljs-property">idImage1</span> = path + <span class="hljs-string">&quot;?&quot;</span> + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (tag == <span class="hljs-number">3</span>) &#123;<br>that.<span class="hljs-property">idImage3</span> = path + <span class="hljs-string">&quot;?&quot;</span> + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br>&#125;<br>&#125;)<br>&#125;<br>&#125;);<br>&#125;,<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h2 id="优化部分"><a href="#优化部分" class="headerlink" title="优化部分"></a>优化部分</h2><p><font color=#8799a3  >感兴趣的小伙伴可以尝试一下封装成Promise对象，这样就用传递回调函数fn，也不用传递tag参数。在.then（）就可以给idImage进行赋值 url</font></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>css超出多行隐藏记录</title>
    <link href="/2021/01/06/css%E8%B6%85%E5%87%BA%E5%A4%9A%E8%A1%8C%E9%9A%90%E8%97%8F%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/01/06/css%E8%B6%85%E5%87%BA%E5%A4%9A%E8%A1%8C%E9%9A%90%E8%97%8F%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="单行隐藏"><a href="#单行隐藏" class="headerlink" title="单行隐藏"></a>单行隐藏</h3><p>overflow: hidden; &#x2F;<em>超出部分隐藏</em>&#x2F;</p><p>text-overflow:ellipsis; &#x2F;* 超出部分显示省略号 *&#x2F;</p><p>white-space: nowrap;&#x2F;*规定段落中的文本不进行换行 *&#x2F;</p><h3 id="多行隐藏"><a href="#多行隐藏" class="headerlink" title="多行隐藏"></a>多行隐藏</h3><p>overflow: hidden;</p><p>display: -webkit-box;&#x2F;&#x2F;将元素设为盒子伸缩模型显示</p><p>-webkit-box-orient: vertical;&#x2F;&#x2F;伸缩方向设为垂直方向</p><p>-webkit-line-clamp: 3;&#x2F;&#x2F;超出3行隐藏，并显示省略号</p><h4 id="注意多行隐藏中不可设置元素的高度"><a href="#注意多行隐藏中不可设置元素的高度" class="headerlink" title="注意多行隐藏中不可设置元素的高度"></a>注意多行隐藏中不可设置元素的高度</h4>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
